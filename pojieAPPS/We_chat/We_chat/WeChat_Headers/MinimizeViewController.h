//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MMUIViewController.h"

#import "CAAnimationDelegate-Protocol.h"
#import "MinimizeAbsorbFloatingViewDelegate-Protocol.h"
#import "MinimizeDraggableTaskViewDelegate-Protocol.h"
#import "MinimizeTaskStateViewDelegate-Protocol.h"
#import "WCActionSheetDelegate-Protocol.h"

@class MinimizeAbsorbFloatingView, MinimizeDraggableTaskView, MinimizeGestureCircleView, NSMutableArray, NSMutableDictionary, NSObject, NSString, UIButton, UIView;
@protocol MinimizeTaskDataSource, MinimizeVCDelegate;

@interface MinimizeViewController : MMUIViewController <MinimizeDraggableTaskViewDelegate, MinimizeTaskStateViewDelegate, WCActionSheetDelegate, CAAnimationDelegate, MinimizeAbsorbFloatingViewDelegate>
{
    _Bool _isAnimating;
    _Bool _isLastTimeReverseVertical;
    _Bool _hasSelectedGestureCircle;
    _Bool _hasMoveDraggableTaskViewLong;
    _Bool _hasAbsorbFloatingViewMoveLong;
    _Bool _shouldShowReachMaxCountWhenEndSwipe;
    id <MinimizeVCDelegate> _delegate;
    MinimizeAbsorbFloatingView *_absorbFloatingView;
    MinimizeGestureCircleView *_gestureCircleView;
    NSObject<MinimizeTaskDataSource> *_dataSource;
    UIView *_maximizeFromView;
    UIView *_maximizeFromIcon;
    UIButton *_backgroundCloseButton;
    NSMutableDictionary *_dicTaskKey2TaskViewCache;
    NSMutableArray *_draggableTaskViewList;
    NSMutableArray *_taskStateViewList;
    NSMutableDictionary *_dicStateNum2TaskStateViewCache;
    NSMutableArray *_finalTaskOrStateViewOrderListForAnimation;
    MinimizeDraggableTaskView *_lastHighlightTaskView;
    unsigned long long _taskListPageEnterTime;
    struct CGPoint _initialAdsorbFloatingViewOrigin;
    struct CGPoint _draggableTaskViewBeginTouchPoint;
}

@property(nonatomic) unsigned long long taskListPageEnterTime; // @synthesize taskListPageEnterTime=_taskListPageEnterTime;
@property(nonatomic) _Bool shouldShowReachMaxCountWhenEndSwipe; // @synthesize shouldShowReachMaxCountWhenEndSwipe=_shouldShowReachMaxCountWhenEndSwipe;
@property(nonatomic) struct CGPoint draggableTaskViewBeginTouchPoint; // @synthesize draggableTaskViewBeginTouchPoint=_draggableTaskViewBeginTouchPoint;
@property(nonatomic) _Bool hasAbsorbFloatingViewMoveLong; // @synthesize hasAbsorbFloatingViewMoveLong=_hasAbsorbFloatingViewMoveLong;
@property(nonatomic) _Bool hasMoveDraggableTaskViewLong; // @synthesize hasMoveDraggableTaskViewLong=_hasMoveDraggableTaskViewLong;
@property(nonatomic) _Bool hasSelectedGestureCircle; // @synthesize hasSelectedGestureCircle=_hasSelectedGestureCircle;
@property(retain, nonatomic) MinimizeDraggableTaskView *lastHighlightTaskView; // @synthesize lastHighlightTaskView=_lastHighlightTaskView;
@property(nonatomic) _Bool isLastTimeReverseVertical; // @synthesize isLastTimeReverseVertical=_isLastTimeReverseVertical;
@property(nonatomic) _Bool isAnimating; // @synthesize isAnimating=_isAnimating;
@property(retain, nonatomic) NSMutableArray *finalTaskOrStateViewOrderListForAnimation; // @synthesize finalTaskOrStateViewOrderListForAnimation=_finalTaskOrStateViewOrderListForAnimation;
@property(retain, nonatomic) NSMutableDictionary *dicStateNum2TaskStateViewCache; // @synthesize dicStateNum2TaskStateViewCache=_dicStateNum2TaskStateViewCache;
@property(retain, nonatomic) NSMutableArray *taskStateViewList; // @synthesize taskStateViewList=_taskStateViewList;
@property(retain, nonatomic) NSMutableArray *draggableTaskViewList; // @synthesize draggableTaskViewList=_draggableTaskViewList;
@property(retain, nonatomic) NSMutableDictionary *dicTaskKey2TaskViewCache; // @synthesize dicTaskKey2TaskViewCache=_dicTaskKey2TaskViewCache;
@property(retain, nonatomic) UIButton *backgroundCloseButton; // @synthesize backgroundCloseButton=_backgroundCloseButton;
@property(retain, nonatomic) UIView *maximizeFromIcon; // @synthesize maximizeFromIcon=_maximizeFromIcon;
@property(retain, nonatomic) UIView *maximizeFromView; // @synthesize maximizeFromView=_maximizeFromView;
@property(nonatomic) __weak NSObject<MinimizeTaskDataSource> *dataSource; // @synthesize dataSource=_dataSource;
@property(nonatomic) struct CGPoint initialAdsorbFloatingViewOrigin; // @synthesize initialAdsorbFloatingViewOrigin=_initialAdsorbFloatingViewOrigin;
@property(retain, nonatomic) MinimizeGestureCircleView *gestureCircleView; // @synthesize gestureCircleView=_gestureCircleView;
@property(retain, nonatomic) MinimizeAbsorbFloatingView *absorbFloatingView; // @synthesize absorbFloatingView=_absorbFloatingView;
@property(nonatomic) __weak id <MinimizeVCDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (_Bool)tryNotifyExitTaskListPage:(int)arg1;
- (void)highlightTaskView:(id)arg1;
- (id)getCurTaskViewWithPoint:(struct CGPoint)arg1 fromView:(id)arg2;
- (id)getCurTaskViewWithTouch:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)resetTaskAndStateViewWhenUpdateTask:(id)arg1;
- (id)cachedTaskStateView:(id)arg1;
- (_Bool)updateTaskAnimated:(id)arg1;
- (_Bool)updateTask:(id)arg1 Title:(id)arg2 Subtitle:(id)arg3 titleTail:(id)arg4 subTitleTail:(id)arg5;
- (_Bool)updateTask:(id)arg1 AndListOrderAnimated:(id)arg2;
- (void)animateRemoveTaskViewAndRearrangeUI:(id)arg1;
- (void)animateRemoveTaskView:(id)arg1;
- (_Bool)tryUpdateUIWhenRemoveTask:(id)arg1 IsForground:(_Bool)arg2;
- (void)resetGestureCircleViewToCanAddTaskState:(_Bool)arg1;
- (void)configGestureCircleViewSelectedFrame;
- (void)configGestureCircleViewNormalFrameWithProgress:(double)arg1;
- (_Bool)trySelectGestureCircleViewWith:(struct CGPoint)arg1 ReachMaxCount:(_Bool)arg2;
- (void)endSwipeToAddMinimize:(id)arg1 isComplete:(_Bool)arg2;
- (_Bool)canSwipeToAddMinimize:(id)arg1 Progress:(double)arg2 TouchPoint:(struct CGPoint)arg3 ShouldCancel:(_Bool *)arg4;
- (void)endSlideToShowAdsorbFloatingView:(id)arg1 isComplete:(_Bool)arg2;
- (void)slideToShowAdsorbFloatingView:(id)arg1 Progress:(double)arg2;
- (unsigned long long)getNormalTaskCount;
- (void)beginPopBackGesture:(id)arg1 GestureMode:(int)arg2;
- (void)showAllTaskViewCloseBtn;
- (void)hideAllTaskViewCloseBtn;
- (unsigned long long)positionTypeWithTaskViewFrame:(struct CGRect)arg1;
- (void)hideOtherTaskViewsAndShowAdsorbFloatingViewAnimated:(id)arg1 CurrentMaximizeTaskView:(id)arg2 Duration:(double)arg3;
- (void)hideTaskViewsAndShowAdsorbFloatingViewAnimated:(id)arg1 Duration:(double)arg2 completion:(CDUnknownBlockType)arg3;
- (void)makeSureAbsorbFloatingViewInVisibleArea;
- (void)animateAbsorbFloatingViewToAlpha:(double)arg1 Duration:(double)arg2;
- (id)getTaskView:(id)arg1;
- (void)setOtherTaskToBackground:(id)arg1;
- (void)transitionToMaximization:(id)arg1 Duration:(double)arg2;
- (void)animateShowAbsorbFloatingView:(id)arg1 Duration:(double)arg2 FromFrame:(struct CGRect)arg3;
- (void)animateSingleTaskAndShowAbsorbFloatingView:(id)arg1 Duration:(double)arg2;
- (void)animateAbsorbFloatingViewToCurrentBackgroundTaskList;
- (void)resetAdsorbFloatingViewWithBackgroundTaskList:(id)arg1 Animated:(_Bool)arg2;
- (void)resetAdsorbFloatingViewWithBackgroundTaskList:(id)arg1;
- (void)resetAdsorbFloatingViewWithBackgroundTaskList;
- (void)transitionToMinimization:(id)arg1 Duration:(double)arg2 FromFrame:(struct CGRect)arg3 toFrame:(struct CGRect)arg4;
- (id)getMaximizeTransitionFloatingView:(id)arg1;
- (void)onMinimizeAnimationEnd:(id)arg1;
- (struct CGRect)getConvertedVisibleFrame;
- (id)getCurrentMaskPathConvertedToCurrentScreenCoordinates;
- (id)getMinimizeTransitionFloatingView:(id)arg1;
- (void)hideAllTaskViewList;
- (void)onCloseTaskListButtonClick:(id)arg1;
- (_Bool)showAllTaskListAndHideAdsorbFloatingViewAnimated:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)resetTaskAndStateViewListFrameAndOrder:(_Bool)arg1;
- (double)layoutTaskOrStateView:(struct CGPoint)arg1 VerticalReverse:(_Bool)arg2 ViewList:(id)arg3 ViewYInset:(double)arg4;
- (void)moveTaskViewWithScale:(id)arg1 Scale:(double)arg2 PositionType:(unsigned long long)arg3;
- (void)tryGenAllTaskAndStateView;
- (void)showAllBackgroundTaskViewListAnimatedWithCompletion:(CDUnknownBlockType)arg1;
- (_Bool)shouldReverseShowListAndInstantlyMoveAbsorbFloatingViewIfNeed;
- (_Bool)isShowingTaskList;
- (void)resetAdsorbFloatingViewAlphaForCurrentBackgroundTask;
- (_Bool)maximizeTask:(id)arg1;
- (void)minimizeToAdsorbFloatingViewWithBackgroundTaskList:(id)arg1;
- (id)hasMinimizeTask:(id)arg1;
- (id)getAllTaskList;
- (id)getTask:(id)arg1;
- (id)getBackgroundTaskList;
- (void)removeTaskOrStateViewAnimated:(id)arg1;
- (id)getCurrentForegroundTask;
- (void)onTaskStateViewDeleteBtnClicked:(id)arg1;
- (void)onDraggableTaskViewDeleteBtnClicked:(id)arg1;
- (void)onDraggableTaskViewTouched:(id)arg1 EnterTaskScene:(int)arg2;
- (void)onDraggableTaskViewTap:(id)arg1;
- (void)onAbsorbFloatingViewEndResultMoveTo:(struct CGPoint)arg1;
- (void)onAbsorbFloatingViewBegin:(struct CGPoint)arg1;
- (void)onAbsorbFloatingViewLongPress:(struct CGPoint)arg1;
- (void)notifyEnterTaskFromAdsorbFloatingView:(id)arg1 EnterTaskScene:(int)arg2;
- (void)onAbsorbFloatingViewTap;
- (void)initGestureCircleView;
- (void)initAbsorbFloatView;
- (void)initCloseTaskListRelatedView;
- (void)viewDidLoad;
- (void)viewWillAppear:(_Bool)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

