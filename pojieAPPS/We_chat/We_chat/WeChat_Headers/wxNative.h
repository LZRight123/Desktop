//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NativeTask;

@interface wxNative : NSObject
{
    struct OpaqueJSContext *_jscontext;
    struct MBUdpScriptState *_udpScriptState;
    // Error parsing type: ^{MBUdpEngine=^^?^^?{mutex={_opaque_pthread_mutex_t=q[56c]}}^{MBUdpClient}{list<MBSaveRemote *, std::__1::allocator<MBSaveRemote *> >={__list_node_base<MBSaveRemote *, void *>=^{__list_node_base<MBSaveRemote *, void *>}^{__list_node_base<MBSaveRemote *, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<MBSaveRemote *, void *> > >=Q}}^?^?{atomic<bool>=AB}{atomic<bool>=AB}{atomic<bool>=AB}^{thread}q^v^v}, name: _udpEngine
    // Error parsing type: ^{LockStepLogic=^^?^{RoomInfo}^{LockStepConfig}^{LockStepCache}^{LockStepSync}^{LockStepReconnector}^{MBUdpEngine}^{TimerManager}^v^v{atomic<bool>=AB}{atomic<bool>=AB}^?^?^?^v^{MBReport}q{mutex={_opaque_pthread_mutex_t=q[56c]}}{list<Action *, std::__1::allocator<Action *> >={__list_node_base<Action *, void *>=^{__list_node_base<Action *, void *>}^{__list_node_base<Action *, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<Action *, void *> > >=Q}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{map<int, bool, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, bool> > >={__tree<std::__1::__value_type<int, bool>, std::__1::__map_value_compare<int, std::__1::__value_type<int, bool>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, bool> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, bool>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, bool>, std::__1::less<int>, true> >=Q}}}{map<int, bool, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, bool> > >={__tree<std::__1::__value_type<int, bool>, std::__1::__map_value_compare<int, std::__1::__value_type<int, bool>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, bool> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, bool>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, bool>, std::__1::less<int>, true> >=Q}}}qqiq^{LockStepTimerInfo}^{LockStepTimerInfo}iiq}, name: _lockstepLogic
    struct LockStepScriptState *_lockstepScriptState;
    NativeTask *lockstepTask;
    NativeTask *udpTask;
    struct LockStepCallback *m_pCallback;
}

- (void).cxx_destruct;
- (void)dealloc;
- (void)releaseContext;
- (void)setReportDelegate:(id)arg1;
- (void)setLogDelegate:(id)arg1;
- (id)initWithJSContext:(struct OpaqueJSContext *)arg1 version:(float)arg2 parent:(struct OpaqueJSValue *)arg3;

@end

