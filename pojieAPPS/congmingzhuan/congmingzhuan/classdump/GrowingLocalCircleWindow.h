//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <OfferWallBase/GrowingWindowView.h>

#import <OfferWallBase/UIAlertViewDelegate-Protocol.h>

@class GROMagnifierView, GrowingHelperMenu, GrowingTaggedViews, NSArray, NSMapTable, NSMutableArray, NSString, UIPanGestureRecognizer, UITapGestureRecognizer, UIView, UIWindow;

@interface GrowingLocalCircleWindow : GrowingWindowView <UIAlertViewDelegate>
{
    _Bool _isStart;
    _Bool _isShow;
    UIPanGestureRecognizer *_panGest;
    NSMutableArray *_lastItemsMutable;
    UITapGestureRecognizer *_tapGest;
    UIView *_buttonView;
    long long _showCount;
    NSArray *_allTagItems;
    GrowingHelperMenu *_helperMenu;
    GrowingTaggedViews *_growingTaggedViews;
    NSMapTable *_allMaskViews;
    GROMagnifierView *_magnifierViewForSmallItem;
    UIWindow *_growingKeyWindow;
    struct CGRect _keyboardBounds;
}

+ (void)circleH5Pages:(id)arg1;
+ (void)circlePage;
+ (void)decreaseHiddenCount;
+ (void)increaseHiddenCount;
+ (id)shareInstance;
+ (id)lookUpShareInstance;
+ (_Bool)hasStartCircle;
+ (void)stopCircle;
+ (void)startCircle;
+ (void)hidden;
+ (_Bool)isShow;
+ (void)show;
@property(nonatomic) __weak UIWindow *growingKeyWindow; // @synthesize growingKeyWindow=_growingKeyWindow;
@property(retain, nonatomic) GROMagnifierView *magnifierViewForSmallItem; // @synthesize magnifierViewForSmallItem=_magnifierViewForSmallItem;
@property(retain, nonatomic) NSMapTable *allMaskViews; // @synthesize allMaskViews=_allMaskViews;
@property(nonatomic) __weak GrowingTaggedViews *growingTaggedViews; // @synthesize growingTaggedViews=_growingTaggedViews;
@property(retain, nonatomic) GrowingHelperMenu *helperMenu; // @synthesize helperMenu=_helperMenu;
@property(nonatomic) struct CGRect keyboardBounds; // @synthesize keyboardBounds=_keyboardBounds;
@property(retain, nonatomic) NSArray *allTagItems; // @synthesize allTagItems=_allTagItems;
@property(nonatomic) _Bool isShow; // @synthesize isShow=_isShow;
@property(nonatomic) long long showCount; // @synthesize showCount=_showCount;
@property(retain, nonatomic) UIView *buttonView; // @synthesize buttonView=_buttonView;
@property(nonatomic) _Bool isStart; // @synthesize isStart=_isStart;
@property(retain, nonatomic) UITapGestureRecognizer *tapGest; // @synthesize tapGest=_tapGest;
@property(retain, nonatomic) NSMutableArray *lastItemsMutable; // @synthesize lastItemsMutable=_lastItemsMutable;
@property(retain, nonatomic) UIPanGestureRecognizer *panGest; // @synthesize panGest=_panGest;
- (void).cxx_destruct;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)tapGest:(id)arg1;
- (void)showHelper;
- (void)hideHelper;
- (void)circleH5Pages:(id)arg1;
- (id)getNativePageItem:(id)arg1;
- (void)circlePage;
@property(retain, nonatomic) NSArray *lastItems;
- (void)updateSelectedMask:(id)arg1 doNotTrack:(_Bool)arg2;
- (void)showSelectedViewWithWindowImage:(id)arg1 items:(id)arg2;
- (void)hideButton;
- (void)showButton;
- (id)getElementFromNode:(id)arg1;
- (id)createMenuItemByCircleItem:(id)arg1 windowImage:(id)arg2;
- (id)createMenuItemByNode:(id)arg1 doNotTrack:(_Bool)arg2 element:(id)arg3 windowImage:(id)arg4 isH5Tag:(_Bool)arg5;
- (void)delayCirclePoint:(id)arg1;
- (void)removeMagnifier;
- (id)takeSnapshotOfMainWindowForTouchPoint:(struct CGPoint)arg1;
- (void)addMagnifierViewForSmallView:(id)arg1 withTouchPoint:(struct CGPoint)arg2;
- (void)panGest:(id)arg1;
- (_Bool)thisNodeIsOneRowOfTableView:(id)arg1;
- (id)nodesForPoint:(struct CGPoint)arg1;
- (void)checkView:(id)arg1 withHitPoint:(struct CGPoint)arg2 andResult:(id)arg3;
- (void)setButtonCenter:(struct CGPoint)arg1;
- (void)didMoveToSuperview;
- (void)resetWindowFrame;
- (void)keyboardDidHide:(id)arg1;
- (void)keyboardWillShow:(id)arg1;
- (void)updateKeyboardFrame:(id)arg1;
- (id)init;
- (_Bool)growingNodeDonotCircle;
- (void)didlogout;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

