#line 1 "/Users/liangze/Documents/Desktop/pojieAPPS/Qianka/QiankaDylib/CCTweakTool/privateApis/__LSApplication.xm"


#import <UIKit/UIKit.h>
#import "__LSApplication.h"
#import "CCHelpTool.h"


#include <substrate.h>
#if defined(__clang__)
#if __has_feature(objc_arc)
#define _LOGOS_SELF_TYPE_NORMAL __unsafe_unretained
#define _LOGOS_SELF_TYPE_INIT __attribute__((ns_consumed))
#define _LOGOS_SELF_CONST const
#define _LOGOS_RETURN_RETAINED __attribute__((ns_returns_retained))
#else
#define _LOGOS_SELF_TYPE_NORMAL
#define _LOGOS_SELF_TYPE_INIT
#define _LOGOS_SELF_CONST
#define _LOGOS_RETURN_RETAINED
#endif
#else
#define _LOGOS_SELF_TYPE_NORMAL
#define _LOGOS_SELF_TYPE_INIT
#define _LOGOS_SELF_CONST
#define _LOGOS_RETURN_RETAINED
#endif

@class LSApplicationProxy; @class LSApplicationWorkspace; @class LSPlugInKitProxy; @class LSApplicationRestrictionsManager; 
static bool (*_logos_meta_orig$_ungrouped$LSApplicationProxy$supportsSecureCoding)(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST, SEL); static bool _logos_meta_method$_ungrouped$LSApplicationProxy$supportsSecureCoding(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST, SEL); static NSString * (*_logos_orig$_ungrouped$LSApplicationProxy$applicationIdentifier)(_LOGOS_SELF_TYPE_NORMAL LSApplicationProxy* _LOGOS_SELF_CONST, SEL); static NSString * _logos_method$_ungrouped$LSApplicationProxy$applicationIdentifier(_LOGOS_SELF_TYPE_NORMAL LSApplicationProxy* _LOGOS_SELF_CONST, SEL); static NSNumber * (*_logos_orig$_ungrouped$LSApplicationProxy$itemID)(_LOGOS_SELF_TYPE_NORMAL LSApplicationProxy* _LOGOS_SELF_CONST, SEL); static NSNumber * _logos_method$_ungrouped$LSApplicationProxy$itemID(_LOGOS_SELF_TYPE_NORMAL LSApplicationProxy* _LOGOS_SELF_CONST, SEL); static LSApplicationProxy * (*_logos_meta_orig$_ungrouped$LSApplicationProxy$applicationProxyForIdentifier$)(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST, SEL, NSString *); static LSApplicationProxy * _logos_meta_method$_ungrouped$LSApplicationProxy$applicationProxyForIdentifier$(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST, SEL, NSString *); static id (*_logos_meta_orig$_ungrouped$LSApplicationProxy$applicationProxyForIdentifier$placeholder$)(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST, SEL, id, bool); static id _logos_meta_method$_ungrouped$LSApplicationProxy$applicationProxyForIdentifier$placeholder$(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST, SEL, id, bool); static NSString * (*_logos_orig$_ungrouped$LSApplicationProxy$shortVersionString)(_LOGOS_SELF_TYPE_NORMAL LSApplicationProxy* _LOGOS_SELF_CONST, SEL); static NSString * _logos_method$_ungrouped$LSApplicationProxy$shortVersionString(_LOGOS_SELF_TYPE_NORMAL LSApplicationProxy* _LOGOS_SELF_CONST, SEL); static bool (*_logos_meta_orig$_ungrouped$LSPlugInKitProxy$supportsSecureCoding)(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST, SEL); static bool _logos_meta_method$_ungrouped$LSPlugInKitProxy$supportsSecureCoding(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST, SEL); static LSApplicationProxy * (*_logos_orig$_ungrouped$LSPlugInKitProxy$containingBundle)(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL); static LSApplicationProxy * _logos_method$_ungrouped$LSPlugInKitProxy$containingBundle(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL); static NSString * (*_logos_orig$_ungrouped$LSPlugInKitProxy$pluginIdentifier)(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL); static NSString * _logos_method$_ungrouped$LSPlugInKitProxy$pluginIdentifier(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL); static NSString * (*_logos_orig$_ungrouped$LSPlugInKitProxy$pluginUUID)(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL); static NSString * _logos_method$_ungrouped$LSPlugInKitProxy$pluginUUID(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL); static NSString * (*_logos_orig$_ungrouped$LSPlugInKitProxy$teamID)(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL); static NSString * _logos_method$_ungrouped$LSPlugInKitProxy$teamID(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL); static NSDictionary * (*_logos_orig$_ungrouped$LSPlugInKitProxy$infoPlist)(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL); static NSDictionary * _logos_method$_ungrouped$LSPlugInKitProxy$infoPlist(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL); static id (*_logos_meta_orig$_ungrouped$LSPlugInKitProxy$containingBundleIdentifiersForPlugInBundleIdentifiers$error$)(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST, SEL, id, id*); static id _logos_meta_method$_ungrouped$LSPlugInKitProxy$containingBundleIdentifiersForPlugInBundleIdentifiers$error$(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST, SEL, id, id*); static id (*_logos_meta_orig$_ungrouped$LSPlugInKitProxy$plugInKitProxyForPlugin$)(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST, SEL, unsigned int); static id _logos_meta_method$_ungrouped$LSPlugInKitProxy$plugInKitProxyForPlugin$(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST, SEL, unsigned int); static id (*_logos_meta_orig$_ungrouped$LSPlugInKitProxy$plugInKitProxyForUUID$bundleIdentifier$pluginIdentifier$effectiveIdentifier$version$bundleURL$)(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST, SEL, id, id, id, id, id, id); static id _logos_meta_method$_ungrouped$LSPlugInKitProxy$plugInKitProxyForUUID$bundleIdentifier$pluginIdentifier$effectiveIdentifier$version$bundleURL$(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST, SEL, id, id, id, id, id, id); static id (*_logos_meta_orig$_ungrouped$LSPlugInKitProxy$pluginKitProxyForIdentifier$)(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST, SEL, id); static id _logos_meta_method$_ungrouped$LSPlugInKitProxy$pluginKitProxyForIdentifier$(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST, SEL, id); static id (*_logos_meta_orig$_ungrouped$LSPlugInKitProxy$pluginKitProxyForURL$)(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST, SEL, id); static id _logos_meta_method$_ungrouped$LSPlugInKitProxy$pluginKitProxyForURL$(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST, SEL, id); static id (*_logos_meta_orig$_ungrouped$LSPlugInKitProxy$pluginKitProxyForUUID$)(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST, SEL, id); static id _logos_meta_method$_ungrouped$LSPlugInKitProxy$pluginKitProxyForUUID$(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST, SEL, id); static bool (*_logos_orig$_ungrouped$LSPlugInKitProxy$UPPValidated)(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL); static bool _logos_method$_ungrouped$LSPlugInKitProxy$UPPValidated(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL); static id (*_logos_orig$_ungrouped$LSPlugInKitProxy$_initWithPlugin$)(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL, unsigned int); static id _logos_method$_ungrouped$LSPlugInKitProxy$_initWithPlugin$(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL, unsigned int); static id (*_logos_orig$_ungrouped$LSPlugInKitProxy$_initWithUUID$bundleIdentifier$pluginIdentifier$effectiveIdentifier$version$bundleURL$)(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL, id, id, id, id, id, id); static id _logos_method$_ungrouped$LSPlugInKitProxy$_initWithUUID$bundleIdentifier$pluginIdentifier$effectiveIdentifier$version$bundleURL$(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL, id, id, id, id, id, id); static id (*_logos_orig$_ungrouped$LSPlugInKitProxy$_valueForEqualityTesting)(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL); static id _logos_method$_ungrouped$LSPlugInKitProxy$_valueForEqualityTesting(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL); static id (*_logos_orig$_ungrouped$LSPlugInKitProxy$boundIconsDictionary)(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL); static id _logos_method$_ungrouped$LSPlugInKitProxy$boundIconsDictionary(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL); static id (*_logos_orig$_ungrouped$LSPlugInKitProxy$iconDataForVariant$)(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL, int); static id _logos_method$_ungrouped$LSPlugInKitProxy$iconDataForVariant$(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL, int); static bool (*_logos_orig$_ungrouped$LSPlugInKitProxy$isOnSystemPartition)(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL); static bool _logos_method$_ungrouped$LSPlugInKitProxy$isOnSystemPartition(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL); static id (*_logos_orig$_ungrouped$LSPlugInKitProxy$localizedName)(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL); static id _logos_method$_ungrouped$LSPlugInKitProxy$localizedName(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL); static id (*_logos_orig$_ungrouped$LSPlugInKitProxy$localizedShortName)(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL); static id _logos_method$_ungrouped$LSPlugInKitProxy$localizedShortName(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL); static id (*_logos_orig$_ungrouped$LSPlugInKitProxy$objectForInfoDictionaryKey$ofClass$inScope$)(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL, id, Class, unsigned long long); static id _logos_method$_ungrouped$LSPlugInKitProxy$objectForInfoDictionaryKey$ofClass$inScope$(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL, id, Class, unsigned long long); static id (*_logos_orig$_ungrouped$LSPlugInKitProxy$originalIdentifier)(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL); static id _logos_method$_ungrouped$LSPlugInKitProxy$originalIdentifier(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL); static bool (*_logos_orig$_ungrouped$LSPlugInKitProxy$pluginCanProvideIcon)(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL); static bool _logos_method$_ungrouped$LSPlugInKitProxy$pluginCanProvideIcon(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL); static id (*_logos_orig$_ungrouped$LSPlugInKitProxy$pluginKitDictionary)(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL); static id _logos_method$_ungrouped$LSPlugInKitProxy$pluginKitDictionary(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL); static bool (*_logos_orig$_ungrouped$LSPlugInKitProxy$profileValidated)(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL); static bool _logos_method$_ungrouped$LSPlugInKitProxy$profileValidated(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL); static id (*_logos_orig$_ungrouped$LSPlugInKitProxy$protocol)(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL); static id _logos_method$_ungrouped$LSPlugInKitProxy$protocol(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL); static id (*_logos_orig$_ungrouped$LSPlugInKitProxy$registrationDate)(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL); static id _logos_method$_ungrouped$LSPlugInKitProxy$registrationDate(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL); static id (*_logos_orig$_ungrouped$LSPlugInKitProxy$_un_applicationBundleURL)(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL); static id _logos_method$_ungrouped$LSPlugInKitProxy$_un_applicationBundleURL(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST, SEL); static id (*_logos_meta_orig$_ungrouped$LSApplicationWorkspace$defaultWorkspace)(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST, SEL); static id _logos_meta_method$_ungrouped$LSApplicationWorkspace$defaultWorkspace(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST, SEL); static NSUUID * (*_logos_orig$_ungrouped$LSApplicationWorkspace$deviceIdentifierForVendor)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static NSUUID * _logos_method$_ungrouped$LSApplicationWorkspace$deviceIdentifierForVendor(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static id (*_logos_orig$_ungrouped$LSApplicationWorkspace$allInstalledApplications)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static id _logos_method$_ungrouped$LSApplicationWorkspace$allInstalledApplications(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static NSArray<LSPlugInKitProxy *> * (*_logos_orig$_ungrouped$LSApplicationWorkspace$installedPlugins)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static NSArray<LSPlugInKitProxy *> * _logos_method$_ungrouped$LSApplicationWorkspace$installedPlugins(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static NSArray<LSApplicationProxy *> * (*_logos_orig$_ungrouped$LSApplicationWorkspace$legacyApplicationProxiesListWithType$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, unsigned long long); static NSArray<LSApplicationProxy *> * _logos_method$_ungrouped$LSApplicationWorkspace$legacyApplicationProxiesListWithType$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, unsigned long long); static id (*_logos_orig$_ungrouped$LSApplicationWorkspace$URLOverrideForURL$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static id _logos_method$_ungrouped$LSApplicationWorkspace$URLOverrideForURL$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static bool (*_logos_orig$_ungrouped$LSApplicationWorkspace$openURL$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static bool _logos_method$_ungrouped$LSApplicationWorkspace$openURL$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static bool (*_logos_orig$_ungrouped$LSApplicationWorkspace$openURL$withOptions$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id); static bool _logos_method$_ungrouped$LSApplicationWorkspace$openURL$withOptions$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id); static bool (*_logos_orig$_ungrouped$LSApplicationWorkspace$openURL$withOptions$error$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id*); static bool _logos_method$_ungrouped$LSApplicationWorkspace$openURL$withOptions$error$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id*); static void (*_logos_orig$_ungrouped$LSApplicationWorkspace$enumerateBundlesOfType$block$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, unsigned long long, id ); static void _logos_method$_ungrouped$LSApplicationWorkspace$enumerateBundlesOfType$block$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, unsigned long long, id ); static void (*_logos_orig$_ungrouped$LSApplicationWorkspace$enumerateBundlesOfType$legacySPI$block$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, unsigned long long, bool, void(^)(LSBundleProxy *proxy, bool *status)); static void _logos_method$_ungrouped$LSApplicationWorkspace$enumerateBundlesOfType$legacySPI$block$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, unsigned long long, bool, void(^)(LSBundleProxy *proxy, bool *status)); static void (*_logos_orig$_ungrouped$LSApplicationWorkspace$enumerateBundlesOfType$usingBlock$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, unsigned long long, id ); static void _logos_method$_ungrouped$LSApplicationWorkspace$enumerateBundlesOfType$usingBlock$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, unsigned long long, id ); static bool (*_logos_orig$_ungrouped$LSApplicationWorkspace$openApplicationWithBundleID$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static bool _logos_method$_ungrouped$LSApplicationWorkspace$openApplicationWithBundleID$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static bool (*_logos_orig$_ungrouped$LSApplicationWorkspace$openSensitiveURL$withOptions$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id); static bool _logos_method$_ungrouped$LSApplicationWorkspace$openSensitiveURL$withOptions$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id); static bool (*_logos_orig$_ungrouped$LSApplicationWorkspace$openSensitiveURL$withOptions$error$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id*); static bool _logos_method$_ungrouped$LSApplicationWorkspace$openSensitiveURL$withOptions$error$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id*); static NSXPCConnection * (*_logos_orig$_ungrouped$LSApplicationWorkspace$connection)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static NSXPCConnection * _logos_method$_ungrouped$LSApplicationWorkspace$connection(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static NSMutableDictionary * (*_logos_orig$_ungrouped$LSApplicationWorkspace$createdInstallProgresses)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static NSMutableDictionary * _logos_method$_ungrouped$LSApplicationWorkspace$createdInstallProgresses(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static LSInstallProgressDelegate * (*_logos_orig$_ungrouped$LSApplicationWorkspace$delegateProxy)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static LSInstallProgressDelegate * _logos_method$_ungrouped$LSApplicationWorkspace$delegateProxy(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static LSInstallProgressList * (*_logos_orig$_ungrouped$LSApplicationWorkspace$observedInstallProgresses)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static LSInstallProgressList * _logos_method$_ungrouped$LSApplicationWorkspace$observedInstallProgresses(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static LSApplicationWorkspaceRemoteObserver * (*_logos_orig$_ungrouped$LSApplicationWorkspace$remoteObserver)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static LSApplicationWorkspaceRemoteObserver * _logos_method$_ungrouped$LSApplicationWorkspace$remoteObserver(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static id (*_logos_meta_orig$_ungrouped$LSApplicationWorkspace$activeManagedConfigurationRestrictionUUIDs)(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST, SEL); static id _logos_meta_method$_ungrouped$LSApplicationWorkspace$activeManagedConfigurationRestrictionUUIDs(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST, SEL); static id (*_logos_meta_orig$_ungrouped$LSApplicationWorkspace$callbackQueue)(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST, SEL); static id _logos_meta_method$_ungrouped$LSApplicationWorkspace$callbackQueue(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST, SEL); static id (*_logos_orig$_ungrouped$LSApplicationWorkspace$URLSchemesOfType$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, long long); static id _logos_method$_ungrouped$LSApplicationWorkspace$URLSchemesOfType$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, long long); static void (*_logos_orig$_ungrouped$LSApplicationWorkspace$_LSClearSchemaCaches)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static void _logos_method$_ungrouped$LSApplicationWorkspace$_LSClearSchemaCaches(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static void (*_logos_orig$_ungrouped$LSApplicationWorkspace$_LSFailedToOpenURL$withBundle$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$LSApplicationWorkspace$_LSFailedToOpenURL$withBundle$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id); static bool (*_logos_orig$_ungrouped$LSApplicationWorkspace$_LSPrivateDatabaseNeedsRebuild)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static bool _logos_method$_ungrouped$LSApplicationWorkspace$_LSPrivateDatabaseNeedsRebuild(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static bool (*_logos_orig$_ungrouped$LSApplicationWorkspace$_LSPrivateRebuildApplicationDatabasesForSystemApps$internal$user$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, bool, bool, bool); static bool _logos_method$_ungrouped$LSApplicationWorkspace$_LSPrivateRebuildApplicationDatabasesForSystemApps$internal$user$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, bool, bool, bool); static void (*_logos_orig$_ungrouped$LSApplicationWorkspace$_LSPrivateSyncWithMobileInstallation)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static void _logos_method$_ungrouped$LSApplicationWorkspace$_LSPrivateSyncWithMobileInstallation(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static void (*_logos_orig$_ungrouped$LSApplicationWorkspace$addObserver$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$LSApplicationWorkspace$addObserver$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static id (*_logos_orig$_ungrouped$LSApplicationWorkspace$allApplications)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static id _logos_method$_ungrouped$LSApplicationWorkspace$allApplications(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static id (*_logos_orig$_ungrouped$LSApplicationWorkspace$applicationForOpeningResource$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static id _logos_method$_ungrouped$LSApplicationWorkspace$applicationForOpeningResource$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static id (*_logos_orig$_ungrouped$LSApplicationWorkspace$applicationForUserActivityDomainName$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static id _logos_method$_ungrouped$LSApplicationWorkspace$applicationForUserActivityDomainName$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static id (*_logos_orig$_ungrouped$LSApplicationWorkspace$applicationForUserActivityType$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static id _logos_method$_ungrouped$LSApplicationWorkspace$applicationForUserActivityType$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static bool (*_logos_orig$_ungrouped$LSApplicationWorkspace$applicationIsInstalled$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static bool _logos_method$_ungrouped$LSApplicationWorkspace$applicationIsInstalled$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static id (*_logos_orig$_ungrouped$LSApplicationWorkspace$applicationProxiesWithPlistFlags$bundleFlags$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, unsigned int, unsigned long long); static id _logos_method$_ungrouped$LSApplicationWorkspace$applicationProxiesWithPlistFlags$bundleFlags$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, unsigned int, unsigned long long); static id (*_logos_orig$_ungrouped$LSApplicationWorkspace$applicationsAvailableForHandlingURLScheme$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static id _logos_method$_ungrouped$LSApplicationWorkspace$applicationsAvailableForHandlingURLScheme$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static id (*_logos_orig$_ungrouped$LSApplicationWorkspace$applicationsAvailableForOpeningDocument$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static id _logos_method$_ungrouped$LSApplicationWorkspace$applicationsAvailableForOpeningDocument$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static id (*_logos_orig$_ungrouped$LSApplicationWorkspace$applicationsAvailableForOpeningURL$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static id _logos_method$_ungrouped$LSApplicationWorkspace$applicationsAvailableForOpeningURL$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static id (*_logos_orig$_ungrouped$LSApplicationWorkspace$applicationsAvailableForOpeningURL$legacySPI$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, bool); static id _logos_method$_ungrouped$LSApplicationWorkspace$applicationsAvailableForOpeningURL$legacySPI$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, bool); static id (*_logos_orig$_ungrouped$LSApplicationWorkspace$applicationsForUserActivityType$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static id _logos_method$_ungrouped$LSApplicationWorkspace$applicationsForUserActivityType$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static id (*_logos_orig$_ungrouped$LSApplicationWorkspace$applicationsForUserActivityType$limit$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, unsigned long long); static id _logos_method$_ungrouped$LSApplicationWorkspace$applicationsForUserActivityType$limit$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, unsigned long long); static id (*_logos_orig$_ungrouped$LSApplicationWorkspace$applicationsOfType$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, unsigned long long); static id _logos_method$_ungrouped$LSApplicationWorkspace$applicationsOfType$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, unsigned long long); static id (*_logos_orig$_ungrouped$LSApplicationWorkspace$applicationsWithAudioComponents)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static id _logos_method$_ungrouped$LSApplicationWorkspace$applicationsWithAudioComponents(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static id (*_logos_orig$_ungrouped$LSApplicationWorkspace$applicationsWithUIBackgroundModes)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static id _logos_method$_ungrouped$LSApplicationWorkspace$applicationsWithUIBackgroundModes(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static id (*_logos_orig$_ungrouped$LSApplicationWorkspace$applicationsWithVPNPlugins)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static id _logos_method$_ungrouped$LSApplicationWorkspace$applicationsWithVPNPlugins(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static id (*_logos_orig$_ungrouped$LSApplicationWorkspace$bundleIdentifiersForMachOUUIDs$error$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id*); static id _logos_method$_ungrouped$LSApplicationWorkspace$bundleIdentifiersForMachOUUIDs$error$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id*); static void (*_logos_orig$_ungrouped$LSApplicationWorkspace$clearAdvertisingIdentifier)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static void _logos_method$_ungrouped$LSApplicationWorkspace$clearAdvertisingIdentifier(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static void (*_logos_orig$_ungrouped$LSApplicationWorkspace$clearCreatedProgressForBundleID$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$LSApplicationWorkspace$clearCreatedProgressForBundleID$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static id (*_logos_orig$_ungrouped$LSApplicationWorkspace$deviceIdentifierForAdvertising)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static id _logos_method$_ungrouped$LSApplicationWorkspace$deviceIdentifierForAdvertising(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static id (*_logos_orig$_ungrouped$LSApplicationWorkspace$directionsApplications)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static id _logos_method$_ungrouped$LSApplicationWorkspace$directionsApplications(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static bool (*_logos_orig$_ungrouped$LSApplicationWorkspace$downgradeApplicationToPlaceholder$withOptions$error$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id*); static bool _logos_method$_ungrouped$LSApplicationWorkspace$downgradeApplicationToPlaceholder$withOptions$error$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id*); static void (*_logos_orig$_ungrouped$LSApplicationWorkspace$enumerateApplicationsForSiriWithBlock$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id ); static void _logos_method$_ungrouped$LSApplicationWorkspace$enumerateApplicationsForSiriWithBlock$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id ); static void (*_logos_orig$_ungrouped$LSApplicationWorkspace$enumerateApplicationsOfType$block$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, unsigned long long, id ); static void _logos_method$_ungrouped$LSApplicationWorkspace$enumerateApplicationsOfType$block$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, unsigned long long, id ); static void (*_logos_orig$_ungrouped$LSApplicationWorkspace$enumerateApplicationsOfType$legacySPI$block$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, unsigned long long, bool, id ); static void _logos_method$_ungrouped$LSApplicationWorkspace$enumerateApplicationsOfType$legacySPI$block$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, unsigned long long, bool, id ); static void (*_logos_orig$_ungrouped$LSApplicationWorkspace$enumeratePluginsMatchingQuery$withBlock$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id ); static void _logos_method$_ungrouped$LSApplicationWorkspace$enumeratePluginsMatchingQuery$withBlock$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id ); static bool (*_logos_orig$_ungrouped$LSApplicationWorkspace$establishConnection)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static bool _logos_method$_ungrouped$LSApplicationWorkspace$establishConnection(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static bool (*_logos_orig$_ungrouped$LSApplicationWorkspace$getClaimedActivityTypes$domains$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id*, id*); static bool _logos_method$_ungrouped$LSApplicationWorkspace$getClaimedActivityTypes$domains$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id*, id*); static unsigned long long (*_logos_orig$_ungrouped$LSApplicationWorkspace$getInstallTypeForOptions$andApp$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id); static unsigned long long _logos_method$_ungrouped$LSApplicationWorkspace$getInstallTypeForOptions$andApp$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$LSApplicationWorkspace$getKnowledgeUUID$andSequenceNumber$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id*, id*); static void _logos_method$_ungrouped$LSApplicationWorkspace$getKnowledgeUUID$andSequenceNumber$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id*, id*); static bool (*_logos_orig$_ungrouped$LSApplicationWorkspace$installApplication$withOptions$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id); static bool _logos_method$_ungrouped$LSApplicationWorkspace$installApplication$withOptions$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id); static bool (*_logos_orig$_ungrouped$LSApplicationWorkspace$installApplication$withOptions$error$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id*); static bool _logos_method$_ungrouped$LSApplicationWorkspace$installApplication$withOptions$error$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id*); static bool (*_logos_orig$_ungrouped$LSApplicationWorkspace$installApplication$withOptions$error$usingBlock$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id*, id ); static bool _logos_method$_ungrouped$LSApplicationWorkspace$installApplication$withOptions$error$usingBlock$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id*, id ); static id (*_logos_orig$_ungrouped$LSApplicationWorkspace$installBundle$withOptions$usingBlock$forApp$withError$outInstallProgress$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id , id, id*, id*); static id _logos_method$_ungrouped$LSApplicationWorkspace$installBundle$withOptions$usingBlock$forApp$withError$outInstallProgress$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id , id, id*, id*); static bool (*_logos_orig$_ungrouped$LSApplicationWorkspace$installPhaseFinishedForProgress$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static bool _logos_method$_ungrouped$LSApplicationWorkspace$installPhaseFinishedForProgress$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static id (*_logos_orig$_ungrouped$LSApplicationWorkspace$installProgressForApplication$withPhase$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, unsigned long long); static id _logos_method$_ungrouped$LSApplicationWorkspace$installProgressForApplication$withPhase$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, unsigned long long); static id (*_logos_orig$_ungrouped$LSApplicationWorkspace$installProgressForBundleID$makeSynchronous$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, unsigned char); static id _logos_method$_ungrouped$LSApplicationWorkspace$installProgressForBundleID$makeSynchronous$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, unsigned char); static bool (*_logos_orig$_ungrouped$LSApplicationWorkspace$invalidateIconCache$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static bool _logos_method$_ungrouped$LSApplicationWorkspace$invalidateIconCache$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static bool (*_logos_orig$_ungrouped$LSApplicationWorkspace$isApplicationAvailableToOpenURL$error$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id*); static bool _logos_method$_ungrouped$LSApplicationWorkspace$isApplicationAvailableToOpenURL$error$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id*); static bool (*_logos_orig$_ungrouped$LSApplicationWorkspace$isApplicationAvailableToOpenURL$includePrivateURLSchemes$error$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, bool, id*); static bool _logos_method$_ungrouped$LSApplicationWorkspace$isApplicationAvailableToOpenURL$includePrivateURLSchemes$error$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, bool, id*); static bool (*_logos_orig$_ungrouped$LSApplicationWorkspace$isApplicationAvailableToOpenURLCommon$includePrivateURLSchemes$error$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, bool, id*); static bool _logos_method$_ungrouped$LSApplicationWorkspace$isApplicationAvailableToOpenURLCommon$includePrivateURLSchemes$error$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, bool, id*); static id (*_logos_orig$_ungrouped$LSApplicationWorkspace$machOUUIDsForBundleIdentifiers$error$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id*); static id _logos_method$_ungrouped$LSApplicationWorkspace$machOUUIDsForBundleIdentifiers$error$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id*); static void (*_logos_orig$_ungrouped$LSApplicationWorkspace$openUserActivity$withApplicationProxy$completionHandler$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id ); static void _logos_method$_ungrouped$LSApplicationWorkspace$openUserActivity$withApplicationProxy$completionHandler$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id ); static void (*_logos_orig$_ungrouped$LSApplicationWorkspace$openUserActivity$withApplicationProxy$options$completionHandler$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id, id ); static void _logos_method$_ungrouped$LSApplicationWorkspace$openUserActivity$withApplicationProxy$options$completionHandler$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id, id ); static id (*_logos_orig$_ungrouped$LSApplicationWorkspace$operationToOpenResource$usingApplication$uniqueDocumentIdentifier$sourceIsManaged$userInfo$delegate$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id, bool, id, id); static id _logos_method$_ungrouped$LSApplicationWorkspace$operationToOpenResource$usingApplication$uniqueDocumentIdentifier$sourceIsManaged$userInfo$delegate$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id, bool, id, id); static id (*_logos_orig$_ungrouped$LSApplicationWorkspace$operationToOpenResource$usingApplication$uniqueDocumentIdentifier$userInfo$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id, id); static id _logos_method$_ungrouped$LSApplicationWorkspace$operationToOpenResource$usingApplication$uniqueDocumentIdentifier$userInfo$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id, id); static id (*_logos_orig$_ungrouped$LSApplicationWorkspace$operationToOpenResource$usingApplication$uniqueDocumentIdentifier$userInfo$delegate$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id, id, id); static id _logos_method$_ungrouped$LSApplicationWorkspace$operationToOpenResource$usingApplication$uniqueDocumentIdentifier$userInfo$delegate$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id, id, id); static id (*_logos_orig$_ungrouped$LSApplicationWorkspace$operationToOpenResource$usingApplication$userInfo$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id); static id _logos_method$_ungrouped$LSApplicationWorkspace$operationToOpenResource$usingApplication$userInfo$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id); static id (*_logos_orig$_ungrouped$LSApplicationWorkspace$placeholderApplications)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static id _logos_method$_ungrouped$LSApplicationWorkspace$placeholderApplications(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static id (*_logos_orig$_ungrouped$LSApplicationWorkspace$pluginsMatchingQuery$applyFilter$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id ); static id _logos_method$_ungrouped$LSApplicationWorkspace$pluginsMatchingQuery$applyFilter$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id ); static id (*_logos_orig$_ungrouped$LSApplicationWorkspace$pluginsWithIdentifiers$protocols$version$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id); static id _logos_method$_ungrouped$LSApplicationWorkspace$pluginsWithIdentifiers$protocols$version$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id); static id (*_logos_orig$_ungrouped$LSApplicationWorkspace$pluginsWithIdentifiers$protocols$version$applyFilter$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id, id ); static id _logos_method$_ungrouped$LSApplicationWorkspace$pluginsWithIdentifiers$protocols$version$applyFilter$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id, id ); static id (*_logos_orig$_ungrouped$LSApplicationWorkspace$pluginsWithIdentifiers$protocols$version$withFilter$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id, id ); static id _logos_method$_ungrouped$LSApplicationWorkspace$pluginsWithIdentifiers$protocols$version$withFilter$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id, id ); static id (*_logos_orig$_ungrouped$LSApplicationWorkspace$privateURLSchemes)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static id _logos_method$_ungrouped$LSApplicationWorkspace$privateURLSchemes(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static id (*_logos_orig$_ungrouped$LSApplicationWorkspace$publicURLSchemes)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static id _logos_method$_ungrouped$LSApplicationWorkspace$publicURLSchemes(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static bool (*_logos_orig$_ungrouped$LSApplicationWorkspace$registerApplication$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static bool _logos_method$_ungrouped$LSApplicationWorkspace$registerApplication$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static bool (*_logos_orig$_ungrouped$LSApplicationWorkspace$registerApplicationDictionary$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static bool _logos_method$_ungrouped$LSApplicationWorkspace$registerApplicationDictionary$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static bool (*_logos_orig$_ungrouped$LSApplicationWorkspace$registerApplicationDictionary$withObserverNotification$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, int); static bool _logos_method$_ungrouped$LSApplicationWorkspace$registerApplicationDictionary$withObserverNotification$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, int); static bool (*_logos_orig$_ungrouped$LSApplicationWorkspace$registerBundleWithInfo$options$type$progress$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, unsigned long long, id); static bool _logos_method$_ungrouped$LSApplicationWorkspace$registerBundleWithInfo$options$type$progress$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, unsigned long long, id); static bool (*_logos_orig$_ungrouped$LSApplicationWorkspace$registerPlugin$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static bool _logos_method$_ungrouped$LSApplicationWorkspace$registerPlugin$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$LSApplicationWorkspace$removeInstallProgressForBundleID$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$LSApplicationWorkspace$removeInstallProgressForBundleID$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static bool (*_logos_orig$_ungrouped$LSApplicationWorkspace$restoreSystemApplication$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static bool _logos_method$_ungrouped$LSApplicationWorkspace$restoreSystemApplication$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$LSApplicationWorkspace$scanForApplicationStateChangesFromRank$toRank$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$LSApplicationWorkspace$scanForApplicationStateChangesFromRank$toRank$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$LSApplicationWorkspace$scanForApplicationStateChangesFromWhitelist$to$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$LSApplicationWorkspace$scanForApplicationStateChangesFromWhitelist$to$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$LSApplicationWorkspace$sendApplicationStateChangedNotificationsFor$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$LSApplicationWorkspace$sendApplicationStateChangedNotificationsFor$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$LSApplicationWorkspace$sendInstallNotificationForApp$withPlugins$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$LSApplicationWorkspace$sendInstallNotificationForApp$withPlugins$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$LSApplicationWorkspace$sendUninstallNotificationForApp$withPlugins$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$LSApplicationWorkspace$sendUninstallNotificationForApp$withPlugins$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id); static bool (*_logos_orig$_ungrouped$LSApplicationWorkspace$uninstallApplication$withOptions$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id); static bool _logos_method$_ungrouped$LSApplicationWorkspace$uninstallApplication$withOptions$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id); static bool (*_logos_orig$_ungrouped$LSApplicationWorkspace$uninstallApplication$withOptions$error$usingBlock$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id*, id ); static bool _logos_method$_ungrouped$LSApplicationWorkspace$uninstallApplication$withOptions$error$usingBlock$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id*, id ); static bool (*_logos_orig$_ungrouped$LSApplicationWorkspace$uninstallApplication$withOptions$usingBlock$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id ); static bool _logos_method$_ungrouped$LSApplicationWorkspace$uninstallApplication$withOptions$usingBlock$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id ); static bool (*_logos_orig$_ungrouped$LSApplicationWorkspace$uninstallSystemApplication$withOptions$usingBlock$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id ); static bool _logos_method$_ungrouped$LSApplicationWorkspace$uninstallSystemApplication$withOptions$usingBlock$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id ); static bool (*_logos_orig$_ungrouped$LSApplicationWorkspace$unregisterApplication$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static bool _logos_method$_ungrouped$LSApplicationWorkspace$unregisterApplication$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static bool (*_logos_orig$_ungrouped$LSApplicationWorkspace$unregisterPlugin$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static bool _logos_method$_ungrouped$LSApplicationWorkspace$unregisterPlugin$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id); static id (*_logos_orig$_ungrouped$LSApplicationWorkspace$unrestrictedApplications)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static id _logos_method$_ungrouped$LSApplicationWorkspace$unrestrictedApplications(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL); static bool (*_logos_orig$_ungrouped$LSApplicationWorkspace$updateRecordForApp$withSINF$iTunesMetadata$error$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id, id*); static bool _logos_method$_ungrouped$LSApplicationWorkspace$updateRecordForApp$withSINF$iTunesMetadata$error$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id, id*); static bool (*_logos_orig$_ungrouped$LSApplicationWorkspace$updateSINFWithData$forApplication$options$error$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id, id*); static bool _logos_method$_ungrouped$LSApplicationWorkspace$updateSINFWithData$forApplication$options$error$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id, id*); static bool (*_logos_orig$_ungrouped$LSApplicationWorkspace$updateiTunesMetadataWithData$forApplication$options$error$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id, id*); static bool _logos_method$_ungrouped$LSApplicationWorkspace$updateiTunesMetadataWithData$forApplication$options$error$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id, id*); static void (*_logos_orig$_ungrouped$LSApplicationWorkspace$_sf_openURL$withOptions$completionHandler$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id ); static void _logos_method$_ungrouped$LSApplicationWorkspace$_sf_openURL$withOptions$completionHandler$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST, SEL, id, id, id ); static id (*_logos_meta_orig$_ungrouped$LSApplicationRestrictionsManager$sharedInstance)(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST, SEL); static id _logos_meta_method$_ungrouped$LSApplicationRestrictionsManager$sharedInstance(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST, SEL); static void (*_logos_orig$_ungrouped$LSApplicationRestrictionsManager$setWhitelistedBundleIDs$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$LSApplicationRestrictionsManager$setWhitelistedBundleIDs$(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL, id); static bool (*_logos_orig$_ungrouped$LSApplicationRestrictionsManager$isAdTrackingEnabled)(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL); static bool _logos_method$_ungrouped$LSApplicationRestrictionsManager$isAdTrackingEnabled(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL); static NSSet * (*_logos_orig$_ungrouped$LSApplicationRestrictionsManager$blacklistedBundleIDs)(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL); static NSSet * _logos_method$_ungrouped$LSApplicationRestrictionsManager$blacklistedBundleIDs(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL); static NSNumber * (*_logos_orig$_ungrouped$LSApplicationRestrictionsManager$maximumRating)(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL); static NSNumber * _logos_method$_ungrouped$LSApplicationRestrictionsManager$maximumRating(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL); static bool (*_logos_orig$_ungrouped$LSApplicationRestrictionsManager$isOpenInRestrictionInEffect)(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL); static bool _logos_method$_ungrouped$LSApplicationRestrictionsManager$isOpenInRestrictionInEffect(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL); static NSSet * (*_logos_orig$_ungrouped$LSApplicationRestrictionsManager$removedSystemApplications)(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL); static NSSet * _logos_method$_ungrouped$LSApplicationRestrictionsManager$removedSystemApplications(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL); static NSSet * (*_logos_orig$_ungrouped$LSApplicationRestrictionsManager$restrictedBundleIDs)(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL); static NSSet * _logos_method$_ungrouped$LSApplicationRestrictionsManager$restrictedBundleIDs(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL); static bool (*_logos_orig$_ungrouped$LSApplicationRestrictionsManager$isWhitelistEnabled)(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL); static bool _logos_method$_ungrouped$LSApplicationRestrictionsManager$isWhitelistEnabled(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL); static NSSet * (*_logos_orig$_ungrouped$LSApplicationRestrictionsManager$whitelistedBundleIDs)(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL); static NSSet * _logos_method$_ungrouped$LSApplicationRestrictionsManager$whitelistedBundleIDs(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL); static id (*_logos_meta_orig$_ungrouped$LSApplicationRestrictionsManager$activeRestrictionIdentifiers)(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST, SEL); static id _logos_meta_method$_ungrouped$LSApplicationRestrictionsManager$activeRestrictionIdentifiers(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST, SEL); static id (*_logos_orig$_ungrouped$LSApplicationRestrictionsManager$_LSResolveIdentifiers$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL, id); static id _logos_method$_ungrouped$LSApplicationRestrictionsManager$_LSResolveIdentifiers$(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$LSApplicationRestrictionsManager$addPendingChanges$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$LSApplicationRestrictionsManager$addPendingChanges$(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL, id); static id (*_logos_orig$_ungrouped$LSApplicationRestrictionsManager$allowedOpenInAppBundleIDsAfterApplyingFilterToAppBundleIDs$originatingAppBundleID$originatingAccountIsManaged$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL, id, id, bool); static id _logos_method$_ungrouped$LSApplicationRestrictionsManager$allowedOpenInAppBundleIDsAfterApplyingFilterToAppBundleIDs$originatingAppBundleID$originatingAccountIsManaged$(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL, id, id, bool); static void (*_logos_orig$_ungrouped$LSApplicationRestrictionsManager$beginListeningForChanges)(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL); static void _logos_method$_ungrouped$LSApplicationRestrictionsManager$beginListeningForChanges(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL); static id (*_logos_orig$_ungrouped$LSApplicationRestrictionsManager$blacklistedBundleID)(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL); static id _logos_method$_ungrouped$LSApplicationRestrictionsManager$blacklistedBundleID(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL); static id (*_logos_orig$_ungrouped$LSApplicationRestrictionsManager$calculateSetDifference$and$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL, id, id); static id _logos_method$_ungrouped$LSApplicationRestrictionsManager$calculateSetDifference$and$(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$LSApplicationRestrictionsManager$clearAllValues)(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL); static void _logos_method$_ungrouped$LSApplicationRestrictionsManager$clearAllValues(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL); static void (*_logos_orig$_ungrouped$LSApplicationRestrictionsManager$clearPendingChanges)(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL); static void _logos_method$_ungrouped$LSApplicationRestrictionsManager$clearPendingChanges(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL); static void (*_logos_orig$_ungrouped$LSApplicationRestrictionsManager$dealloc)(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL); static void _logos_method$_ungrouped$LSApplicationRestrictionsManager$dealloc(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL); static void (*_logos_orig$_ungrouped$LSApplicationRestrictionsManager$handleMCEffectiveSettingsChanged)(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL); static void _logos_method$_ungrouped$LSApplicationRestrictionsManager$handleMCEffectiveSettingsChanged(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL); static void (*_logos_orig$_ungrouped$LSApplicationRestrictionsManager$handleMCRemovedSystemAppsChanged)(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL); static void _logos_method$_ungrouped$LSApplicationRestrictionsManager$handleMCRemovedSystemAppsChanged(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL); static LSApplicationRestrictionsManager* (*_logos_orig$_ungrouped$LSApplicationRestrictionsManager$init)(_LOGOS_SELF_TYPE_INIT LSApplicationRestrictionsManager*, SEL) _LOGOS_RETURN_RETAINED; static LSApplicationRestrictionsManager* _logos_method$_ungrouped$LSApplicationRestrictionsManager$init(_LOGOS_SELF_TYPE_INIT LSApplicationRestrictionsManager*, SEL) _LOGOS_RETURN_RETAINED; static bool (*_logos_orig$_ungrouped$LSApplicationRestrictionsManager$isAppExtensionRestricted$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL, id); static bool _logos_method$_ungrouped$LSApplicationRestrictionsManager$isAppExtensionRestricted$(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL, id); static bool (*_logos_orig$_ungrouped$LSApplicationRestrictionsManager$isApplicationRemoved$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL, id); static bool _logos_method$_ungrouped$LSApplicationRestrictionsManager$isApplicationRemoved$(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL, id); static bool (*_logos_orig$_ungrouped$LSApplicationRestrictionsManager$isApplicationRestricted$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL, id); static bool _logos_method$_ungrouped$LSApplicationRestrictionsManager$isApplicationRestricted$(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL, id); static bool (*_logos_orig$_ungrouped$LSApplicationRestrictionsManager$isApplicationRestricted$checkFeatureRestrictions$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL, id, bool); static bool _logos_method$_ungrouped$LSApplicationRestrictionsManager$isApplicationRestricted$checkFeatureRestrictions$(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL, id, bool); static bool (*_logos_orig$_ungrouped$LSApplicationRestrictionsManager$isFeatureAllowed$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL, unsigned long long); static bool _logos_method$_ungrouped$LSApplicationRestrictionsManager$isFeatureAllowed$(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL, unsigned long long); static bool (*_logos_orig$_ungrouped$LSApplicationRestrictionsManager$isRatingAllowed$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL, id); static bool _logos_method$_ungrouped$LSApplicationRestrictionsManager$isRatingAllowed$(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL, id); static id (*_logos_orig$_ungrouped$LSApplicationRestrictionsManager$pendingChanges)(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL); static id _logos_method$_ungrouped$LSApplicationRestrictionsManager$pendingChanges(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL); static bool (*_logos_orig$_ungrouped$LSApplicationRestrictionsManager$setApplication$removed$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL, id, bool); static bool _logos_method$_ungrouped$LSApplicationRestrictionsManager$setApplication$removed$(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL, id, bool); static void (*_logos_orig$_ungrouped$LSApplicationRestrictionsManager$setBlacklistedBundleIDs$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$LSApplicationRestrictionsManager$setBlacklistedBundleIDs$(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$LSApplicationRestrictionsManager$setRemovedSystemApplications$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$LSApplicationRestrictionsManager$setRemovedSystemApplications$(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$LSApplicationRestrictionsManager$setRestrictedBundleIDs$)(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$LSApplicationRestrictionsManager$setRestrictedBundleIDs$(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST, SEL, id); 

#line 7 "/Users/liangze/Documents/Desktop/pojieAPPS/Qianka/QiankaDylib/CCTweakTool/privateApis/__LSApplication.xm"
#pragma mark -
#pragma mark - LSApplicationProxy

static bool _logos_meta_method$_ungrouped$LSApplicationProxy$supportsSecureCoding(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST __unused self, SEL __unused _cmd){
    HBLogDebug(@"+[<LSApplicationProxy: %p> supportsSecureCoding]", self);
    bool r = _logos_meta_orig$_ungrouped$LSApplicationProxy$supportsSecureCoding(self, _cmd);
    return r;
}

static NSString * _logos_method$_ungrouped$LSApplicationProxy$applicationIdentifier(_LOGOS_SELF_TYPE_NORMAL LSApplicationProxy* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) {
    if (isCallFromOriginApp() == false) { return _logos_orig$_ungrouped$LSApplicationProxy$applicationIdentifier(self, _cmd); }

    NSString * r = _logos_orig$_ungrouped$LSApplicationProxy$applicationIdentifier(self, _cmd);
    [CCLogManager addApplicationIdentifier:r];
    return nil;
}

static NSNumber * _logos_method$_ungrouped$LSApplicationProxy$itemID(_LOGOS_SELF_TYPE_NORMAL LSApplicationProxy* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd){
    HBLogDebug(@"-[<LSApplicationProxy: %p> itemID]", self);
    id  r = _logos_orig$_ungrouped$LSApplicationProxy$itemID(self, _cmd);
    return r;
}
static LSApplicationProxy * _logos_meta_method$_ungrouped$LSApplicationProxy$applicationProxyForIdentifier$(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, NSString * arg1){
    HBLogDebug(@"+[<LSApplicationProxy: %p> applicationProxyForIdentifier:%@]", self, arg1);
    LSApplicationProxy *r = _logos_meta_orig$_ungrouped$LSApplicationProxy$applicationProxyForIdentifier$(self, _cmd, arg1);
    if (![arg1 isEqualToString:@"app.xianka.com"]) {
        HBLogDebug(@"+[<LSApplicationProxy: %p> applicationProxyForIdentifier:%@]", self, arg1);
    }
    return r;
}
static id _logos_meta_method$_ungrouped$LSApplicationProxy$applicationProxyForIdentifier$placeholder$(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, bool arg2){
    HBLogDebug(@"+[<LSApplicationProxy: %p> applicationProxyForIdentifier:%@ placeholder:%d]", self, arg1, arg2);
    id r = _logos_meta_orig$_ungrouped$LSApplicationProxy$applicationProxyForIdentifier$placeholder$(self, _cmd, arg1, arg2);
    return r;
}

static NSString * _logos_method$_ungrouped$LSApplicationProxy$shortVersionString(_LOGOS_SELF_TYPE_NORMAL LSApplicationProxy* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd){
    HBLogDebug(@"-[<LSApplicationProxy: %p> shortVersionString]", self);
    NSString *r = _logos_orig$_ungrouped$LSApplicationProxy$shortVersionString(self, _cmd);
    return r;
}
















#pragma mark -
#pragma mark - LSPlugInKitProxy

static bool _logos_meta_method$_ungrouped$LSPlugInKitProxy$supportsSecureCoding(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) {
    HBLogDebug(@"+[<LSPlugInKitProxy: %p> supportsSecureCoding]", self);
    bool r = _logos_meta_orig$_ungrouped$LSPlugInKitProxy$supportsSecureCoding(self, _cmd);
    return r;

}
static LSApplicationProxy * _logos_method$_ungrouped$LSPlugInKitProxy$containingBundle(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) {
    HBLogDebug(@"-[<LSPlugInKitProxy: %p> containingBundle]", self);
    id r = _logos_orig$_ungrouped$LSPlugInKitProxy$containingBundle(self, _cmd);
    return r;

}
static NSString * _logos_method$_ungrouped$LSPlugInKitProxy$pluginIdentifier(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) {
    HBLogDebug(@"-[<LSPlugInKitProxy: %p> pluginIdentifier]", self);
    NSString *r = _logos_orig$_ungrouped$LSPlugInKitProxy$pluginIdentifier(self, _cmd);
    return r;

}
static NSString * _logos_method$_ungrouped$LSPlugInKitProxy$pluginUUID(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) {
    HBLogDebug(@"-[<LSPlugInKitProxy: %p> pluginUUID]", self);
    NSString *r = _logos_orig$_ungrouped$LSPlugInKitProxy$pluginUUID(self, _cmd);
    return r;

}

static NSString * _logos_method$_ungrouped$LSPlugInKitProxy$teamID(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd){
    HBLogDebug(@"-[<LSPlugInKitProxy: %p> teamID]", self);
    NSString *r = _logos_orig$_ungrouped$LSPlugInKitProxy$teamID(self, _cmd);
    return r;
}

static NSDictionary * _logos_method$_ungrouped$LSPlugInKitProxy$infoPlist(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) {
    HBLogDebug(@"-[<LSPlugInKitProxy: %p> infoPlist]", self);
    NSDictionary * r = _logos_orig$_ungrouped$LSPlugInKitProxy$infoPlist(self, _cmd);
    return r;
}

static id _logos_meta_method$_ungrouped$LSPlugInKitProxy$containingBundleIdentifiersForPlugInBundleIdentifiers$error$(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id* arg2) { HBLogDebug(@"+[<LSPlugInKitProxy: %p> containingBundleIdentifiersForPlugInBundleIdentifiers:%@ error:%p]", self, arg1, arg2); id r = _logos_meta_orig$_ungrouped$LSPlugInKitProxy$containingBundleIdentifiersForPlugInBundleIdentifiers$error$(self, _cmd, arg1, arg2); return r; }
static id _logos_meta_method$_ungrouped$LSPlugInKitProxy$plugInKitProxyForPlugin$(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, unsigned int arg1) { HBLogDebug(@"+[<LSPlugInKitProxy: %p> plugInKitProxyForPlugin:%u]", self, arg1); id r = _logos_meta_orig$_ungrouped$LSPlugInKitProxy$plugInKitProxyForPlugin$(self, _cmd, arg1); return r; }
static id _logos_meta_method$_ungrouped$LSPlugInKitProxy$plugInKitProxyForUUID$bundleIdentifier$pluginIdentifier$effectiveIdentifier$version$bundleURL$(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2, id arg3, id arg4, id arg5, id arg6) { HBLogDebug(@"+[<LSPlugInKitProxy: %p> plugInKitProxyForUUID:%@ bundleIdentifier:%@ pluginIdentifier:%@ effectiveIdentifier:%@ version:%@ bundleURL:%@]", self, arg1, arg2, arg3, arg4, arg5, arg6); id r = _logos_meta_orig$_ungrouped$LSPlugInKitProxy$plugInKitProxyForUUID$bundleIdentifier$pluginIdentifier$effectiveIdentifier$version$bundleURL$(self, _cmd, arg1, arg2, arg3, arg4, arg5, arg6); return r; }
static id _logos_meta_method$_ungrouped$LSPlugInKitProxy$pluginKitProxyForIdentifier$(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"+[<LSPlugInKitProxy: %p> pluginKitProxyForIdentifier:%@]", self, arg1); id r = _logos_meta_orig$_ungrouped$LSPlugInKitProxy$pluginKitProxyForIdentifier$(self, _cmd, arg1); return r; }
static id _logos_meta_method$_ungrouped$LSPlugInKitProxy$pluginKitProxyForURL$(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"+[<LSPlugInKitProxy: %p> pluginKitProxyForURL:%@]", self, arg1); id r = _logos_meta_orig$_ungrouped$LSPlugInKitProxy$pluginKitProxyForURL$(self, _cmd, arg1); return r; }
static id _logos_meta_method$_ungrouped$LSPlugInKitProxy$pluginKitProxyForUUID$(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"+[<LSPlugInKitProxy: %p> pluginKitProxyForUUID:%@]", self, arg1); id r = _logos_meta_orig$_ungrouped$LSPlugInKitProxy$pluginKitProxyForUUID$(self, _cmd, arg1); return r; }
static bool _logos_method$_ungrouped$LSPlugInKitProxy$UPPValidated(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSPlugInKitProxy: %p> UPPValidated]", self); bool r = _logos_orig$_ungrouped$LSPlugInKitProxy$UPPValidated(self, _cmd); return r; }
static id _logos_method$_ungrouped$LSPlugInKitProxy$_initWithPlugin$(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, unsigned int arg1) { HBLogDebug(@"-[<LSPlugInKitProxy: %p> _initWithPlugin:%u]", self, arg1); id r = _logos_orig$_ungrouped$LSPlugInKitProxy$_initWithPlugin$(self, _cmd, arg1); return r; }
static id _logos_method$_ungrouped$LSPlugInKitProxy$_initWithUUID$bundleIdentifier$pluginIdentifier$effectiveIdentifier$version$bundleURL$(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2, id arg3, id arg4, id arg5, id arg6) { HBLogDebug(@"-[<LSPlugInKitProxy: %p> _initWithUUID:%@ bundleIdentifier:%@ pluginIdentifier:%@ effectiveIdentifier:%@ version:%@ bundleURL:%@]", self, arg1, arg2, arg3, arg4, arg5, arg6); id r = _logos_orig$_ungrouped$LSPlugInKitProxy$_initWithUUID$bundleIdentifier$pluginIdentifier$effectiveIdentifier$version$bundleURL$(self, _cmd, arg1, arg2, arg3, arg4, arg5, arg6); return r; }
static id _logos_method$_ungrouped$LSPlugInKitProxy$_valueForEqualityTesting(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSPlugInKitProxy: %p> _valueForEqualityTesting]", self); id r = _logos_orig$_ungrouped$LSPlugInKitProxy$_valueForEqualityTesting(self, _cmd); return r; }
static id _logos_method$_ungrouped$LSPlugInKitProxy$boundIconsDictionary(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSPlugInKitProxy: %p> boundIconsDictionary]", self); id r = _logos_orig$_ungrouped$LSPlugInKitProxy$boundIconsDictionary(self, _cmd); return r; }
static id _logos_method$_ungrouped$LSPlugInKitProxy$iconDataForVariant$(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, int arg1) { HBLogDebug(@"-[<LSPlugInKitProxy: %p> iconDataForVariant:%d]", self, arg1); id r = _logos_orig$_ungrouped$LSPlugInKitProxy$iconDataForVariant$(self, _cmd, arg1); return r; }
static bool _logos_method$_ungrouped$LSPlugInKitProxy$isOnSystemPartition(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSPlugInKitProxy: %p> isOnSystemPartition]", self); bool r = _logos_orig$_ungrouped$LSPlugInKitProxy$isOnSystemPartition(self, _cmd); return r; }
static id _logos_method$_ungrouped$LSPlugInKitProxy$localizedName(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSPlugInKitProxy: %p> localizedName]", self); id r = _logos_orig$_ungrouped$LSPlugInKitProxy$localizedName(self, _cmd); return r; }
static id _logos_method$_ungrouped$LSPlugInKitProxy$localizedShortName(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSPlugInKitProxy: %p> localizedShortName]", self); id r = _logos_orig$_ungrouped$LSPlugInKitProxy$localizedShortName(self, _cmd); return r; }
static id _logos_method$_ungrouped$LSPlugInKitProxy$objectForInfoDictionaryKey$ofClass$inScope$(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, Class arg2, unsigned long long arg3) { HBLogDebug(@"-[<LSPlugInKitProxy: %p> objectForInfoDictionaryKey:%@ ofClass:%@ inScope:%llu]", self, arg1, arg2, arg3); id r = _logos_orig$_ungrouped$LSPlugInKitProxy$objectForInfoDictionaryKey$ofClass$inScope$(self, _cmd, arg1, arg2, arg3); return r; }
static id _logos_method$_ungrouped$LSPlugInKitProxy$originalIdentifier(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSPlugInKitProxy: %p> originalIdentifier]", self); id r = _logos_orig$_ungrouped$LSPlugInKitProxy$originalIdentifier(self, _cmd); return r; }
static bool _logos_method$_ungrouped$LSPlugInKitProxy$pluginCanProvideIcon(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSPlugInKitProxy: %p> pluginCanProvideIcon]", self); bool r = _logos_orig$_ungrouped$LSPlugInKitProxy$pluginCanProvideIcon(self, _cmd); return r; }
static id _logos_method$_ungrouped$LSPlugInKitProxy$pluginKitDictionary(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSPlugInKitProxy: %p> pluginKitDictionary]", self); id r = _logos_orig$_ungrouped$LSPlugInKitProxy$pluginKitDictionary(self, _cmd); return r; }
static bool _logos_method$_ungrouped$LSPlugInKitProxy$profileValidated(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSPlugInKitProxy: %p> profileValidated]", self); bool r = _logos_orig$_ungrouped$LSPlugInKitProxy$profileValidated(self, _cmd); return r; }
static id _logos_method$_ungrouped$LSPlugInKitProxy$protocol(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSPlugInKitProxy: %p> protocol]", self); id r = _logos_orig$_ungrouped$LSPlugInKitProxy$protocol(self, _cmd); return r; }
static id _logos_method$_ungrouped$LSPlugInKitProxy$registrationDate(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSPlugInKitProxy: %p> registrationDate]", self); id r = _logos_orig$_ungrouped$LSPlugInKitProxy$registrationDate(self, _cmd); return r; }
static id _logos_method$_ungrouped$LSPlugInKitProxy$_un_applicationBundleURL(_LOGOS_SELF_TYPE_NORMAL LSPlugInKitProxy* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSPlugInKitProxy: %p> _un_applicationBundleURL]", self); id r = _logos_orig$_ungrouped$LSPlugInKitProxy$_un_applicationBundleURL(self, _cmd); return r; }















#pragma mark -
#pragma mark - LSApplicationWorkspace

static id _logos_meta_method$_ungrouped$LSApplicationWorkspace$defaultWorkspace(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) {  id r = _logos_meta_orig$_ungrouped$LSApplicationWorkspace$defaultWorkspace(self, _cmd); return r; }
static NSUUID * _logos_method$_ungrouped$LSApplicationWorkspace$deviceIdentifierForVendor(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) {
    
    CCLog(@"检测了IDFA");
    NSUserDefaults *userDefaults = [NSUserDefaults standardUserDefaults];
    NSString *idfa = [userDefaults stringForKey:@"com.unique.idfa"];
    if(!idfa)
    {
        idfa = [NSUUID UUID].UUIDString;
        [userDefaults setObject:idfa forKey:@"com.unique.idfa"];
        [userDefaults synchronize];
    }
    NSUUID *udid = [[NSUUID alloc] initWithUUIDString:idfa];
    return udid;
}
static id _logos_method$_ungrouped$LSApplicationWorkspace$allInstalledApplications(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) {
    HBLogDebug(@"-[<LSApplicationWorkspace: %p> allInstalledApplications]", self);
    id r = _logos_orig$_ungrouped$LSApplicationWorkspace$allInstalledApplications(self, _cmd);
    return r;
}


static NSArray<LSPlugInKitProxy *> * _logos_method$_ungrouped$LSApplicationWorkspace$installedPlugins(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) {
    HBLogDebug(@"-[<LSApplicationWorkspace: %p> installedPlugins]", self);
    NSMutableArray *tempArr = @[].mutableCopy;
    NSArray *r = _logos_orig$_ungrouped$LSApplicationWorkspace$installedPlugins(self, _cmd);
    for (LSPlugInKitProxy *item in r){
        LSApplicationProxy *ap = [item containingBundle];
        NSString *appidentifer = [ap applicationIdentifier];
        if ([appidentifer containsString:@"com.apple."] || [appidentifer containsString:bunlderID]) {
            [tempArr addObject:item];
        }
    }
    int origCount = [r count];
    int newCout = [tempArr count];
    return tempArr;
}

static NSArray<LSApplicationProxy *> * _logos_method$_ungrouped$LSApplicationWorkspace$legacyApplicationProxiesListWithType$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, unsigned long long arg1) {
    HBLogDebug(@"-[<LSApplicationWorkspace: %p> legacyApplicationProxiesListWithType:%llu]", self, arg1);
    NSMutableArray *tempArr = @[].mutableCopy;
    NSArray *r = _logos_orig$_ungrouped$LSApplicationWorkspace$legacyApplicationProxiesListWithType$(self, _cmd, arg1);
    for (LSApplicationProxy *item in r){
        NSString *appidentifer = [item applicationIdentifier];
        if ([appidentifer containsString:@"com.apple."] || [appidentifer containsString:bunlderID]) {
            [tempArr addObject:item];
        }
    }
    return tempArr;
}

static id _logos_method$_ungrouped$LSApplicationWorkspace$URLOverrideForURL$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) {
    HBLogDebug(@"-[<LSApplicationWorkspace: %p> URLOverrideForURL:%@]", self, arg1);
    id r = _logos_orig$_ungrouped$LSApplicationWorkspace$URLOverrideForURL$(self, _cmd, arg1);
    return r;
}

static bool _logos_method$_ungrouped$LSApplicationWorkspace$openURL$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> openURL:%@]", self, arg1); bool r = _logos_orig$_ungrouped$LSApplicationWorkspace$openURL$(self, _cmd, arg1); return r; }
static bool _logos_method$_ungrouped$LSApplicationWorkspace$openURL$withOptions$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> openURL:%@ withOptions:%@]", self, arg1, arg2); bool r = _logos_orig$_ungrouped$LSApplicationWorkspace$openURL$withOptions$(self, _cmd, arg1, arg2); return r; }
static bool _logos_method$_ungrouped$LSApplicationWorkspace$openURL$withOptions$error$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2, id* arg3) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> openURL:%@ withOptions:%@ error:%p]", self, arg1, arg2, arg3); bool r = _logos_orig$_ungrouped$LSApplicationWorkspace$openURL$withOptions$error$(self, _cmd, arg1, arg2, arg3); return r; }



static void _logos_method$_ungrouped$LSApplicationWorkspace$enumerateBundlesOfType$block$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, unsigned long long arg1, id  arg2) {
    HBLogDebug(@"-[<LSApplicationWorkspace: %p> enumerateBundlesOfType:%llu block:%@]", self, arg1, arg2);
    _logos_orig$_ungrouped$LSApplicationWorkspace$enumerateBundlesOfType$block$(self, _cmd, arg1, arg2);

}
static void _logos_method$_ungrouped$LSApplicationWorkspace$enumerateBundlesOfType$legacySPI$block$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, unsigned long long arg1, bool arg2, void(^arg3)(LSBundleProxy *proxy, bool *status)) {
    _logos_orig$_ungrouped$LSApplicationWorkspace$enumerateBundlesOfType$legacySPI$block$(self, _cmd, arg1, arg2, arg3);
}
static void _logos_method$_ungrouped$LSApplicationWorkspace$enumerateBundlesOfType$usingBlock$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, unsigned long long arg1, id  arg2) {
    HBLogDebug(@"-[<LSApplicationWorkspace: %p> enumerateBundlesOfType:%llu usingBlock:%@]", self, arg1, arg2);
    _logos_orig$_ungrouped$LSApplicationWorkspace$enumerateBundlesOfType$usingBlock$(self, _cmd, arg1, arg2);

}


static bool _logos_method$_ungrouped$LSApplicationWorkspace$openApplicationWithBundleID$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) {
    HBLogDebug(@"-[<LSApplicationWorkspace: %p> openApplicationWithBundleID:%@]", self, arg1);
    bool r = _logos_orig$_ungrouped$LSApplicationWorkspace$openApplicationWithBundleID$(self, _cmd, arg1);
    return r;

}

static bool _logos_method$_ungrouped$LSApplicationWorkspace$openSensitiveURL$withOptions$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2) {
    HBLogDebug(@"-[<LSApplicationWorkspace: %p> openSensitiveURL:%@ withOptions:%@]", self, arg1, arg2);
    bool r = _logos_orig$_ungrouped$LSApplicationWorkspace$openSensitiveURL$withOptions$(self, _cmd, arg1, arg2);
    return r;
}

static bool _logos_method$_ungrouped$LSApplicationWorkspace$openSensitiveURL$withOptions$error$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2, id* arg3) {
    HBLogDebug(@"-[<LSApplicationWorkspace: %p> openSensitiveURL:%@ withOptions:%@ error:%p]", self, arg1, arg2, arg3);
    bool r = _logos_orig$_ungrouped$LSApplicationWorkspace$openSensitiveURL$withOptions$error$(self, _cmd, arg1, arg2, arg3);
    return r;
}


static NSXPCConnection * _logos_method$_ungrouped$LSApplicationWorkspace$connection(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> connection]", self); NSXPCConnection * r = _logos_orig$_ungrouped$LSApplicationWorkspace$connection(self, _cmd); return r; }
static NSMutableDictionary * _logos_method$_ungrouped$LSApplicationWorkspace$createdInstallProgresses(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> createdInstallProgresses]", self); NSMutableDictionary * r = _logos_orig$_ungrouped$LSApplicationWorkspace$createdInstallProgresses(self, _cmd); return r; }
static LSInstallProgressDelegate * _logos_method$_ungrouped$LSApplicationWorkspace$delegateProxy(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> delegateProxy]", self); LSInstallProgressDelegate * r = _logos_orig$_ungrouped$LSApplicationWorkspace$delegateProxy(self, _cmd); return r; }
static LSInstallProgressList * _logos_method$_ungrouped$LSApplicationWorkspace$observedInstallProgresses(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> observedInstallProgresses]", self); LSInstallProgressList * r = _logos_orig$_ungrouped$LSApplicationWorkspace$observedInstallProgresses(self, _cmd); return r; }
static LSApplicationWorkspaceRemoteObserver * _logos_method$_ungrouped$LSApplicationWorkspace$remoteObserver(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> remoteObserver]", self); LSApplicationWorkspaceRemoteObserver * r = _logos_orig$_ungrouped$LSApplicationWorkspace$remoteObserver(self, _cmd); return r; }
static id _logos_meta_method$_ungrouped$LSApplicationWorkspace$activeManagedConfigurationRestrictionUUIDs(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"+[<LSApplicationWorkspace: %p> activeManagedConfigurationRestrictionUUIDs]", self); id r = _logos_meta_orig$_ungrouped$LSApplicationWorkspace$activeManagedConfigurationRestrictionUUIDs(self, _cmd); return r; }
static id _logos_meta_method$_ungrouped$LSApplicationWorkspace$callbackQueue(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"+[<LSApplicationWorkspace: %p> callbackQueue]", self); id r = _logos_meta_orig$_ungrouped$LSApplicationWorkspace$callbackQueue(self, _cmd); return r; }
static id _logos_method$_ungrouped$LSApplicationWorkspace$URLSchemesOfType$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, long long arg1) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> URLSchemesOfType:%lld]", self, arg1); id r = _logos_orig$_ungrouped$LSApplicationWorkspace$URLSchemesOfType$(self, _cmd, arg1); return r; }
static void _logos_method$_ungrouped$LSApplicationWorkspace$_LSClearSchemaCaches(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> _LSClearSchemaCaches]", self); _logos_orig$_ungrouped$LSApplicationWorkspace$_LSClearSchemaCaches(self, _cmd); }
static void _logos_method$_ungrouped$LSApplicationWorkspace$_LSFailedToOpenURL$withBundle$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> _LSFailedToOpenURL:%@ withBundle:%@]", self, arg1, arg2); _logos_orig$_ungrouped$LSApplicationWorkspace$_LSFailedToOpenURL$withBundle$(self, _cmd, arg1, arg2); }
static bool _logos_method$_ungrouped$LSApplicationWorkspace$_LSPrivateDatabaseNeedsRebuild(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> _LSPrivateDatabaseNeedsRebuild]", self); bool r = _logos_orig$_ungrouped$LSApplicationWorkspace$_LSPrivateDatabaseNeedsRebuild(self, _cmd); return r; }
static bool _logos_method$_ungrouped$LSApplicationWorkspace$_LSPrivateRebuildApplicationDatabasesForSystemApps$internal$user$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, bool arg1, bool arg2, bool arg3) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> _LSPrivateRebuildApplicationDatabasesForSystemApps:%d internal:%d user:%d]", self, arg1, arg2, arg3); bool r = _logos_orig$_ungrouped$LSApplicationWorkspace$_LSPrivateRebuildApplicationDatabasesForSystemApps$internal$user$(self, _cmd, arg1, arg2, arg3); return r; }
static void _logos_method$_ungrouped$LSApplicationWorkspace$_LSPrivateSyncWithMobileInstallation(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> _LSPrivateSyncWithMobileInstallation]", self); _logos_orig$_ungrouped$LSApplicationWorkspace$_LSPrivateSyncWithMobileInstallation(self, _cmd); }
static void _logos_method$_ungrouped$LSApplicationWorkspace$addObserver$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> addObserver:%@]", self, arg1); _logos_orig$_ungrouped$LSApplicationWorkspace$addObserver$(self, _cmd, arg1); }
static id _logos_method$_ungrouped$LSApplicationWorkspace$allApplications(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> allApplications]", self); id r = _logos_orig$_ungrouped$LSApplicationWorkspace$allApplications(self, _cmd); return r; }
static id _logos_method$_ungrouped$LSApplicationWorkspace$applicationForOpeningResource$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> applicationForOpeningResource:%@]", self, arg1); id r = _logos_orig$_ungrouped$LSApplicationWorkspace$applicationForOpeningResource$(self, _cmd, arg1); return r; }
static id _logos_method$_ungrouped$LSApplicationWorkspace$applicationForUserActivityDomainName$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> applicationForUserActivityDomainName:%@]", self, arg1); id r = _logos_orig$_ungrouped$LSApplicationWorkspace$applicationForUserActivityDomainName$(self, _cmd, arg1); return r; }
static id _logos_method$_ungrouped$LSApplicationWorkspace$applicationForUserActivityType$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> applicationForUserActivityType:%@]", self, arg1); id r = _logos_orig$_ungrouped$LSApplicationWorkspace$applicationForUserActivityType$(self, _cmd, arg1); return r; }
static bool _logos_method$_ungrouped$LSApplicationWorkspace$applicationIsInstalled$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> applicationIsInstalled:%@]", self, arg1); bool r = _logos_orig$_ungrouped$LSApplicationWorkspace$applicationIsInstalled$(self, _cmd, arg1); return r; }
static id _logos_method$_ungrouped$LSApplicationWorkspace$applicationProxiesWithPlistFlags$bundleFlags$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, unsigned int arg1, unsigned long long arg2) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> applicationProxiesWithPlistFlags:%u bundleFlags:%llu]", self, arg1, arg2); id r = _logos_orig$_ungrouped$LSApplicationWorkspace$applicationProxiesWithPlistFlags$bundleFlags$(self, _cmd, arg1, arg2); return r; }
static id _logos_method$_ungrouped$LSApplicationWorkspace$applicationsAvailableForHandlingURLScheme$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> applicationsAvailableForHandlingURLScheme:%@]", self, arg1); id r = _logos_orig$_ungrouped$LSApplicationWorkspace$applicationsAvailableForHandlingURLScheme$(self, _cmd, arg1); return r; }
static id _logos_method$_ungrouped$LSApplicationWorkspace$applicationsAvailableForOpeningDocument$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> applicationsAvailableForOpeningDocument:%@]", self, arg1); id r = _logos_orig$_ungrouped$LSApplicationWorkspace$applicationsAvailableForOpeningDocument$(self, _cmd, arg1); return r; }
static id _logos_method$_ungrouped$LSApplicationWorkspace$applicationsAvailableForOpeningURL$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> applicationsAvailableForOpeningURL:%@]", self, arg1); id r = _logos_orig$_ungrouped$LSApplicationWorkspace$applicationsAvailableForOpeningURL$(self, _cmd, arg1); return r; }
static id _logos_method$_ungrouped$LSApplicationWorkspace$applicationsAvailableForOpeningURL$legacySPI$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, bool arg2) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> applicationsAvailableForOpeningURL:%@ legacySPI:%d]", self, arg1, arg2); id r = _logos_orig$_ungrouped$LSApplicationWorkspace$applicationsAvailableForOpeningURL$legacySPI$(self, _cmd, arg1, arg2); return r; }
static id _logos_method$_ungrouped$LSApplicationWorkspace$applicationsForUserActivityType$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> applicationsForUserActivityType:%@]", self, arg1); id r = _logos_orig$_ungrouped$LSApplicationWorkspace$applicationsForUserActivityType$(self, _cmd, arg1); return r; }
static id _logos_method$_ungrouped$LSApplicationWorkspace$applicationsForUserActivityType$limit$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, unsigned long long arg2) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> applicationsForUserActivityType:%@ limit:%llu]", self, arg1, arg2); id r = _logos_orig$_ungrouped$LSApplicationWorkspace$applicationsForUserActivityType$limit$(self, _cmd, arg1, arg2); return r; }
static id _logos_method$_ungrouped$LSApplicationWorkspace$applicationsOfType$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, unsigned long long arg1) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> applicationsOfType:%llu]", self, arg1); id r = _logos_orig$_ungrouped$LSApplicationWorkspace$applicationsOfType$(self, _cmd, arg1); return r; }
static id _logos_method$_ungrouped$LSApplicationWorkspace$applicationsWithAudioComponents(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> applicationsWithAudioComponents]", self); id r = _logos_orig$_ungrouped$LSApplicationWorkspace$applicationsWithAudioComponents(self, _cmd); return r; }
static id _logos_method$_ungrouped$LSApplicationWorkspace$applicationsWithUIBackgroundModes(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> applicationsWithUIBackgroundModes]", self); id r = _logos_orig$_ungrouped$LSApplicationWorkspace$applicationsWithUIBackgroundModes(self, _cmd); return r; }
static id _logos_method$_ungrouped$LSApplicationWorkspace$applicationsWithVPNPlugins(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> applicationsWithVPNPlugins]", self); id r = _logos_orig$_ungrouped$LSApplicationWorkspace$applicationsWithVPNPlugins(self, _cmd); return r; }
static id _logos_method$_ungrouped$LSApplicationWorkspace$bundleIdentifiersForMachOUUIDs$error$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id* arg2) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> bundleIdentifiersForMachOUUIDs:%@ error:%p]", self, arg1, arg2); id r = _logos_orig$_ungrouped$LSApplicationWorkspace$bundleIdentifiersForMachOUUIDs$error$(self, _cmd, arg1, arg2); return r; }
static void _logos_method$_ungrouped$LSApplicationWorkspace$clearAdvertisingIdentifier(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> clearAdvertisingIdentifier]", self); _logos_orig$_ungrouped$LSApplicationWorkspace$clearAdvertisingIdentifier(self, _cmd); }
static void _logos_method$_ungrouped$LSApplicationWorkspace$clearCreatedProgressForBundleID$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> clearCreatedProgressForBundleID:%@]", self, arg1); _logos_orig$_ungrouped$LSApplicationWorkspace$clearCreatedProgressForBundleID$(self, _cmd, arg1); }




static id _logos_method$_ungrouped$LSApplicationWorkspace$deviceIdentifierForAdvertising(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> deviceIdentifierForAdvertising]", self); id r = _logos_orig$_ungrouped$LSApplicationWorkspace$deviceIdentifierForAdvertising(self, _cmd); return r; }
static id _logos_method$_ungrouped$LSApplicationWorkspace$directionsApplications(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> directionsApplications]", self); id r = _logos_orig$_ungrouped$LSApplicationWorkspace$directionsApplications(self, _cmd); return r; }
static bool _logos_method$_ungrouped$LSApplicationWorkspace$downgradeApplicationToPlaceholder$withOptions$error$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2, id* arg3) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> downgradeApplicationToPlaceholder:%@ withOptions:%@ error:%p]", self, arg1, arg2, arg3); bool r = _logos_orig$_ungrouped$LSApplicationWorkspace$downgradeApplicationToPlaceholder$withOptions$error$(self, _cmd, arg1, arg2, arg3); return r; }
static void _logos_method$_ungrouped$LSApplicationWorkspace$enumerateApplicationsForSiriWithBlock$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id  arg1) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> enumerateApplicationsForSiriWithBlock:%@]", self, arg1); _logos_orig$_ungrouped$LSApplicationWorkspace$enumerateApplicationsForSiriWithBlock$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$LSApplicationWorkspace$enumerateApplicationsOfType$block$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, unsigned long long arg1, id  arg2) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> enumerateApplicationsOfType:%llu block:%@]", self, arg1, arg2); _logos_orig$_ungrouped$LSApplicationWorkspace$enumerateApplicationsOfType$block$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$LSApplicationWorkspace$enumerateApplicationsOfType$legacySPI$block$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, unsigned long long arg1, bool arg2, id  arg3) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> enumerateApplicationsOfType:%llu legacySPI:%d block:%@]", self, arg1, arg2, arg3); _logos_orig$_ungrouped$LSApplicationWorkspace$enumerateApplicationsOfType$legacySPI$block$(self, _cmd, arg1, arg2, arg3); }

static void _logos_method$_ungrouped$LSApplicationWorkspace$enumeratePluginsMatchingQuery$withBlock$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id  arg2) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> enumeratePluginsMatchingQuery:%@ withBlock:%@]", self, arg1, arg2); _logos_orig$_ungrouped$LSApplicationWorkspace$enumeratePluginsMatchingQuery$withBlock$(self, _cmd, arg1, arg2); }
static bool _logos_method$_ungrouped$LSApplicationWorkspace$establishConnection(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> establishConnection]", self); bool r = _logos_orig$_ungrouped$LSApplicationWorkspace$establishConnection(self, _cmd); return r; }
static bool _logos_method$_ungrouped$LSApplicationWorkspace$getClaimedActivityTypes$domains$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id* arg1, id* arg2) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> getClaimedActivityTypes:%p domains:%p]", self, arg1, arg2); bool r = _logos_orig$_ungrouped$LSApplicationWorkspace$getClaimedActivityTypes$domains$(self, _cmd, arg1, arg2); return r; }

static unsigned long long _logos_method$_ungrouped$LSApplicationWorkspace$getInstallTypeForOptions$andApp$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> getInstallTypeForOptions:%@ andApp:%@]", self, arg1, arg2); unsigned long long r = _logos_orig$_ungrouped$LSApplicationWorkspace$getInstallTypeForOptions$andApp$(self, _cmd, arg1, arg2); return r; }
static void _logos_method$_ungrouped$LSApplicationWorkspace$getKnowledgeUUID$andSequenceNumber$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id* arg1, id* arg2) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> getKnowledgeUUID:%p andSequenceNumber:%p]", self, arg1, arg2); _logos_orig$_ungrouped$LSApplicationWorkspace$getKnowledgeUUID$andSequenceNumber$(self, _cmd, arg1, arg2); }
static bool _logos_method$_ungrouped$LSApplicationWorkspace$installApplication$withOptions$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> installApplication:%@ withOptions:%@]", self, arg1, arg2); bool r = _logos_orig$_ungrouped$LSApplicationWorkspace$installApplication$withOptions$(self, _cmd, arg1, arg2); return r; }
static bool _logos_method$_ungrouped$LSApplicationWorkspace$installApplication$withOptions$error$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2, id* arg3) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> installApplication:%@ withOptions:%@ error:%p]", self, arg1, arg2, arg3); bool r = _logos_orig$_ungrouped$LSApplicationWorkspace$installApplication$withOptions$error$(self, _cmd, arg1, arg2, arg3); return r; }
static bool _logos_method$_ungrouped$LSApplicationWorkspace$installApplication$withOptions$error$usingBlock$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2, id* arg3, id  arg4) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> installApplication:%@ withOptions:%@ error:%p usingBlock:%@]", self, arg1, arg2, arg3, arg4); bool r = _logos_orig$_ungrouped$LSApplicationWorkspace$installApplication$withOptions$error$usingBlock$(self, _cmd, arg1, arg2, arg3, arg4); return r; }
static id _logos_method$_ungrouped$LSApplicationWorkspace$installBundle$withOptions$usingBlock$forApp$withError$outInstallProgress$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2, id  arg3, id arg4, id* arg5, id* arg6) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> installBundle:%@ withOptions:%@ usingBlock:%@ forApp:%@ withError:%p outInstallProgress:%p]", self, arg1, arg2, arg3, arg4, arg5, arg6); id r = _logos_orig$_ungrouped$LSApplicationWorkspace$installBundle$withOptions$usingBlock$forApp$withError$outInstallProgress$(self, _cmd, arg1, arg2, arg3, arg4, arg5, arg6); return r; }
static bool _logos_method$_ungrouped$LSApplicationWorkspace$installPhaseFinishedForProgress$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> installPhaseFinishedForProgress:%@]", self, arg1); bool r = _logos_orig$_ungrouped$LSApplicationWorkspace$installPhaseFinishedForProgress$(self, _cmd, arg1); return r; }
static id _logos_method$_ungrouped$LSApplicationWorkspace$installProgressForApplication$withPhase$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, unsigned long long arg2) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> installProgressForApplication:%@ withPhase:%llu]", self, arg1, arg2); id r = _logos_orig$_ungrouped$LSApplicationWorkspace$installProgressForApplication$withPhase$(self, _cmd, arg1, arg2); return r; }
static id _logos_method$_ungrouped$LSApplicationWorkspace$installProgressForBundleID$makeSynchronous$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, unsigned char arg2) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> installProgressForBundleID:%@ makeSynchronous:%hhu]", self, arg1, arg2); id r = _logos_orig$_ungrouped$LSApplicationWorkspace$installProgressForBundleID$makeSynchronous$(self, _cmd, arg1, arg2); return r; }
static bool _logos_method$_ungrouped$LSApplicationWorkspace$invalidateIconCache$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> invalidateIconCache:%@]", self, arg1); bool r = _logos_orig$_ungrouped$LSApplicationWorkspace$invalidateIconCache$(self, _cmd, arg1); return r; }
static bool _logos_method$_ungrouped$LSApplicationWorkspace$isApplicationAvailableToOpenURL$error$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id* arg2) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> isApplicationAvailableToOpenURL:%@ error:%p]", self, arg1, arg2); bool r = _logos_orig$_ungrouped$LSApplicationWorkspace$isApplicationAvailableToOpenURL$error$(self, _cmd, arg1, arg2); return r; }
static bool _logos_method$_ungrouped$LSApplicationWorkspace$isApplicationAvailableToOpenURL$includePrivateURLSchemes$error$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, bool arg2, id* arg3) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> isApplicationAvailableToOpenURL:%@ includePrivateURLSchemes:%d error:%p]", self, arg1, arg2, arg3); bool r = _logos_orig$_ungrouped$LSApplicationWorkspace$isApplicationAvailableToOpenURL$includePrivateURLSchemes$error$(self, _cmd, arg1, arg2, arg3); return r; }
static bool _logos_method$_ungrouped$LSApplicationWorkspace$isApplicationAvailableToOpenURLCommon$includePrivateURLSchemes$error$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, bool arg2, id* arg3) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> isApplicationAvailableToOpenURLCommon:%@ includePrivateURLSchemes:%d error:%p]", self, arg1, arg2, arg3); bool r = _logos_orig$_ungrouped$LSApplicationWorkspace$isApplicationAvailableToOpenURLCommon$includePrivateURLSchemes$error$(self, _cmd, arg1, arg2, arg3); return r; }
static id _logos_method$_ungrouped$LSApplicationWorkspace$machOUUIDsForBundleIdentifiers$error$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id* arg2) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> machOUUIDsForBundleIdentifiers:%@ error:%p]", self, arg1, arg2); id r = _logos_orig$_ungrouped$LSApplicationWorkspace$machOUUIDsForBundleIdentifiers$error$(self, _cmd, arg1, arg2); return r; }


static void _logos_method$_ungrouped$LSApplicationWorkspace$openUserActivity$withApplicationProxy$completionHandler$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2, id  arg3) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> openUserActivity:%@ withApplicationProxy:%@ completionHandler:%@]", self, arg1, arg2, arg3); _logos_orig$_ungrouped$LSApplicationWorkspace$openUserActivity$withApplicationProxy$completionHandler$(self, _cmd, arg1, arg2, arg3); }
static void _logos_method$_ungrouped$LSApplicationWorkspace$openUserActivity$withApplicationProxy$options$completionHandler$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2, id arg3, id  arg4) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> openUserActivity:%@ withApplicationProxy:%@ options:%@ completionHandler:%@]", self, arg1, arg2, arg3, arg4); _logos_orig$_ungrouped$LSApplicationWorkspace$openUserActivity$withApplicationProxy$options$completionHandler$(self, _cmd, arg1, arg2, arg3, arg4); }
static id _logos_method$_ungrouped$LSApplicationWorkspace$operationToOpenResource$usingApplication$uniqueDocumentIdentifier$sourceIsManaged$userInfo$delegate$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2, id arg3, bool arg4, id arg5, id arg6) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> operationToOpenResource:%@ usingApplication:%@ uniqueDocumentIdentifier:%@ sourceIsManaged:%d userInfo:%@ delegate:%@]", self, arg1, arg2, arg3, arg4, arg5, arg6); id r = _logos_orig$_ungrouped$LSApplicationWorkspace$operationToOpenResource$usingApplication$uniqueDocumentIdentifier$sourceIsManaged$userInfo$delegate$(self, _cmd, arg1, arg2, arg3, arg4, arg5, arg6); return r; }
static id _logos_method$_ungrouped$LSApplicationWorkspace$operationToOpenResource$usingApplication$uniqueDocumentIdentifier$userInfo$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2, id arg3, id arg4) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> operationToOpenResource:%@ usingApplication:%@ uniqueDocumentIdentifier:%@ userInfo:%@]", self, arg1, arg2, arg3, arg4); id r = _logos_orig$_ungrouped$LSApplicationWorkspace$operationToOpenResource$usingApplication$uniqueDocumentIdentifier$userInfo$(self, _cmd, arg1, arg2, arg3, arg4); return r; }
static id _logos_method$_ungrouped$LSApplicationWorkspace$operationToOpenResource$usingApplication$uniqueDocumentIdentifier$userInfo$delegate$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2, id arg3, id arg4, id arg5) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> operationToOpenResource:%@ usingApplication:%@ uniqueDocumentIdentifier:%@ userInfo:%@ delegate:%@]", self, arg1, arg2, arg3, arg4, arg5); id r = _logos_orig$_ungrouped$LSApplicationWorkspace$operationToOpenResource$usingApplication$uniqueDocumentIdentifier$userInfo$delegate$(self, _cmd, arg1, arg2, arg3, arg4, arg5); return r; }
static id _logos_method$_ungrouped$LSApplicationWorkspace$operationToOpenResource$usingApplication$userInfo$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2, id arg3) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> operationToOpenResource:%@ usingApplication:%@ userInfo:%@]", self, arg1, arg2, arg3); id r = _logos_orig$_ungrouped$LSApplicationWorkspace$operationToOpenResource$usingApplication$userInfo$(self, _cmd, arg1, arg2, arg3); return r; }
static id _logos_method$_ungrouped$LSApplicationWorkspace$placeholderApplications(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> placeholderApplications]", self); id r = _logos_orig$_ungrouped$LSApplicationWorkspace$placeholderApplications(self, _cmd); return r; }
static id _logos_method$_ungrouped$LSApplicationWorkspace$pluginsMatchingQuery$applyFilter$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id  arg2) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> pluginsMatchingQuery:%@ applyFilter:%@]", self, arg1, arg2); id r = _logos_orig$_ungrouped$LSApplicationWorkspace$pluginsMatchingQuery$applyFilter$(self, _cmd, arg1, arg2); return r; }
static id _logos_method$_ungrouped$LSApplicationWorkspace$pluginsWithIdentifiers$protocols$version$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2, id arg3) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> pluginsWithIdentifiers:%@ protocols:%@ version:%@]", self, arg1, arg2, arg3); id r = _logos_orig$_ungrouped$LSApplicationWorkspace$pluginsWithIdentifiers$protocols$version$(self, _cmd, arg1, arg2, arg3); return r; }
static id _logos_method$_ungrouped$LSApplicationWorkspace$pluginsWithIdentifiers$protocols$version$applyFilter$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2, id arg3, id  arg4) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> pluginsWithIdentifiers:%@ protocols:%@ version:%@ applyFilter:%@]", self, arg1, arg2, arg3, arg4); id r = _logos_orig$_ungrouped$LSApplicationWorkspace$pluginsWithIdentifiers$protocols$version$applyFilter$(self, _cmd, arg1, arg2, arg3, arg4); return r; }
static id _logos_method$_ungrouped$LSApplicationWorkspace$pluginsWithIdentifiers$protocols$version$withFilter$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2, id arg3, id  arg4) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> pluginsWithIdentifiers:%@ protocols:%@ version:%@ withFilter:%@]", self, arg1, arg2, arg3, arg4); id r = _logos_orig$_ungrouped$LSApplicationWorkspace$pluginsWithIdentifiers$protocols$version$withFilter$(self, _cmd, arg1, arg2, arg3, arg4); return r; }
static id _logos_method$_ungrouped$LSApplicationWorkspace$privateURLSchemes(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> privateURLSchemes]", self); id r = _logos_orig$_ungrouped$LSApplicationWorkspace$privateURLSchemes(self, _cmd); return r; }
static id _logos_method$_ungrouped$LSApplicationWorkspace$publicURLSchemes(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> publicURLSchemes]", self); id r = _logos_orig$_ungrouped$LSApplicationWorkspace$publicURLSchemes(self, _cmd); return r; }
static bool _logos_method$_ungrouped$LSApplicationWorkspace$registerApplication$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> registerApplication:%@]", self, arg1); bool r = _logos_orig$_ungrouped$LSApplicationWorkspace$registerApplication$(self, _cmd, arg1); return r; }
static bool _logos_method$_ungrouped$LSApplicationWorkspace$registerApplicationDictionary$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> registerApplicationDictionary:%@]", self, arg1); bool r = _logos_orig$_ungrouped$LSApplicationWorkspace$registerApplicationDictionary$(self, _cmd, arg1); return r; }
static bool _logos_method$_ungrouped$LSApplicationWorkspace$registerApplicationDictionary$withObserverNotification$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, int arg2) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> registerApplicationDictionary:%@ withObserverNotification:%d]", self, arg1, arg2); bool r = _logos_orig$_ungrouped$LSApplicationWorkspace$registerApplicationDictionary$withObserverNotification$(self, _cmd, arg1, arg2); return r; }
static bool _logos_method$_ungrouped$LSApplicationWorkspace$registerBundleWithInfo$options$type$progress$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2, unsigned long long arg3, id arg4) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> registerBundleWithInfo:%@ options:%@ type:%llu progress:%@]", self, arg1, arg2, arg3, arg4); bool r = _logos_orig$_ungrouped$LSApplicationWorkspace$registerBundleWithInfo$options$type$progress$(self, _cmd, arg1, arg2, arg3, arg4); return r; }
static bool _logos_method$_ungrouped$LSApplicationWorkspace$registerPlugin$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> registerPlugin:%@]", self, arg1); bool r = _logos_orig$_ungrouped$LSApplicationWorkspace$registerPlugin$(self, _cmd, arg1); return r; }
static void _logos_method$_ungrouped$LSApplicationWorkspace$removeInstallProgressForBundleID$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> removeInstallProgressForBundleID:%@]", self, arg1); _logos_orig$_ungrouped$LSApplicationWorkspace$removeInstallProgressForBundleID$(self, _cmd, arg1); }
static bool _logos_method$_ungrouped$LSApplicationWorkspace$restoreSystemApplication$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> restoreSystemApplication:%@]", self, arg1); bool r = _logos_orig$_ungrouped$LSApplicationWorkspace$restoreSystemApplication$(self, _cmd, arg1); return r; }
static void _logos_method$_ungrouped$LSApplicationWorkspace$scanForApplicationStateChangesFromRank$toRank$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> scanForApplicationStateChangesFromRank:%@ toRank:%@]", self, arg1, arg2); _logos_orig$_ungrouped$LSApplicationWorkspace$scanForApplicationStateChangesFromRank$toRank$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$LSApplicationWorkspace$scanForApplicationStateChangesFromWhitelist$to$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> scanForApplicationStateChangesFromWhitelist:%@ to:%@]", self, arg1, arg2); _logos_orig$_ungrouped$LSApplicationWorkspace$scanForApplicationStateChangesFromWhitelist$to$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$LSApplicationWorkspace$sendApplicationStateChangedNotificationsFor$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> sendApplicationStateChangedNotificationsFor:%@]", self, arg1); _logos_orig$_ungrouped$LSApplicationWorkspace$sendApplicationStateChangedNotificationsFor$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$LSApplicationWorkspace$sendInstallNotificationForApp$withPlugins$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> sendInstallNotificationForApp:%@ withPlugins:%@]", self, arg1, arg2); _logos_orig$_ungrouped$LSApplicationWorkspace$sendInstallNotificationForApp$withPlugins$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$LSApplicationWorkspace$sendUninstallNotificationForApp$withPlugins$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> sendUninstallNotificationForApp:%@ withPlugins:%@]", self, arg1, arg2); _logos_orig$_ungrouped$LSApplicationWorkspace$sendUninstallNotificationForApp$withPlugins$(self, _cmd, arg1, arg2); }
static bool _logos_method$_ungrouped$LSApplicationWorkspace$uninstallApplication$withOptions$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> uninstallApplication:%@ withOptions:%@]", self, arg1, arg2); bool r = _logos_orig$_ungrouped$LSApplicationWorkspace$uninstallApplication$withOptions$(self, _cmd, arg1, arg2); return r; }
static bool _logos_method$_ungrouped$LSApplicationWorkspace$uninstallApplication$withOptions$error$usingBlock$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2, id* arg3, id  arg4) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> uninstallApplication:%@ withOptions:%@ error:%p usingBlock:%@]", self, arg1, arg2, arg3, arg4); bool r = _logos_orig$_ungrouped$LSApplicationWorkspace$uninstallApplication$withOptions$error$usingBlock$(self, _cmd, arg1, arg2, arg3, arg4); return r; }
static bool _logos_method$_ungrouped$LSApplicationWorkspace$uninstallApplication$withOptions$usingBlock$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2, id  arg3) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> uninstallApplication:%@ withOptions:%@ usingBlock:%@]", self, arg1, arg2, arg3); bool r = _logos_orig$_ungrouped$LSApplicationWorkspace$uninstallApplication$withOptions$usingBlock$(self, _cmd, arg1, arg2, arg3); return r; }
static bool _logos_method$_ungrouped$LSApplicationWorkspace$uninstallSystemApplication$withOptions$usingBlock$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2, id  arg3) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> uninstallSystemApplication:%@ withOptions:%@ usingBlock:%@]", self, arg1, arg2, arg3); bool r = _logos_orig$_ungrouped$LSApplicationWorkspace$uninstallSystemApplication$withOptions$usingBlock$(self, _cmd, arg1, arg2, arg3); return r; }
static bool _logos_method$_ungrouped$LSApplicationWorkspace$unregisterApplication$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> unregisterApplication:%@]", self, arg1); bool r = _logos_orig$_ungrouped$LSApplicationWorkspace$unregisterApplication$(self, _cmd, arg1); return r; }
static bool _logos_method$_ungrouped$LSApplicationWorkspace$unregisterPlugin$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> unregisterPlugin:%@]", self, arg1); bool r = _logos_orig$_ungrouped$LSApplicationWorkspace$unregisterPlugin$(self, _cmd, arg1); return r; }
static id _logos_method$_ungrouped$LSApplicationWorkspace$unrestrictedApplications(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> unrestrictedApplications]", self); id r = _logos_orig$_ungrouped$LSApplicationWorkspace$unrestrictedApplications(self, _cmd); return r; }
static bool _logos_method$_ungrouped$LSApplicationWorkspace$updateRecordForApp$withSINF$iTunesMetadata$error$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2, id arg3, id* arg4) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> updateRecordForApp:%@ withSINF:%@ iTunesMetadata:%@ error:%p]", self, arg1, arg2, arg3, arg4); bool r = _logos_orig$_ungrouped$LSApplicationWorkspace$updateRecordForApp$withSINF$iTunesMetadata$error$(self, _cmd, arg1, arg2, arg3, arg4); return r; }
static bool _logos_method$_ungrouped$LSApplicationWorkspace$updateSINFWithData$forApplication$options$error$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2, id arg3, id* arg4) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> updateSINFWithData:%@ forApplication:%@ options:%@ error:%p]", self, arg1, arg2, arg3, arg4); bool r = _logos_orig$_ungrouped$LSApplicationWorkspace$updateSINFWithData$forApplication$options$error$(self, _cmd, arg1, arg2, arg3, arg4); return r; }
static bool _logos_method$_ungrouped$LSApplicationWorkspace$updateiTunesMetadataWithData$forApplication$options$error$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2, id arg3, id* arg4) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> updateiTunesMetadataWithData:%@ forApplication:%@ options:%@ error:%p]", self, arg1, arg2, arg3, arg4); bool r = _logos_orig$_ungrouped$LSApplicationWorkspace$updateiTunesMetadataWithData$forApplication$options$error$(self, _cmd, arg1, arg2, arg3, arg4); return r; }
static void _logos_method$_ungrouped$LSApplicationWorkspace$_sf_openURL$withOptions$completionHandler$(_LOGOS_SELF_TYPE_NORMAL LSApplicationWorkspace* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2, id  arg3) { HBLogDebug(@"-[<LSApplicationWorkspace: %p> _sf_openURL:%@ withOptions:%@ completionHandler:%@]", self, arg1, arg2, arg3); _logos_orig$_ungrouped$LSApplicationWorkspace$_sf_openURL$withOptions$completionHandler$(self, _cmd, arg1, arg2, arg3); }


















#pragma mark -
#pragma mark - LSApplicationRestrictionsManager

static id _logos_meta_method$_ungrouped$LSApplicationRestrictionsManager$sharedInstance(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) {
    HBLogDebug(@"+[<LSApplicationRestrictionsManager: %p> sharedInstance]", self);
    id r = _logos_meta_orig$_ungrouped$LSApplicationRestrictionsManager$sharedInstance(self, _cmd);
    return r;
}

static void _logos_method$_ungrouped$LSApplicationRestrictionsManager$setWhitelistedBundleIDs$(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) {
    HBLogDebug(@"-[<LSApplicationRestrictionsManager: %p> setWhitelistedBundleIDs:%@]", self, arg1);
    _logos_orig$_ungrouped$LSApplicationRestrictionsManager$setWhitelistedBundleIDs$(self, _cmd, arg1);
}

static bool _logos_method$_ungrouped$LSApplicationRestrictionsManager$isAdTrackingEnabled(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSApplicationRestrictionsManager: %p> isAdTrackingEnabled]", self); bool  r = _logos_orig$_ungrouped$LSApplicationRestrictionsManager$isAdTrackingEnabled(self, _cmd); return r; }
static NSSet * _logos_method$_ungrouped$LSApplicationRestrictionsManager$blacklistedBundleIDs(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSApplicationRestrictionsManager: %p> blacklistedBundleIDs]", self); NSSet * r = _logos_orig$_ungrouped$LSApplicationRestrictionsManager$blacklistedBundleIDs(self, _cmd); return r; }
static NSNumber * _logos_method$_ungrouped$LSApplicationRestrictionsManager$maximumRating(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSApplicationRestrictionsManager: %p> maximumRating]", self); NSNumber * r = _logos_orig$_ungrouped$LSApplicationRestrictionsManager$maximumRating(self, _cmd); return r; }
static bool _logos_method$_ungrouped$LSApplicationRestrictionsManager$isOpenInRestrictionInEffect(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSApplicationRestrictionsManager: %p> isOpenInRestrictionInEffect]", self); bool  r = _logos_orig$_ungrouped$LSApplicationRestrictionsManager$isOpenInRestrictionInEffect(self, _cmd); return r; }
static NSSet * _logos_method$_ungrouped$LSApplicationRestrictionsManager$removedSystemApplications(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSApplicationRestrictionsManager: %p> removedSystemApplications]", self); NSSet * r = _logos_orig$_ungrouped$LSApplicationRestrictionsManager$removedSystemApplications(self, _cmd); return r; }
static NSSet * _logos_method$_ungrouped$LSApplicationRestrictionsManager$restrictedBundleIDs(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSApplicationRestrictionsManager: %p> restrictedBundleIDs]", self); NSSet * r = _logos_orig$_ungrouped$LSApplicationRestrictionsManager$restrictedBundleIDs(self, _cmd); return r; }
static bool _logos_method$_ungrouped$LSApplicationRestrictionsManager$isWhitelistEnabled(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSApplicationRestrictionsManager: %p> isWhitelistEnabled]", self); bool  r = _logos_orig$_ungrouped$LSApplicationRestrictionsManager$isWhitelistEnabled(self, _cmd); return r; }
static NSSet * _logos_method$_ungrouped$LSApplicationRestrictionsManager$whitelistedBundleIDs(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSApplicationRestrictionsManager: %p> whitelistedBundleIDs]", self); NSSet * r = _logos_orig$_ungrouped$LSApplicationRestrictionsManager$whitelistedBundleIDs(self, _cmd); return r; }
static id _logos_meta_method$_ungrouped$LSApplicationRestrictionsManager$activeRestrictionIdentifiers(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"+[<LSApplicationRestrictionsManager: %p> activeRestrictionIdentifiers]", self); id r = _logos_meta_orig$_ungrouped$LSApplicationRestrictionsManager$activeRestrictionIdentifiers(self, _cmd); return r; }
static id _logos_method$_ungrouped$LSApplicationRestrictionsManager$_LSResolveIdentifiers$(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<LSApplicationRestrictionsManager: %p> _LSResolveIdentifiers:%@]", self, arg1); id r = _logos_orig$_ungrouped$LSApplicationRestrictionsManager$_LSResolveIdentifiers$(self, _cmd, arg1); return r; }
static void _logos_method$_ungrouped$LSApplicationRestrictionsManager$addPendingChanges$(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<LSApplicationRestrictionsManager: %p> addPendingChanges:%@]", self, arg1); _logos_orig$_ungrouped$LSApplicationRestrictionsManager$addPendingChanges$(self, _cmd, arg1); }
static id _logos_method$_ungrouped$LSApplicationRestrictionsManager$allowedOpenInAppBundleIDsAfterApplyingFilterToAppBundleIDs$originatingAppBundleID$originatingAccountIsManaged$(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2, bool arg3) { HBLogDebug(@"-[<LSApplicationRestrictionsManager: %p> allowedOpenInAppBundleIDsAfterApplyingFilterToAppBundleIDs:%@ originatingAppBundleID:%@ originatingAccountIsManaged:%d]", self, arg1, arg2, arg3); id r = _logos_orig$_ungrouped$LSApplicationRestrictionsManager$allowedOpenInAppBundleIDsAfterApplyingFilterToAppBundleIDs$originatingAppBundleID$originatingAccountIsManaged$(self, _cmd, arg1, arg2, arg3); return r; }
static void _logos_method$_ungrouped$LSApplicationRestrictionsManager$beginListeningForChanges(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSApplicationRestrictionsManager: %p> beginListeningForChanges]", self); _logos_orig$_ungrouped$LSApplicationRestrictionsManager$beginListeningForChanges(self, _cmd); }
static id _logos_method$_ungrouped$LSApplicationRestrictionsManager$blacklistedBundleID(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSApplicationRestrictionsManager: %p> blacklistedBundleID]", self); id r = _logos_orig$_ungrouped$LSApplicationRestrictionsManager$blacklistedBundleID(self, _cmd); return r; }
static id _logos_method$_ungrouped$LSApplicationRestrictionsManager$calculateSetDifference$and$(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2) { HBLogDebug(@"-[<LSApplicationRestrictionsManager: %p> calculateSetDifference:%@ and:%@]", self, arg1, arg2); id r = _logos_orig$_ungrouped$LSApplicationRestrictionsManager$calculateSetDifference$and$(self, _cmd, arg1, arg2); return r; }
static void _logos_method$_ungrouped$LSApplicationRestrictionsManager$clearAllValues(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSApplicationRestrictionsManager: %p> clearAllValues]", self); _logos_orig$_ungrouped$LSApplicationRestrictionsManager$clearAllValues(self, _cmd); }
static void _logos_method$_ungrouped$LSApplicationRestrictionsManager$clearPendingChanges(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSApplicationRestrictionsManager: %p> clearPendingChanges]", self); _logos_orig$_ungrouped$LSApplicationRestrictionsManager$clearPendingChanges(self, _cmd); }
static void _logos_method$_ungrouped$LSApplicationRestrictionsManager$dealloc(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSApplicationRestrictionsManager: %p> dealloc]", self); _logos_orig$_ungrouped$LSApplicationRestrictionsManager$dealloc(self, _cmd); }
static void _logos_method$_ungrouped$LSApplicationRestrictionsManager$handleMCEffectiveSettingsChanged(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSApplicationRestrictionsManager: %p> handleMCEffectiveSettingsChanged]", self); _logos_orig$_ungrouped$LSApplicationRestrictionsManager$handleMCEffectiveSettingsChanged(self, _cmd); }
static void _logos_method$_ungrouped$LSApplicationRestrictionsManager$handleMCRemovedSystemAppsChanged(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSApplicationRestrictionsManager: %p> handleMCRemovedSystemAppsChanged]", self); _logos_orig$_ungrouped$LSApplicationRestrictionsManager$handleMCRemovedSystemAppsChanged(self, _cmd); }
static LSApplicationRestrictionsManager* _logos_method$_ungrouped$LSApplicationRestrictionsManager$init(_LOGOS_SELF_TYPE_INIT LSApplicationRestrictionsManager* __unused self, SEL __unused _cmd) _LOGOS_RETURN_RETAINED { HBLogDebug(@"-[<LSApplicationRestrictionsManager: %p> init]", self); id r = _logos_orig$_ungrouped$LSApplicationRestrictionsManager$init(self, _cmd); return r; }
static bool _logos_method$_ungrouped$LSApplicationRestrictionsManager$isAppExtensionRestricted$(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<LSApplicationRestrictionsManager: %p> isAppExtensionRestricted:%@]", self, arg1); bool r = _logos_orig$_ungrouped$LSApplicationRestrictionsManager$isAppExtensionRestricted$(self, _cmd, arg1); return r; }
static bool _logos_method$_ungrouped$LSApplicationRestrictionsManager$isApplicationRemoved$(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<LSApplicationRestrictionsManager: %p> isApplicationRemoved:%@]", self, arg1); bool r = _logos_orig$_ungrouped$LSApplicationRestrictionsManager$isApplicationRemoved$(self, _cmd, arg1); return r; }
static bool _logos_method$_ungrouped$LSApplicationRestrictionsManager$isApplicationRestricted$(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<LSApplicationRestrictionsManager: %p> isApplicationRestricted:%@]", self, arg1); bool r = _logos_orig$_ungrouped$LSApplicationRestrictionsManager$isApplicationRestricted$(self, _cmd, arg1); return r; }
static bool _logos_method$_ungrouped$LSApplicationRestrictionsManager$isApplicationRestricted$checkFeatureRestrictions$(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, bool arg2) { HBLogDebug(@"-[<LSApplicationRestrictionsManager: %p> isApplicationRestricted:%@ checkFeatureRestrictions:%d]", self, arg1, arg2); bool r = _logos_orig$_ungrouped$LSApplicationRestrictionsManager$isApplicationRestricted$checkFeatureRestrictions$(self, _cmd, arg1, arg2); return r; }
static bool _logos_method$_ungrouped$LSApplicationRestrictionsManager$isFeatureAllowed$(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, unsigned long long arg1) { HBLogDebug(@"-[<LSApplicationRestrictionsManager: %p> isFeatureAllowed:%llu]", self, arg1); bool r = _logos_orig$_ungrouped$LSApplicationRestrictionsManager$isFeatureAllowed$(self, _cmd, arg1); return r; }
static bool _logos_method$_ungrouped$LSApplicationRestrictionsManager$isRatingAllowed$(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<LSApplicationRestrictionsManager: %p> isRatingAllowed:%@]", self, arg1); bool r = _logos_orig$_ungrouped$LSApplicationRestrictionsManager$isRatingAllowed$(self, _cmd, arg1); return r; }
static id _logos_method$_ungrouped$LSApplicationRestrictionsManager$pendingChanges(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<LSApplicationRestrictionsManager: %p> pendingChanges]", self); id r = _logos_orig$_ungrouped$LSApplicationRestrictionsManager$pendingChanges(self, _cmd); return r; }
static bool _logos_method$_ungrouped$LSApplicationRestrictionsManager$setApplication$removed$(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, bool arg2) { HBLogDebug(@"-[<LSApplicationRestrictionsManager: %p> setApplication:%@ removed:%d]", self, arg1, arg2); bool r = _logos_orig$_ungrouped$LSApplicationRestrictionsManager$setApplication$removed$(self, _cmd, arg1, arg2); return r; }
static void _logos_method$_ungrouped$LSApplicationRestrictionsManager$setBlacklistedBundleIDs$(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<LSApplicationRestrictionsManager: %p> setBlacklistedBundleIDs:%@]", self, arg1); _logos_orig$_ungrouped$LSApplicationRestrictionsManager$setBlacklistedBundleIDs$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$LSApplicationRestrictionsManager$setRemovedSystemApplications$(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<LSApplicationRestrictionsManager: %p> setRemovedSystemApplications:%@]", self, arg1); _logos_orig$_ungrouped$LSApplicationRestrictionsManager$setRemovedSystemApplications$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$LSApplicationRestrictionsManager$setRestrictedBundleIDs$(_LOGOS_SELF_TYPE_NORMAL LSApplicationRestrictionsManager* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<LSApplicationRestrictionsManager: %p> setRestrictedBundleIDs:%@]", self, arg1); _logos_orig$_ungrouped$LSApplicationRestrictionsManager$setRestrictedBundleIDs$(self, _cmd, arg1); }

static __attribute__((constructor)) void _logosLocalInit() {
{Class _logos_class$_ungrouped$LSApplicationProxy = objc_getClass("LSApplicationProxy"); Class _logos_metaclass$_ungrouped$LSApplicationProxy = object_getClass(_logos_class$_ungrouped$LSApplicationProxy); MSHookMessageEx(_logos_metaclass$_ungrouped$LSApplicationProxy, @selector(supportsSecureCoding), (IMP)&_logos_meta_method$_ungrouped$LSApplicationProxy$supportsSecureCoding, (IMP*)&_logos_meta_orig$_ungrouped$LSApplicationProxy$supportsSecureCoding);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationProxy, @selector(applicationIdentifier), (IMP)&_logos_method$_ungrouped$LSApplicationProxy$applicationIdentifier, (IMP*)&_logos_orig$_ungrouped$LSApplicationProxy$applicationIdentifier);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationProxy, @selector(itemID), (IMP)&_logos_method$_ungrouped$LSApplicationProxy$itemID, (IMP*)&_logos_orig$_ungrouped$LSApplicationProxy$itemID);MSHookMessageEx(_logos_metaclass$_ungrouped$LSApplicationProxy, @selector(applicationProxyForIdentifier:), (IMP)&_logos_meta_method$_ungrouped$LSApplicationProxy$applicationProxyForIdentifier$, (IMP*)&_logos_meta_orig$_ungrouped$LSApplicationProxy$applicationProxyForIdentifier$);MSHookMessageEx(_logos_metaclass$_ungrouped$LSApplicationProxy, @selector(applicationProxyForIdentifier:placeholder:), (IMP)&_logos_meta_method$_ungrouped$LSApplicationProxy$applicationProxyForIdentifier$placeholder$, (IMP*)&_logos_meta_orig$_ungrouped$LSApplicationProxy$applicationProxyForIdentifier$placeholder$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationProxy, @selector(shortVersionString), (IMP)&_logos_method$_ungrouped$LSApplicationProxy$shortVersionString, (IMP*)&_logos_orig$_ungrouped$LSApplicationProxy$shortVersionString);Class _logos_class$_ungrouped$LSPlugInKitProxy = objc_getClass("LSPlugInKitProxy"); Class _logos_metaclass$_ungrouped$LSPlugInKitProxy = object_getClass(_logos_class$_ungrouped$LSPlugInKitProxy); MSHookMessageEx(_logos_metaclass$_ungrouped$LSPlugInKitProxy, @selector(supportsSecureCoding), (IMP)&_logos_meta_method$_ungrouped$LSPlugInKitProxy$supportsSecureCoding, (IMP*)&_logos_meta_orig$_ungrouped$LSPlugInKitProxy$supportsSecureCoding);MSHookMessageEx(_logos_class$_ungrouped$LSPlugInKitProxy, @selector(containingBundle), (IMP)&_logos_method$_ungrouped$LSPlugInKitProxy$containingBundle, (IMP*)&_logos_orig$_ungrouped$LSPlugInKitProxy$containingBundle);MSHookMessageEx(_logos_class$_ungrouped$LSPlugInKitProxy, @selector(pluginIdentifier), (IMP)&_logos_method$_ungrouped$LSPlugInKitProxy$pluginIdentifier, (IMP*)&_logos_orig$_ungrouped$LSPlugInKitProxy$pluginIdentifier);MSHookMessageEx(_logos_class$_ungrouped$LSPlugInKitProxy, @selector(pluginUUID), (IMP)&_logos_method$_ungrouped$LSPlugInKitProxy$pluginUUID, (IMP*)&_logos_orig$_ungrouped$LSPlugInKitProxy$pluginUUID);MSHookMessageEx(_logos_class$_ungrouped$LSPlugInKitProxy, @selector(teamID), (IMP)&_logos_method$_ungrouped$LSPlugInKitProxy$teamID, (IMP*)&_logos_orig$_ungrouped$LSPlugInKitProxy$teamID);MSHookMessageEx(_logos_class$_ungrouped$LSPlugInKitProxy, @selector(infoPlist), (IMP)&_logos_method$_ungrouped$LSPlugInKitProxy$infoPlist, (IMP*)&_logos_orig$_ungrouped$LSPlugInKitProxy$infoPlist);MSHookMessageEx(_logos_metaclass$_ungrouped$LSPlugInKitProxy, @selector(containingBundleIdentifiersForPlugInBundleIdentifiers:error:), (IMP)&_logos_meta_method$_ungrouped$LSPlugInKitProxy$containingBundleIdentifiersForPlugInBundleIdentifiers$error$, (IMP*)&_logos_meta_orig$_ungrouped$LSPlugInKitProxy$containingBundleIdentifiersForPlugInBundleIdentifiers$error$);MSHookMessageEx(_logos_metaclass$_ungrouped$LSPlugInKitProxy, @selector(plugInKitProxyForPlugin:), (IMP)&_logos_meta_method$_ungrouped$LSPlugInKitProxy$plugInKitProxyForPlugin$, (IMP*)&_logos_meta_orig$_ungrouped$LSPlugInKitProxy$plugInKitProxyForPlugin$);MSHookMessageEx(_logos_metaclass$_ungrouped$LSPlugInKitProxy, @selector(plugInKitProxyForUUID:bundleIdentifier:pluginIdentifier:effectiveIdentifier:version:bundleURL:), (IMP)&_logos_meta_method$_ungrouped$LSPlugInKitProxy$plugInKitProxyForUUID$bundleIdentifier$pluginIdentifier$effectiveIdentifier$version$bundleURL$, (IMP*)&_logos_meta_orig$_ungrouped$LSPlugInKitProxy$plugInKitProxyForUUID$bundleIdentifier$pluginIdentifier$effectiveIdentifier$version$bundleURL$);MSHookMessageEx(_logos_metaclass$_ungrouped$LSPlugInKitProxy, @selector(pluginKitProxyForIdentifier:), (IMP)&_logos_meta_method$_ungrouped$LSPlugInKitProxy$pluginKitProxyForIdentifier$, (IMP*)&_logos_meta_orig$_ungrouped$LSPlugInKitProxy$pluginKitProxyForIdentifier$);MSHookMessageEx(_logos_metaclass$_ungrouped$LSPlugInKitProxy, @selector(pluginKitProxyForURL:), (IMP)&_logos_meta_method$_ungrouped$LSPlugInKitProxy$pluginKitProxyForURL$, (IMP*)&_logos_meta_orig$_ungrouped$LSPlugInKitProxy$pluginKitProxyForURL$);MSHookMessageEx(_logos_metaclass$_ungrouped$LSPlugInKitProxy, @selector(pluginKitProxyForUUID:), (IMP)&_logos_meta_method$_ungrouped$LSPlugInKitProxy$pluginKitProxyForUUID$, (IMP*)&_logos_meta_orig$_ungrouped$LSPlugInKitProxy$pluginKitProxyForUUID$);MSHookMessageEx(_logos_class$_ungrouped$LSPlugInKitProxy, @selector(UPPValidated), (IMP)&_logos_method$_ungrouped$LSPlugInKitProxy$UPPValidated, (IMP*)&_logos_orig$_ungrouped$LSPlugInKitProxy$UPPValidated);MSHookMessageEx(_logos_class$_ungrouped$LSPlugInKitProxy, @selector(_initWithPlugin:), (IMP)&_logos_method$_ungrouped$LSPlugInKitProxy$_initWithPlugin$, (IMP*)&_logos_orig$_ungrouped$LSPlugInKitProxy$_initWithPlugin$);MSHookMessageEx(_logos_class$_ungrouped$LSPlugInKitProxy, @selector(_initWithUUID:bundleIdentifier:pluginIdentifier:effectiveIdentifier:version:bundleURL:), (IMP)&_logos_method$_ungrouped$LSPlugInKitProxy$_initWithUUID$bundleIdentifier$pluginIdentifier$effectiveIdentifier$version$bundleURL$, (IMP*)&_logos_orig$_ungrouped$LSPlugInKitProxy$_initWithUUID$bundleIdentifier$pluginIdentifier$effectiveIdentifier$version$bundleURL$);MSHookMessageEx(_logos_class$_ungrouped$LSPlugInKitProxy, @selector(_valueForEqualityTesting), (IMP)&_logos_method$_ungrouped$LSPlugInKitProxy$_valueForEqualityTesting, (IMP*)&_logos_orig$_ungrouped$LSPlugInKitProxy$_valueForEqualityTesting);MSHookMessageEx(_logos_class$_ungrouped$LSPlugInKitProxy, @selector(boundIconsDictionary), (IMP)&_logos_method$_ungrouped$LSPlugInKitProxy$boundIconsDictionary, (IMP*)&_logos_orig$_ungrouped$LSPlugInKitProxy$boundIconsDictionary);MSHookMessageEx(_logos_class$_ungrouped$LSPlugInKitProxy, @selector(iconDataForVariant:), (IMP)&_logos_method$_ungrouped$LSPlugInKitProxy$iconDataForVariant$, (IMP*)&_logos_orig$_ungrouped$LSPlugInKitProxy$iconDataForVariant$);MSHookMessageEx(_logos_class$_ungrouped$LSPlugInKitProxy, @selector(isOnSystemPartition), (IMP)&_logos_method$_ungrouped$LSPlugInKitProxy$isOnSystemPartition, (IMP*)&_logos_orig$_ungrouped$LSPlugInKitProxy$isOnSystemPartition);MSHookMessageEx(_logos_class$_ungrouped$LSPlugInKitProxy, @selector(localizedName), (IMP)&_logos_method$_ungrouped$LSPlugInKitProxy$localizedName, (IMP*)&_logos_orig$_ungrouped$LSPlugInKitProxy$localizedName);MSHookMessageEx(_logos_class$_ungrouped$LSPlugInKitProxy, @selector(localizedShortName), (IMP)&_logos_method$_ungrouped$LSPlugInKitProxy$localizedShortName, (IMP*)&_logos_orig$_ungrouped$LSPlugInKitProxy$localizedShortName);MSHookMessageEx(_logos_class$_ungrouped$LSPlugInKitProxy, @selector(objectForInfoDictionaryKey:ofClass:inScope:), (IMP)&_logos_method$_ungrouped$LSPlugInKitProxy$objectForInfoDictionaryKey$ofClass$inScope$, (IMP*)&_logos_orig$_ungrouped$LSPlugInKitProxy$objectForInfoDictionaryKey$ofClass$inScope$);MSHookMessageEx(_logos_class$_ungrouped$LSPlugInKitProxy, @selector(originalIdentifier), (IMP)&_logos_method$_ungrouped$LSPlugInKitProxy$originalIdentifier, (IMP*)&_logos_orig$_ungrouped$LSPlugInKitProxy$originalIdentifier);MSHookMessageEx(_logos_class$_ungrouped$LSPlugInKitProxy, @selector(pluginCanProvideIcon), (IMP)&_logos_method$_ungrouped$LSPlugInKitProxy$pluginCanProvideIcon, (IMP*)&_logos_orig$_ungrouped$LSPlugInKitProxy$pluginCanProvideIcon);MSHookMessageEx(_logos_class$_ungrouped$LSPlugInKitProxy, @selector(pluginKitDictionary), (IMP)&_logos_method$_ungrouped$LSPlugInKitProxy$pluginKitDictionary, (IMP*)&_logos_orig$_ungrouped$LSPlugInKitProxy$pluginKitDictionary);MSHookMessageEx(_logos_class$_ungrouped$LSPlugInKitProxy, @selector(profileValidated), (IMP)&_logos_method$_ungrouped$LSPlugInKitProxy$profileValidated, (IMP*)&_logos_orig$_ungrouped$LSPlugInKitProxy$profileValidated);MSHookMessageEx(_logos_class$_ungrouped$LSPlugInKitProxy, @selector(protocol), (IMP)&_logos_method$_ungrouped$LSPlugInKitProxy$protocol, (IMP*)&_logos_orig$_ungrouped$LSPlugInKitProxy$protocol);MSHookMessageEx(_logos_class$_ungrouped$LSPlugInKitProxy, @selector(registrationDate), (IMP)&_logos_method$_ungrouped$LSPlugInKitProxy$registrationDate, (IMP*)&_logos_orig$_ungrouped$LSPlugInKitProxy$registrationDate);MSHookMessageEx(_logos_class$_ungrouped$LSPlugInKitProxy, @selector(_un_applicationBundleURL), (IMP)&_logos_method$_ungrouped$LSPlugInKitProxy$_un_applicationBundleURL, (IMP*)&_logos_orig$_ungrouped$LSPlugInKitProxy$_un_applicationBundleURL);Class _logos_class$_ungrouped$LSApplicationWorkspace = objc_getClass("LSApplicationWorkspace"); Class _logos_metaclass$_ungrouped$LSApplicationWorkspace = object_getClass(_logos_class$_ungrouped$LSApplicationWorkspace); MSHookMessageEx(_logos_metaclass$_ungrouped$LSApplicationWorkspace, @selector(defaultWorkspace), (IMP)&_logos_meta_method$_ungrouped$LSApplicationWorkspace$defaultWorkspace, (IMP*)&_logos_meta_orig$_ungrouped$LSApplicationWorkspace$defaultWorkspace);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(deviceIdentifierForVendor), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$deviceIdentifierForVendor, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$deviceIdentifierForVendor);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(allInstalledApplications), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$allInstalledApplications, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$allInstalledApplications);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(installedPlugins), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$installedPlugins, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$installedPlugins);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(legacyApplicationProxiesListWithType:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$legacyApplicationProxiesListWithType$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$legacyApplicationProxiesListWithType$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(URLOverrideForURL:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$URLOverrideForURL$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$URLOverrideForURL$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(openURL:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$openURL$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$openURL$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(openURL:withOptions:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$openURL$withOptions$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$openURL$withOptions$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(openURL:withOptions:error:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$openURL$withOptions$error$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$openURL$withOptions$error$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(enumerateBundlesOfType:block:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$enumerateBundlesOfType$block$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$enumerateBundlesOfType$block$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(enumerateBundlesOfType:legacySPI:block:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$enumerateBundlesOfType$legacySPI$block$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$enumerateBundlesOfType$legacySPI$block$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(enumerateBundlesOfType:usingBlock:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$enumerateBundlesOfType$usingBlock$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$enumerateBundlesOfType$usingBlock$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(openApplicationWithBundleID:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$openApplicationWithBundleID$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$openApplicationWithBundleID$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(openSensitiveURL:withOptions:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$openSensitiveURL$withOptions$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$openSensitiveURL$withOptions$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(openSensitiveURL:withOptions:error:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$openSensitiveURL$withOptions$error$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$openSensitiveURL$withOptions$error$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(connection), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$connection, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$connection);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(createdInstallProgresses), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$createdInstallProgresses, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$createdInstallProgresses);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(delegateProxy), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$delegateProxy, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$delegateProxy);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(observedInstallProgresses), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$observedInstallProgresses, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$observedInstallProgresses);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(remoteObserver), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$remoteObserver, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$remoteObserver);MSHookMessageEx(_logos_metaclass$_ungrouped$LSApplicationWorkspace, @selector(activeManagedConfigurationRestrictionUUIDs), (IMP)&_logos_meta_method$_ungrouped$LSApplicationWorkspace$activeManagedConfigurationRestrictionUUIDs, (IMP*)&_logos_meta_orig$_ungrouped$LSApplicationWorkspace$activeManagedConfigurationRestrictionUUIDs);MSHookMessageEx(_logos_metaclass$_ungrouped$LSApplicationWorkspace, @selector(callbackQueue), (IMP)&_logos_meta_method$_ungrouped$LSApplicationWorkspace$callbackQueue, (IMP*)&_logos_meta_orig$_ungrouped$LSApplicationWorkspace$callbackQueue);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(URLSchemesOfType:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$URLSchemesOfType$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$URLSchemesOfType$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(_LSClearSchemaCaches), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$_LSClearSchemaCaches, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$_LSClearSchemaCaches);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(_LSFailedToOpenURL:withBundle:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$_LSFailedToOpenURL$withBundle$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$_LSFailedToOpenURL$withBundle$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(_LSPrivateDatabaseNeedsRebuild), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$_LSPrivateDatabaseNeedsRebuild, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$_LSPrivateDatabaseNeedsRebuild);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(_LSPrivateRebuildApplicationDatabasesForSystemApps:internal:user:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$_LSPrivateRebuildApplicationDatabasesForSystemApps$internal$user$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$_LSPrivateRebuildApplicationDatabasesForSystemApps$internal$user$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(_LSPrivateSyncWithMobileInstallation), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$_LSPrivateSyncWithMobileInstallation, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$_LSPrivateSyncWithMobileInstallation);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(addObserver:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$addObserver$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$addObserver$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(allApplications), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$allApplications, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$allApplications);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(applicationForOpeningResource:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$applicationForOpeningResource$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$applicationForOpeningResource$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(applicationForUserActivityDomainName:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$applicationForUserActivityDomainName$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$applicationForUserActivityDomainName$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(applicationForUserActivityType:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$applicationForUserActivityType$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$applicationForUserActivityType$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(applicationIsInstalled:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$applicationIsInstalled$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$applicationIsInstalled$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(applicationProxiesWithPlistFlags:bundleFlags:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$applicationProxiesWithPlistFlags$bundleFlags$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$applicationProxiesWithPlistFlags$bundleFlags$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(applicationsAvailableForHandlingURLScheme:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$applicationsAvailableForHandlingURLScheme$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$applicationsAvailableForHandlingURLScheme$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(applicationsAvailableForOpeningDocument:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$applicationsAvailableForOpeningDocument$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$applicationsAvailableForOpeningDocument$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(applicationsAvailableForOpeningURL:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$applicationsAvailableForOpeningURL$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$applicationsAvailableForOpeningURL$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(applicationsAvailableForOpeningURL:legacySPI:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$applicationsAvailableForOpeningURL$legacySPI$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$applicationsAvailableForOpeningURL$legacySPI$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(applicationsForUserActivityType:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$applicationsForUserActivityType$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$applicationsForUserActivityType$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(applicationsForUserActivityType:limit:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$applicationsForUserActivityType$limit$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$applicationsForUserActivityType$limit$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(applicationsOfType:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$applicationsOfType$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$applicationsOfType$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(applicationsWithAudioComponents), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$applicationsWithAudioComponents, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$applicationsWithAudioComponents);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(applicationsWithUIBackgroundModes), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$applicationsWithUIBackgroundModes, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$applicationsWithUIBackgroundModes);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(applicationsWithVPNPlugins), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$applicationsWithVPNPlugins, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$applicationsWithVPNPlugins);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(bundleIdentifiersForMachOUUIDs:error:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$bundleIdentifiersForMachOUUIDs$error$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$bundleIdentifiersForMachOUUIDs$error$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(clearAdvertisingIdentifier), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$clearAdvertisingIdentifier, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$clearAdvertisingIdentifier);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(clearCreatedProgressForBundleID:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$clearCreatedProgressForBundleID$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$clearCreatedProgressForBundleID$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(deviceIdentifierForAdvertising), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$deviceIdentifierForAdvertising, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$deviceIdentifierForAdvertising);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(directionsApplications), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$directionsApplications, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$directionsApplications);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(downgradeApplicationToPlaceholder:withOptions:error:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$downgradeApplicationToPlaceholder$withOptions$error$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$downgradeApplicationToPlaceholder$withOptions$error$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(enumerateApplicationsForSiriWithBlock:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$enumerateApplicationsForSiriWithBlock$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$enumerateApplicationsForSiriWithBlock$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(enumerateApplicationsOfType:block:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$enumerateApplicationsOfType$block$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$enumerateApplicationsOfType$block$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(enumerateApplicationsOfType:legacySPI:block:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$enumerateApplicationsOfType$legacySPI$block$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$enumerateApplicationsOfType$legacySPI$block$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(enumeratePluginsMatchingQuery:withBlock:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$enumeratePluginsMatchingQuery$withBlock$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$enumeratePluginsMatchingQuery$withBlock$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(establishConnection), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$establishConnection, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$establishConnection);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(getClaimedActivityTypes:domains:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$getClaimedActivityTypes$domains$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$getClaimedActivityTypes$domains$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(getInstallTypeForOptions:andApp:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$getInstallTypeForOptions$andApp$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$getInstallTypeForOptions$andApp$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(getKnowledgeUUID:andSequenceNumber:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$getKnowledgeUUID$andSequenceNumber$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$getKnowledgeUUID$andSequenceNumber$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(installApplication:withOptions:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$installApplication$withOptions$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$installApplication$withOptions$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(installApplication:withOptions:error:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$installApplication$withOptions$error$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$installApplication$withOptions$error$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(installApplication:withOptions:error:usingBlock:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$installApplication$withOptions$error$usingBlock$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$installApplication$withOptions$error$usingBlock$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(installBundle:withOptions:usingBlock:forApp:withError:outInstallProgress:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$installBundle$withOptions$usingBlock$forApp$withError$outInstallProgress$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$installBundle$withOptions$usingBlock$forApp$withError$outInstallProgress$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(installPhaseFinishedForProgress:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$installPhaseFinishedForProgress$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$installPhaseFinishedForProgress$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(installProgressForApplication:withPhase:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$installProgressForApplication$withPhase$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$installProgressForApplication$withPhase$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(installProgressForBundleID:makeSynchronous:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$installProgressForBundleID$makeSynchronous$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$installProgressForBundleID$makeSynchronous$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(invalidateIconCache:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$invalidateIconCache$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$invalidateIconCache$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(isApplicationAvailableToOpenURL:error:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$isApplicationAvailableToOpenURL$error$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$isApplicationAvailableToOpenURL$error$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(isApplicationAvailableToOpenURL:includePrivateURLSchemes:error:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$isApplicationAvailableToOpenURL$includePrivateURLSchemes$error$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$isApplicationAvailableToOpenURL$includePrivateURLSchemes$error$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(isApplicationAvailableToOpenURLCommon:includePrivateURLSchemes:error:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$isApplicationAvailableToOpenURLCommon$includePrivateURLSchemes$error$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$isApplicationAvailableToOpenURLCommon$includePrivateURLSchemes$error$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(machOUUIDsForBundleIdentifiers:error:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$machOUUIDsForBundleIdentifiers$error$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$machOUUIDsForBundleIdentifiers$error$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(openUserActivity:withApplicationProxy:completionHandler:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$openUserActivity$withApplicationProxy$completionHandler$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$openUserActivity$withApplicationProxy$completionHandler$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(openUserActivity:withApplicationProxy:options:completionHandler:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$openUserActivity$withApplicationProxy$options$completionHandler$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$openUserActivity$withApplicationProxy$options$completionHandler$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(operationToOpenResource:usingApplication:uniqueDocumentIdentifier:sourceIsManaged:userInfo:delegate:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$operationToOpenResource$usingApplication$uniqueDocumentIdentifier$sourceIsManaged$userInfo$delegate$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$operationToOpenResource$usingApplication$uniqueDocumentIdentifier$sourceIsManaged$userInfo$delegate$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(operationToOpenResource:usingApplication:uniqueDocumentIdentifier:userInfo:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$operationToOpenResource$usingApplication$uniqueDocumentIdentifier$userInfo$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$operationToOpenResource$usingApplication$uniqueDocumentIdentifier$userInfo$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(operationToOpenResource:usingApplication:uniqueDocumentIdentifier:userInfo:delegate:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$operationToOpenResource$usingApplication$uniqueDocumentIdentifier$userInfo$delegate$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$operationToOpenResource$usingApplication$uniqueDocumentIdentifier$userInfo$delegate$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(operationToOpenResource:usingApplication:userInfo:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$operationToOpenResource$usingApplication$userInfo$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$operationToOpenResource$usingApplication$userInfo$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(placeholderApplications), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$placeholderApplications, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$placeholderApplications);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(pluginsMatchingQuery:applyFilter:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$pluginsMatchingQuery$applyFilter$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$pluginsMatchingQuery$applyFilter$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(pluginsWithIdentifiers:protocols:version:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$pluginsWithIdentifiers$protocols$version$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$pluginsWithIdentifiers$protocols$version$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(pluginsWithIdentifiers:protocols:version:applyFilter:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$pluginsWithIdentifiers$protocols$version$applyFilter$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$pluginsWithIdentifiers$protocols$version$applyFilter$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(pluginsWithIdentifiers:protocols:version:withFilter:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$pluginsWithIdentifiers$protocols$version$withFilter$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$pluginsWithIdentifiers$protocols$version$withFilter$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(privateURLSchemes), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$privateURLSchemes, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$privateURLSchemes);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(publicURLSchemes), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$publicURLSchemes, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$publicURLSchemes);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(registerApplication:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$registerApplication$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$registerApplication$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(registerApplicationDictionary:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$registerApplicationDictionary$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$registerApplicationDictionary$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(registerApplicationDictionary:withObserverNotification:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$registerApplicationDictionary$withObserverNotification$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$registerApplicationDictionary$withObserverNotification$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(registerBundleWithInfo:options:type:progress:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$registerBundleWithInfo$options$type$progress$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$registerBundleWithInfo$options$type$progress$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(registerPlugin:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$registerPlugin$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$registerPlugin$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(removeInstallProgressForBundleID:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$removeInstallProgressForBundleID$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$removeInstallProgressForBundleID$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(restoreSystemApplication:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$restoreSystemApplication$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$restoreSystemApplication$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(scanForApplicationStateChangesFromRank:toRank:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$scanForApplicationStateChangesFromRank$toRank$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$scanForApplicationStateChangesFromRank$toRank$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(scanForApplicationStateChangesFromWhitelist:to:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$scanForApplicationStateChangesFromWhitelist$to$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$scanForApplicationStateChangesFromWhitelist$to$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(sendApplicationStateChangedNotificationsFor:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$sendApplicationStateChangedNotificationsFor$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$sendApplicationStateChangedNotificationsFor$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(sendInstallNotificationForApp:withPlugins:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$sendInstallNotificationForApp$withPlugins$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$sendInstallNotificationForApp$withPlugins$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(sendUninstallNotificationForApp:withPlugins:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$sendUninstallNotificationForApp$withPlugins$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$sendUninstallNotificationForApp$withPlugins$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(uninstallApplication:withOptions:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$uninstallApplication$withOptions$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$uninstallApplication$withOptions$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(uninstallApplication:withOptions:error:usingBlock:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$uninstallApplication$withOptions$error$usingBlock$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$uninstallApplication$withOptions$error$usingBlock$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(uninstallApplication:withOptions:usingBlock:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$uninstallApplication$withOptions$usingBlock$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$uninstallApplication$withOptions$usingBlock$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(uninstallSystemApplication:withOptions:usingBlock:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$uninstallSystemApplication$withOptions$usingBlock$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$uninstallSystemApplication$withOptions$usingBlock$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(unregisterApplication:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$unregisterApplication$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$unregisterApplication$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(unregisterPlugin:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$unregisterPlugin$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$unregisterPlugin$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(unrestrictedApplications), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$unrestrictedApplications, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$unrestrictedApplications);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(updateRecordForApp:withSINF:iTunesMetadata:error:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$updateRecordForApp$withSINF$iTunesMetadata$error$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$updateRecordForApp$withSINF$iTunesMetadata$error$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(updateSINFWithData:forApplication:options:error:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$updateSINFWithData$forApplication$options$error$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$updateSINFWithData$forApplication$options$error$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(updateiTunesMetadataWithData:forApplication:options:error:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$updateiTunesMetadataWithData$forApplication$options$error$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$updateiTunesMetadataWithData$forApplication$options$error$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationWorkspace, @selector(_sf_openURL:withOptions:completionHandler:), (IMP)&_logos_method$_ungrouped$LSApplicationWorkspace$_sf_openURL$withOptions$completionHandler$, (IMP*)&_logos_orig$_ungrouped$LSApplicationWorkspace$_sf_openURL$withOptions$completionHandler$);Class _logos_class$_ungrouped$LSApplicationRestrictionsManager = objc_getClass("LSApplicationRestrictionsManager"); Class _logos_metaclass$_ungrouped$LSApplicationRestrictionsManager = object_getClass(_logos_class$_ungrouped$LSApplicationRestrictionsManager); MSHookMessageEx(_logos_metaclass$_ungrouped$LSApplicationRestrictionsManager, @selector(sharedInstance), (IMP)&_logos_meta_method$_ungrouped$LSApplicationRestrictionsManager$sharedInstance, (IMP*)&_logos_meta_orig$_ungrouped$LSApplicationRestrictionsManager$sharedInstance);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationRestrictionsManager, @selector(setWhitelistedBundleIDs:), (IMP)&_logos_method$_ungrouped$LSApplicationRestrictionsManager$setWhitelistedBundleIDs$, (IMP*)&_logos_orig$_ungrouped$LSApplicationRestrictionsManager$setWhitelistedBundleIDs$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationRestrictionsManager, @selector(isAdTrackingEnabled), (IMP)&_logos_method$_ungrouped$LSApplicationRestrictionsManager$isAdTrackingEnabled, (IMP*)&_logos_orig$_ungrouped$LSApplicationRestrictionsManager$isAdTrackingEnabled);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationRestrictionsManager, @selector(blacklistedBundleIDs), (IMP)&_logos_method$_ungrouped$LSApplicationRestrictionsManager$blacklistedBundleIDs, (IMP*)&_logos_orig$_ungrouped$LSApplicationRestrictionsManager$blacklistedBundleIDs);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationRestrictionsManager, @selector(maximumRating), (IMP)&_logos_method$_ungrouped$LSApplicationRestrictionsManager$maximumRating, (IMP*)&_logos_orig$_ungrouped$LSApplicationRestrictionsManager$maximumRating);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationRestrictionsManager, @selector(isOpenInRestrictionInEffect), (IMP)&_logos_method$_ungrouped$LSApplicationRestrictionsManager$isOpenInRestrictionInEffect, (IMP*)&_logos_orig$_ungrouped$LSApplicationRestrictionsManager$isOpenInRestrictionInEffect);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationRestrictionsManager, @selector(removedSystemApplications), (IMP)&_logos_method$_ungrouped$LSApplicationRestrictionsManager$removedSystemApplications, (IMP*)&_logos_orig$_ungrouped$LSApplicationRestrictionsManager$removedSystemApplications);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationRestrictionsManager, @selector(restrictedBundleIDs), (IMP)&_logos_method$_ungrouped$LSApplicationRestrictionsManager$restrictedBundleIDs, (IMP*)&_logos_orig$_ungrouped$LSApplicationRestrictionsManager$restrictedBundleIDs);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationRestrictionsManager, @selector(isWhitelistEnabled), (IMP)&_logos_method$_ungrouped$LSApplicationRestrictionsManager$isWhitelistEnabled, (IMP*)&_logos_orig$_ungrouped$LSApplicationRestrictionsManager$isWhitelistEnabled);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationRestrictionsManager, @selector(whitelistedBundleIDs), (IMP)&_logos_method$_ungrouped$LSApplicationRestrictionsManager$whitelistedBundleIDs, (IMP*)&_logos_orig$_ungrouped$LSApplicationRestrictionsManager$whitelistedBundleIDs);MSHookMessageEx(_logos_metaclass$_ungrouped$LSApplicationRestrictionsManager, @selector(activeRestrictionIdentifiers), (IMP)&_logos_meta_method$_ungrouped$LSApplicationRestrictionsManager$activeRestrictionIdentifiers, (IMP*)&_logos_meta_orig$_ungrouped$LSApplicationRestrictionsManager$activeRestrictionIdentifiers);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationRestrictionsManager, @selector(_LSResolveIdentifiers:), (IMP)&_logos_method$_ungrouped$LSApplicationRestrictionsManager$_LSResolveIdentifiers$, (IMP*)&_logos_orig$_ungrouped$LSApplicationRestrictionsManager$_LSResolveIdentifiers$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationRestrictionsManager, @selector(addPendingChanges:), (IMP)&_logos_method$_ungrouped$LSApplicationRestrictionsManager$addPendingChanges$, (IMP*)&_logos_orig$_ungrouped$LSApplicationRestrictionsManager$addPendingChanges$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationRestrictionsManager, @selector(allowedOpenInAppBundleIDsAfterApplyingFilterToAppBundleIDs:originatingAppBundleID:originatingAccountIsManaged:), (IMP)&_logos_method$_ungrouped$LSApplicationRestrictionsManager$allowedOpenInAppBundleIDsAfterApplyingFilterToAppBundleIDs$originatingAppBundleID$originatingAccountIsManaged$, (IMP*)&_logos_orig$_ungrouped$LSApplicationRestrictionsManager$allowedOpenInAppBundleIDsAfterApplyingFilterToAppBundleIDs$originatingAppBundleID$originatingAccountIsManaged$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationRestrictionsManager, @selector(beginListeningForChanges), (IMP)&_logos_method$_ungrouped$LSApplicationRestrictionsManager$beginListeningForChanges, (IMP*)&_logos_orig$_ungrouped$LSApplicationRestrictionsManager$beginListeningForChanges);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationRestrictionsManager, @selector(blacklistedBundleID), (IMP)&_logos_method$_ungrouped$LSApplicationRestrictionsManager$blacklistedBundleID, (IMP*)&_logos_orig$_ungrouped$LSApplicationRestrictionsManager$blacklistedBundleID);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationRestrictionsManager, @selector(calculateSetDifference:and:), (IMP)&_logos_method$_ungrouped$LSApplicationRestrictionsManager$calculateSetDifference$and$, (IMP*)&_logos_orig$_ungrouped$LSApplicationRestrictionsManager$calculateSetDifference$and$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationRestrictionsManager, @selector(clearAllValues), (IMP)&_logos_method$_ungrouped$LSApplicationRestrictionsManager$clearAllValues, (IMP*)&_logos_orig$_ungrouped$LSApplicationRestrictionsManager$clearAllValues);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationRestrictionsManager, @selector(clearPendingChanges), (IMP)&_logos_method$_ungrouped$LSApplicationRestrictionsManager$clearPendingChanges, (IMP*)&_logos_orig$_ungrouped$LSApplicationRestrictionsManager$clearPendingChanges);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationRestrictionsManager, sel_registerName("dealloc"), (IMP)&_logos_method$_ungrouped$LSApplicationRestrictionsManager$dealloc, (IMP*)&_logos_orig$_ungrouped$LSApplicationRestrictionsManager$dealloc);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationRestrictionsManager, @selector(handleMCEffectiveSettingsChanged), (IMP)&_logos_method$_ungrouped$LSApplicationRestrictionsManager$handleMCEffectiveSettingsChanged, (IMP*)&_logos_orig$_ungrouped$LSApplicationRestrictionsManager$handleMCEffectiveSettingsChanged);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationRestrictionsManager, @selector(handleMCRemovedSystemAppsChanged), (IMP)&_logos_method$_ungrouped$LSApplicationRestrictionsManager$handleMCRemovedSystemAppsChanged, (IMP*)&_logos_orig$_ungrouped$LSApplicationRestrictionsManager$handleMCRemovedSystemAppsChanged);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationRestrictionsManager, @selector(init), (IMP)&_logos_method$_ungrouped$LSApplicationRestrictionsManager$init, (IMP*)&_logos_orig$_ungrouped$LSApplicationRestrictionsManager$init);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationRestrictionsManager, @selector(isAppExtensionRestricted:), (IMP)&_logos_method$_ungrouped$LSApplicationRestrictionsManager$isAppExtensionRestricted$, (IMP*)&_logos_orig$_ungrouped$LSApplicationRestrictionsManager$isAppExtensionRestricted$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationRestrictionsManager, @selector(isApplicationRemoved:), (IMP)&_logos_method$_ungrouped$LSApplicationRestrictionsManager$isApplicationRemoved$, (IMP*)&_logos_orig$_ungrouped$LSApplicationRestrictionsManager$isApplicationRemoved$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationRestrictionsManager, @selector(isApplicationRestricted:), (IMP)&_logos_method$_ungrouped$LSApplicationRestrictionsManager$isApplicationRestricted$, (IMP*)&_logos_orig$_ungrouped$LSApplicationRestrictionsManager$isApplicationRestricted$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationRestrictionsManager, @selector(isApplicationRestricted:checkFeatureRestrictions:), (IMP)&_logos_method$_ungrouped$LSApplicationRestrictionsManager$isApplicationRestricted$checkFeatureRestrictions$, (IMP*)&_logos_orig$_ungrouped$LSApplicationRestrictionsManager$isApplicationRestricted$checkFeatureRestrictions$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationRestrictionsManager, @selector(isFeatureAllowed:), (IMP)&_logos_method$_ungrouped$LSApplicationRestrictionsManager$isFeatureAllowed$, (IMP*)&_logos_orig$_ungrouped$LSApplicationRestrictionsManager$isFeatureAllowed$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationRestrictionsManager, @selector(isRatingAllowed:), (IMP)&_logos_method$_ungrouped$LSApplicationRestrictionsManager$isRatingAllowed$, (IMP*)&_logos_orig$_ungrouped$LSApplicationRestrictionsManager$isRatingAllowed$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationRestrictionsManager, @selector(pendingChanges), (IMP)&_logos_method$_ungrouped$LSApplicationRestrictionsManager$pendingChanges, (IMP*)&_logos_orig$_ungrouped$LSApplicationRestrictionsManager$pendingChanges);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationRestrictionsManager, @selector(setApplication:removed:), (IMP)&_logos_method$_ungrouped$LSApplicationRestrictionsManager$setApplication$removed$, (IMP*)&_logos_orig$_ungrouped$LSApplicationRestrictionsManager$setApplication$removed$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationRestrictionsManager, @selector(setBlacklistedBundleIDs:), (IMP)&_logos_method$_ungrouped$LSApplicationRestrictionsManager$setBlacklistedBundleIDs$, (IMP*)&_logos_orig$_ungrouped$LSApplicationRestrictionsManager$setBlacklistedBundleIDs$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationRestrictionsManager, @selector(setRemovedSystemApplications:), (IMP)&_logos_method$_ungrouped$LSApplicationRestrictionsManager$setRemovedSystemApplications$, (IMP*)&_logos_orig$_ungrouped$LSApplicationRestrictionsManager$setRemovedSystemApplications$);MSHookMessageEx(_logos_class$_ungrouped$LSApplicationRestrictionsManager, @selector(setRestrictedBundleIDs:), (IMP)&_logos_method$_ungrouped$LSApplicationRestrictionsManager$setRestrictedBundleIDs$, (IMP*)&_logos_orig$_ungrouped$LSApplicationRestrictionsManager$setRestrictedBundleIDs$);} }
#line 408 "/Users/liangze/Documents/Desktop/pojieAPPS/Qianka/QiankaDylib/CCTweakTool/privateApis/__LSApplication.xm"
