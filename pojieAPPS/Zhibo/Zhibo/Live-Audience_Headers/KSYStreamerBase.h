//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class KSYCounter, KSYReMuxer, KSYReachability, KSYStreamerLog, NSDate, NSDictionary, NSString, NSURL;
@protocol OS_dispatch_queue, OS_dispatch_semaphore;

@interface KSYStreamerBase : NSObject
{
    struct AVStream *_ffVStream;
    struct AVStream *_ffAStream;
    struct AVStream *_ffMStream;
    struct AVFormatContext *_fmtCtx;
    _Bool _AudioCfging;
    NSObject<OS_dispatch_queue> *v_enc_q;
    NSObject<OS_dispatch_queue> *a_enc_q;
    NSObject<OS_dispatch_queue> *m_enc_q;
    NSObject<OS_dispatch_semaphore> *_sendSem;
    struct KSYRtmpSendCache *_sendCache;
    NSObject<OS_dispatch_semaphore> *_audioSem;
    NSObject<OS_dispatch_semaphore> *_msgSem;
    struct AVFrame *_vframe;
    struct AVFrame *_aframe;
    struct AVFrame *_scaleframe;
    int _vFrameCnt;
    int _aFrameCnt;
    _Bool _updateExtradata;
    _Bool _keyframeRequest;
    long long _ffDtsOffset;
    long long _lastAudioTime;
    long long _lastVideoDts;
    CDStruct_c5d49230 _inputPCMBuf;
    struct URLContext *_ffRtmpURLCtx;
    struct URLContext *_ffTcpCtx;
    KSYReMuxer *_remuxer;
    int _encVTime[5];
    long long _totalEncVTime;
    long long _inVpts;
    long long _inApts;
    long long _initVpts;
    struct opaqueCMSampleBuffer *_vEncQSB;
    struct __CVBuffer *_vEncQPB;
    long long _lastBenchMarkTime;
    int _lastUploadKBytes;
    int _lastPktVKB;
    int _lastPktAByte;
    int _pktVKB;
    int _pktAByte;
    int _lastFrameCnt;
    int _lastAFrameCnt;
    _Bool _bMuteStream;
    KSYStreamerLog *_logger;
    KSYCounter *_ksyCounter;
    _Bool _needTakePhoto;
    CDUnknownBlockType _takeSnapshotBlock;
    _Bool _bLocalFile;
    long long _max_interleave_delta;
    int _uploadKBOnReachable;
    _Bool _bWithVideo;
    _Bool _bypassMp4FastStart;
    _Bool _bWithAudio;
    _Bool _bWithMessage;
    _Bool _shouldEnableKSYStatModule;
    _Bool _shouldEnableKSYDropModule;
    int _uploadedKByte;
    int _encodedFrames;
    int _droppedVideoFrames;
    int _videoFPS;
    int _videoMinFPS;
    int _videoMaxFPS;
    int _videoInitBitrate;
    int _videoMaxBitrate;
    int _videoMinBitrate;
    float _maxKeyInterval;
    int _audiokBPS;
    int _videoCrf;
    float _scaleRatio;
    unsigned long long _videoCodec;
    long long _netReachState;
    long long _networkReachChangeTime;
    NSString *_streamID;
    double _encodeVKbps;
    double _encodeAKbps;
    double _currentUploadingKbps;
    double _encodingFPS;
    NSString *_rtmpHostIP;
    CDUnknownBlockType _logBlock;
    struct KSYStreamerQosInfo *_qosInfo;
    NSString *_clientAk;
    long long _bypassRecordState;
    NSURL *_hostURL;
    unsigned long long _audioCodec;
    NSDictionary *_streamMetaData;
    NSDictionary *_videoMetaData;
    unsigned long long _bwEstimateMode;
    unsigned long long _liveScene;
    unsigned long long _recScene;
    unsigned long long _videoEncodePerf;
    unsigned long long _streamState;
    unsigned long long _streamErrorCode;
    CDUnknownBlockType _streamStateChange;
    unsigned long long _netStateCode;
    CDUnknownBlockType _videoFPSChange;
    NSDate *_expireDate;
    NSURL *_bypassRecordURL;
    CDUnknownBlockType _bypassRecordStateChange;
    KSYReachability *_netReachability;
    NSString *_reachabilityDetectURL;
    double _jpegCompressionQuality;
    NSString *_fileName;
}

@property(retain) NSString *fileName; // @synthesize fileName=_fileName;
@property double jpegCompressionQuality; // @synthesize jpegCompressionQuality=_jpegCompressionQuality;
@property(retain, nonatomic) NSString *reachabilityDetectURL; // @synthesize reachabilityDetectURL=_reachabilityDetectURL;
@property(readonly, nonatomic) KSYReachability *netReachability; // @synthesize netReachability=_netReachability;
@property(nonatomic) _Bool shouldEnableKSYDropModule; // @synthesize shouldEnableKSYDropModule=_shouldEnableKSYDropModule;
@property(copy, nonatomic) CDUnknownBlockType bypassRecordStateChange; // @synthesize bypassRecordStateChange=_bypassRecordStateChange;
@property(readonly, nonatomic) NSURL *bypassRecordURL; // @synthesize bypassRecordURL=_bypassRecordURL;
@property(nonatomic) _Bool shouldEnableKSYStatModule; // @synthesize shouldEnableKSYStatModule=_shouldEnableKSYStatModule;
@property(nonatomic) NSDate *expireDate; // @synthesize expireDate=_expireDate;
@property(copy, nonatomic) CDUnknownBlockType videoFPSChange; // @synthesize videoFPSChange=_videoFPSChange;
@property(readonly, nonatomic) unsigned long long netStateCode; // @synthesize netStateCode=_netStateCode;
@property(copy, nonatomic) CDUnknownBlockType streamStateChange; // @synthesize streamStateChange=_streamStateChange;
@property(readonly, nonatomic) unsigned long long streamErrorCode; // @synthesize streamErrorCode=_streamErrorCode;
@property(readonly, nonatomic) unsigned long long streamState; // @synthesize streamState=_streamState;
@property(nonatomic) float scaleRatio; // @synthesize scaleRatio=_scaleRatio;
@property(nonatomic) _Bool bWithMessage; // @synthesize bWithMessage=_bWithMessage;
@property(nonatomic) _Bool bWithAudio; // @synthesize bWithAudio=_bWithAudio;
@property(nonatomic) unsigned long long videoEncodePerf; // @synthesize videoEncodePerf=_videoEncodePerf;
@property(nonatomic) int videoCrf; // @synthesize videoCrf=_videoCrf;
@property(nonatomic) unsigned long long recScene; // @synthesize recScene=_recScene;
@property(nonatomic) unsigned long long liveScene; // @synthesize liveScene=_liveScene;
@property(nonatomic) unsigned long long bwEstimateMode; // @synthesize bwEstimateMode=_bwEstimateMode;
@property(nonatomic) int audiokBPS; // @synthesize audiokBPS=_audiokBPS;
@property(nonatomic) float maxKeyInterval; // @synthesize maxKeyInterval=_maxKeyInterval;
@property(copy) NSDictionary *videoMetaData; // @synthesize videoMetaData=_videoMetaData;
@property(copy) NSDictionary *streamMetaData; // @synthesize streamMetaData=_streamMetaData;
@property(nonatomic) int videoMinBitrate; // @synthesize videoMinBitrate=_videoMinBitrate;
@property(nonatomic) int videoMaxBitrate; // @synthesize videoMaxBitrate=_videoMaxBitrate;
@property(nonatomic) int videoInitBitrate; // @synthesize videoInitBitrate=_videoInitBitrate;
@property(nonatomic) unsigned long long audioCodec; // @synthesize audioCodec=_audioCodec;
@property(nonatomic) int videoMaxFPS; // @synthesize videoMaxFPS=_videoMaxFPS;
@property(nonatomic) int videoMinFPS; // @synthesize videoMinFPS=_videoMinFPS;
@property(nonatomic) int videoFPS; // @synthesize videoFPS=_videoFPS;
@property(readonly, nonatomic) NSURL *hostURL; // @synthesize hostURL=_hostURL;
@property(nonatomic) NSString *clientAk; // @synthesize clientAk=_clientAk;
@property(copy, nonatomic) CDUnknownBlockType logBlock; // @synthesize logBlock=_logBlock;
@property(nonatomic) long long netReachState; // @synthesize netReachState=_netReachState;
@property(nonatomic) _Bool bWithVideo; // @synthesize bWithVideo=_bWithVideo;
@property(nonatomic) unsigned long long videoCodec; // @synthesize videoCodec=_videoCodec;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSString *bypassRecordErrorName;
@property(readonly, nonatomic) long long bypassRecordErrorCode;
@property(readonly, nonatomic) double bypassRecordDuration;
@property(nonatomic) _Bool bypassMp4FastStart; // @synthesize bypassMp4FastStart=_bypassMp4FastStart;
@property(readonly, nonatomic) long long bypassRecordState; // @synthesize bypassRecordState=_bypassRecordState;
- (void)stopBypassRecord;
- (_Bool)startBypassRecord:(id)arg1;
- (void)updateByRecordState;
- (id)getCurKSYStreamErrorCodeName;
- (id)getKSYStreamErrorCodeName:(unsigned long long)arg1;
@property(readonly) NSString *rtmpHostIP; // @synthesize rtmpHostIP=_rtmpHostIP;
@property(readonly, nonatomic) struct KSYStreamerQosInfo *qosInfo; // @synthesize qosInfo=_qosInfo;
@property(readonly, nonatomic) int droppedVideoFrames; // @synthesize droppedVideoFrames=_droppedVideoFrames;
@property(readonly, nonatomic) int encodedFrames; // @synthesize encodedFrames=_encodedFrames;
@property(readonly, nonatomic) double encodingFPS; // @synthesize encodingFPS=_encodingFPS;
@property(readonly, nonatomic) double currentUploadingKbps; // @synthesize currentUploadingKbps=_currentUploadingKbps;
@property(readonly, nonatomic) int uploadedKByte; // @synthesize uploadedKByte=_uploadedKByte;
@property(readonly, nonatomic) double encodeAKbps; // @synthesize encodeAKbps=_encodeAKbps;
@property(readonly, nonatomic) double encodeVKbps; // @synthesize encodeVKbps=_encodeVKbps;
@property(readonly, nonatomic) NSString *streamID; // @synthesize streamID=_streamID;
- (id)getCurStreamStateName;
- (id)getStreamStateName:(unsigned long long)arg1;
- (void)checkSnapshot:(struct __CVBuffer *)arg1;
- (void)getSnapshotWithCompletion:(CDUnknownBlockType)arg1;
- (void)takePhotoWithQuality:(double)arg1 fileName:(id)arg2;
- (void)onNetBwDrop;
@property long long networkReachChangeTime; // @synthesize networkReachChangeTime=_networkReachChangeTime;
- (void)setupReachability;
- (void)becameActive;
- (void)enterBackground;
- (void)unregisterActive;
- (void)registerActive;
- (void)updateVideoFPS:(int)arg1 msg:(id)arg2;
- (void)updateEstBw:(long long)arg1 msg:(id)arg2;
- (void)audioSended;
- (void)videoSended;
- (void)benchMarks:(long long)arg1;
- (void)setupCounter;
- (void)processMessageData:(id)arg1;
- (void)processAudioData:(char **)arg1 nbSample:(int)arg2 withFormat:(const struct AudioStreamBasicDescription *)arg3 timeinfo:(CDStruct_1b6d18a9 *)arg4;
- (void)audioCfging:(const struct AudioStreamBasicDescription *)arg1;
- (void)processAudioSampleBuffer:(struct opaqueCMSampleBuffer *)arg1;
- (void)processVideoPixelBuffer:(struct __CVBuffer *)arg1 timeInfo:(CDStruct_1b6d18a9)arg2 onComplete:(CDUnknownBlockType)arg3;
- (void)processVideoPixelBuffer:(struct __CVBuffer *)arg1 timeInfo:(CDStruct_1b6d18a9)arg2;
- (void)processVideoSampleBuffer:(struct opaqueCMSampleBuffer *)arg1 onComplete:(CDUnknownBlockType)arg2;
- (void)processVideoSampleBuffer:(struct opaqueCMSampleBuffer *)arg1;
- (_Bool)isStreaming;
- (void)flushRtmpSend;
- (int)sendPacket:(struct AVPacket *)arg1 isVideo:(_Bool)arg2 priority:(int)arg3;
- (void)encodeMessage:(id)arg1;
- (void)messageAlloc:(id)arg1 ffMsg:(struct AVFFMessage *)arg2;
- (void)encodeAudioFrame;
- (int)saveInputData:(char **)arg1 nbSample:(int)arg2 withFormat:(const struct AudioStreamBasicDescription *)arg3 timeinfo:(long long)arg4;
- (int)saveInputPCM:(struct opaqueCMSampleBuffer *)arg1;
- (int)readAFrame:(struct AVFrame *)arg1;
- (void)flushVideoEncoder;
- (void)scalePixelToI420:(struct __CVBuffer *)arg1 frame:(struct AVFrame *)arg2;
- (void)encodeVideo:(struct __CVBuffer *)arg1 timeInfo:(long long)arg2;
- (_Bool)restartVideoCodec:(struct __CVBuffer *)arg1;
- (void)muteStream:(_Bool)arg1;
- (void)stopStream;
- (void)closeStream;
- (void)initSendCache;
- (void)startConnection;
- (void)startStream:(id)arg1;
- (struct AVStream *)setupMessageEncoder;
- (struct AVStream *)setupAudioEncoder:(const struct AudioStreamBasicDescription *)arg1;
- (struct AVStream *)setupVideoEncoder:(struct __CVBuffer *)arg1 toSteam:(struct AVStream *)arg2;
- (void)newStreamErrorState:(unsigned long long)arg1;
- (void)newNetStateEvent:(unsigned long long)arg1;
- (void)newStreamState:(unsigned long long)arg1;
- (id)getKSYVersion;
- (void)clearStatusProperty;
- (void)resetStreamer;
- (void)dealloc;
- (id)initWithDefaultCfg;
- (id)init;

@end

