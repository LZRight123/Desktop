//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSData, NSMutableData, NSString, NSTimer, NSURLConnection;
@protocol WechatAuthAPIDelegate;

@interface WechatAuthSDK : NSObject
{
    NSString *_sdkVersion;
    id <WechatAuthAPIDelegate> _delegate;
    _Bool _isAuthing;
    unsigned int _retContentLength;
    unsigned int _status;
    NSURLConnection *connection;
    NSMutableData *respData;
    NSString *uuid;
    NSData *qrCodeData;
    NSString *authCode;
    NSTimer *timer;
    long long lastState;
    long long _httpRetStatusCode;
}

@property(nonatomic) long long httpRetStatusCode; // @synthesize httpRetStatusCode=_httpRetStatusCode;
@property(nonatomic) _Bool isAuthing; // @synthesize isAuthing=_isAuthing;
@property(nonatomic) unsigned int status; // @synthesize status=_status;
@property(nonatomic) unsigned int retContentLength; // @synthesize retContentLength=_retContentLength;
@property(nonatomic) long long lastState; // @synthesize lastState;
@property(retain, nonatomic) NSTimer *timer; // @synthesize timer;
@property(retain, nonatomic) NSString *authCode; // @synthesize authCode;
@property(retain, nonatomic) NSData *qrCodeData; // @synthesize qrCodeData;
@property(retain, nonatomic) NSString *uuid; // @synthesize uuid;
@property(retain, nonatomic) NSMutableData *respData; // @synthesize respData;
@property(retain, nonatomic) NSURLConnection *connection; // @synthesize connection;
@property(readonly, nonatomic) NSString *sdkVersion; // @synthesize sdkVersion=_sdkVersion;
@property(nonatomic) __weak id <WechatAuthAPIDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)handleResponse:(id)arg1;
- (void)handleGotQrcode;
- (void)handleError:(int)arg1;
- (void)startPolling;
- (void)stopTimeoutCheck;
- (void)startTimeoutCheck;
- (_Bool)sendAuthRequest:(id)arg1;
- (_Bool)StopAuth;
- (_Bool)Auth:(id)arg1 nonceStr:(id)arg2 timeStamp:(id)arg3 scope:(id)arg4 signature:(id)arg5 schemeData:(id)arg6;
- (void)resetConnection;
- (void)resetAll;
- (void)dealloc;
- (id)init;

@end

