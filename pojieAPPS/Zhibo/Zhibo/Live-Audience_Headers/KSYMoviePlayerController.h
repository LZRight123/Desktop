//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "KSYMediaPlayback-Protocol.h"

@class IJKFFMoviePlayerController, KSYQosInfo, KSYReachability, NSArray, NSString, NSTimer, NSURL, NSURLSession, UIView;

@interface KSYMoviePlayerController : NSObject <KSYMediaPlayback>
{
    IJKFFMoviePlayerController *_player;
    _Bool isReloading;
    double _loadingStartTime;
    double _preparePlayStart;
    double _firstScreenElapsed;
    double _pauseDuration;
    double _pauseStartTime;
    NSString *_urlString;
    NSString *_actionId;
    NSString *_logId;
    NSString *_domain;
    NSString *_logHeadJson;
    _Bool _isEndReported;
    NSString *_playId;
    double _prePlaybackPosition;
    NSTimer *posTimer;
    int _sendCDNFlag;
    NSURLSession *_session;
    int _httpErrorCode;
    int _prepareTimeout;
    int _readTimeout;
    NSString *_videoCodec;
    NSString *_audioCodec;
    NSURL *_backURL;
    _Bool _autoSwitchURL;
    _Bool _preAutoPlayValue;
    float _switchPosition;
    _Bool isPreparedToPlay;
    _Bool _shouldEnableKSYStatModule;
    _Bool _shouldEnableVideoPostProcessing;
    double currentPlaybackTime;
    NSURL *_contentURL;
    NSArray *_fileList;
    CDUnknownBlockType _logBlock;
    double _bufferEmptyDuration;
    long long _bufferEmptyCount;
    NSString *_clientIP;
    NSString *_localDNSIP;
    KSYQosInfo *_qosInfo;
    CDUnknownBlockType _videoDataBlock;
    CDUnknownBlockType _audioDataBlock;
    CDUnknownBlockType _messageDataBlock;
    CDUnknownBlockType _textureBlock;
    NSString *_networkDetectURL;
    long long _networkStatus;
    long long _playbackState;
    KSYReachability *_netReachability;
}

@property(readonly, nonatomic) KSYReachability *netReachability; // @synthesize netReachability=_netReachability;
@property(nonatomic) long long playbackState; // @synthesize playbackState=_playbackState;
@property(nonatomic) long long networkStatus; // @synthesize networkStatus=_networkStatus;
@property(retain, nonatomic) NSString *networkDetectURL; // @synthesize networkDetectURL=_networkDetectURL;
@property(copy, nonatomic) CDUnknownBlockType textureBlock; // @synthesize textureBlock=_textureBlock;
@property(copy, nonatomic) CDUnknownBlockType messageDataBlock; // @synthesize messageDataBlock=_messageDataBlock;
@property(copy, nonatomic) CDUnknownBlockType audioDataBlock; // @synthesize audioDataBlock=_audioDataBlock;
@property(copy, nonatomic) CDUnknownBlockType videoDataBlock; // @synthesize videoDataBlock=_videoDataBlock;
@property(nonatomic) _Bool shouldEnableVideoPostProcessing; // @synthesize shouldEnableVideoPostProcessing=_shouldEnableVideoPostProcessing;
@property(retain, nonatomic) KSYQosInfo *qosInfo; // @synthesize qosInfo=_qosInfo;
@property(retain, nonatomic) NSString *localDNSIP; // @synthesize localDNSIP=_localDNSIP;
@property(retain, nonatomic) NSString *clientIP; // @synthesize clientIP=_clientIP;
@property(readonly, nonatomic) long long bufferEmptyCount; // @synthesize bufferEmptyCount=_bufferEmptyCount;
@property(readonly, nonatomic) double bufferEmptyDuration; // @synthesize bufferEmptyDuration=_bufferEmptyDuration;
@property(copy, nonatomic) CDUnknownBlockType logBlock; // @synthesize logBlock=_logBlock;
@property(nonatomic) _Bool shouldEnableKSYStatModule; // @synthesize shouldEnableKSYStatModule=_shouldEnableKSYStatModule;
@property(readonly, nonatomic) NSArray *fileList; // @synthesize fileList=_fileList;
@property(readonly, nonatomic) NSURL *contentURL; // @synthesize contentURL=_contentURL;
- (void).cxx_destruct;
- (void)setupReachability;
- (id)md5:(id)arg1;
- (void)getDNSInfo;
- (void)gatherProbeMessage;
- (void)gatherPlayerEndMessage;
- (void)gatherPlayerStartMessageWithPrepareState:(id)arg1 errorCode:(int)arg2;
- (id)gatherLogBaseMessage;
- (void)setExtSubtitleFilePath:(id)arg1;
- (void)setTrackSelected:(long long)arg1 selected:(_Bool)arg2;
- (double)getCurrentPts;
- (long long)getHttpCode;
- (long long)getResponseTime;
- (long long)getConnectTime;
- (long long)getDnsTime;
- (id)getMetadata:(long long)arg1;
- (id)getMetadata;
- (id)getVersion;
- (void)setVolume:(float)arg1 rigthVolume:(float)arg2;
- (void)setTimeout:(int)arg1 readTimeout:(int)arg2;
@property(readonly, nonatomic) NSString *serverAddress;
@property(readonly, nonatomic) double readSize;
- (id)thumbnailImageAtCurrentTime;
@property(nonatomic) float playbackSpeed;
@property unsigned long long bufferSizeMax;
@property double bufferTimeMax;
- (void)unregisterApplicationObservers;
- (void)registerApplicationObservers;
- (void)onPlayerTimedText:(id)arg1;
- (void)onPlayerSeekComplete:(id)arg1;
- (void)onPlayerPlaybackStatus:(id)arg1;
- (void)onPlayerSuggestReload:(id)arg1;
- (void)onPlayerLinkLatency:(id)arg1;
- (void)onPlayerFirstAudioFrameRendered:(id)arg1;
- (void)onPlayerFirstVideoFrameRendered:(id)arg1;
- (void)onPlayerSendCdnDetection:(id)arg1;
- (void)onPlayerPlaybackFinished:(id)arg1;
- (void)onPlayerPlaybackStateChanged:(id)arg1;
- (void)onPlayerNaturalSizeAvailable:(id)arg1;
- (void)onPlayerLoadStateChanged:(id)arg1;
- (double)getCurrentTime;
- (void)onPlayerPrepared:(id)arg1;
- (long long)convertErrorCode:(int)arg1;
@property(readonly, nonatomic) long long naturalRotate;
@property(readonly, nonatomic) struct CGSize naturalSize;
@property(readonly, nonatomic) double playableDuration;
@property(readonly, nonatomic) double duration;
@property(nonatomic) double currentPlaybackTime; // @synthesize currentPlaybackTime;
@property(readonly, nonatomic) _Bool isPreparedToPlay; // @synthesize isPreparedToPlay;
- (void)reload:(id)arg1 flush:(_Bool)arg2 mode:(unsigned long long)arg3;
- (void)reload:(id)arg1 flush:(_Bool)arg2;
- (void)reload:(id)arg1;
- (void)stop;
- (void)pause;
- (void)play;
- (void)updateLogId;
- (void)prepareToPlay;
- (void)logPlayerConfiguration;
- (void)getCurrentPosition:(id)arg1;
- (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;
- (void)setHttpHeaders:(id)arg1;
- (void)seekTo:(double)arg1 accurate:(_Bool)arg2;
- (void)reset:(_Bool)arg1;
- (void)setUrl:(id)arg1 fileList:(id)arg2;
- (void)setUrl:(id)arg1;
@property(nonatomic) long long scalingMode;
@property(readonly, nonatomic) unsigned long long loadState;
- (unsigned long long)convertLoadState:(unsigned long long)arg1;
@property(nonatomic) float audioPan;
@property(nonatomic) _Bool bInterruptOtherAudio;
@property(nonatomic) unsigned long long deinterlaceMode;
@property(nonatomic) _Bool superFastPlay;
@property(nonatomic) _Bool mirror;
@property(nonatomic) int rotateDegress;
@property(nonatomic) _Bool shouldLoop;
@property(nonatomic) _Bool shouldHideVideo;
@property(nonatomic) _Bool shouldMute;
@property(nonatomic) unsigned long long videoDecoderMode;
@property(nonatomic) _Bool shouldAutoplay;
@property(nonatomic) long long controlStyle;
- (_Bool)isPlaying;
- (id)initWithContentURL:(id)arg1 fileList:(id)arg2 sharegroup:(id)arg3;
- (id)initWithContentURL:(id)arg1 sharegroup:(id)arg2;
- (id)initWithContentURL:(id)arg1 backupURL:(id)arg2;
- (id)initWithContentURL:(id)arg1;
- (id)init;
- (void)dealloc;
@property(readonly, nonatomic) UIView *view;

@end

