//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MMUIViewController.h"

#import "IUiUtilExt-Protocol.h"
#import "MMTipsViewControllerDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"
#import "UIScrollViewDelegate-Protocol.h"
#import "WAAppActionSheetDelegate-Protocol.h"
#import "WAContactMgrExtension-Protocol.h"
#import "WAOrientationSuggestionWindowDelegate-Protocol.h"
#import "WAPopInteractiveTransitionDelegate-Protocol.h"
#import "WAWebViewJSLogicDelegate-Protocol.h"
#import "YYWAWebViewDelegate-Protocol.h"
#import "YYWebViewDelegate-Protocol.h"

@class FixDocumentPresent, MMProgressViewEx, MMUIButton, NSDictionary, NSMutableDictionary, NSString, NSURLRequest, UIImageView, UILongPressGestureRecognizer, UIScreenEdgePanGestureRecognizer, UIView, WAAppActionSheet, WABaseInfoToast, WACacheVersionChecker, WAEvaluatePopSheet, WAMenuPopInteractiveTransition, WANavLoadingLayer, WAWebErrorView, WAWebViewJSLogicImpl, WAWebViewMenuNavBarProperties, WAWebViewMutiFuncMenuView, WAWebViewPluginScheduler;
@protocol WAWebViewDelegate, YYWebViewInterface;

@interface WAWebViewController : MMUIViewController <WAPopInteractiveTransitionDelegate, WAAppActionSheetDelegate, MMTipsViewControllerDelegate, UIGestureRecognizerDelegate, IUiUtilExt, WAContactMgrExtension, WAWebViewJSLogicDelegate, UIScrollViewDelegate, YYWebViewDelegate, YYWAWebViewDelegate, WAOrientationSuggestionWindowDelegate>
{
    _Bool _bIsStatusBarBlack;
    UIView *_webViewContainer;
    UIView<YYWebViewInterface> *webView;
    NSString *m_initUrl;
    WAWebViewJSLogicImpl *m_jsLogicImpl;
    NSMutableDictionary *m_jsInitInfo;
    NSString *m_preloadBaseURL;
    NSString *m_preloadPageRelativeURL;
    NSString *m_preloadPageQuery;
    NSString *m_preloadFrameURL;
    NSString *m_preloadIndexURL;
    _Bool m_isPreloadFrameLoaded;
    _Bool m_isPreloadIndexLoaded;
    NSDictionary *m_dicPageAttribute;
    NSString *m_pageOrientation;
    long long m_videoFullScreenOrientation;
    long long m_beforeVideoFullScreenOrientation;
    _Bool m_isViewWillAppearAlready;
    _Bool m_isViewDidAppear;
    _Bool m_isSetPreloadViewAttribute;
    _Bool m_isFinishLoaded;
    NSString *m_nsCurrentUrl;
    UIView *_loadingCoverClipView;
    UIImageView *_loadingCoverImageView;
    MMProgressViewEx *_loadingCoverLoadingView;
    UIView *_prevVCSnapshot;
    UIView *_prevVCMask;
    MMUIButton *_quitButton;
    WAWebViewMutiFuncMenuView *_menuView;
    WAWebViewMenuNavBarProperties *_navBarProperties;
    UIView *_tailBgView;
    _Bool _bIsDraggingScroll;
    double _fLastStartOffsetY;
    _Bool _bFullScreen;
    _Bool _bHideStatusBar;
    long long _eContentMode;
    _Bool m_bDisableSwipeBack;
    UIScreenEdgePanGestureRecognizer *_popBackInteractivePopGesture;
    WAMenuPopInteractiveTransition *_popBackInteractiveTransition;
    UIView *_webInfoTopView;
    WABaseInfoToast *_webViewToast;
    WANavLoadingLayer *_webLoadingLayer;
    WAWebErrorView *_webViewErrorView;
    UIView *_topFullNativeView;
    WAAppActionSheet *_actionSheet;
    WAEvaluatePopSheet *_evaluatePopSheet;
    long long _loadPageFrameStartTime;
    long long _loadPageIndexStartTime;
    long long _pageFrameLength;
    _Bool m_bWebviewReceiveTerminateSignal;
    _Bool m_bWebviewReceiveTerminateSignalManually;
    WACacheVersionChecker *_moduleCacheVersionChecker;
    _Bool _isModuleDataLoaded;
    _Bool _isLoadingModuleData;
    NSString *_strOfPreloadTaskPageFrameJS;
    UILongPressGestureRecognizer *m_longPressGestureRecognizer;
    _Bool m_bIFrame;
    long long m_loadingCount;
    _Bool m_bIsBeingPopedFromNewMainFrame;
    NSDictionary *_cacheRouteInfo;
    long long _orientation;
    _Bool m_bWebViewTerminatedManually;
    _Bool _bHasSupplyAppInfo;
    double _lastWebviewWidth;
    UIImageView *_shadowView;
    _Bool m_isLanscape;
    _Bool m_isTopTabBar;
    _Bool m_bNeedOnAppRouteReload;
    _Bool m_bIsInsertCamera;
    _Bool m_bIsInsertLivePusher;
    _Bool m_bIsFromPreloadTaskWithNotAppInfo;
    _Bool _m_bIsDelayPushWebView;
    unsigned int m_uiWebviewID;
    int _enmPullRefreshMode;
    unsigned int _tagNativeMax;
    unsigned int _appServiceType;
    id <WAWebViewDelegate> m_delegate;
    NSMutableDictionary *m_extraInfo;
    NSString *_m_rawRelativeURL;
    WAWebViewPluginScheduler *_pluginScheduler;
    CDUnknownBlockType _m_onLoadInitReady;
    CDUnknownBlockType _m_onLoadViewDidAppear;
    CDUnknownBlockType _m_onLoadInitReadyForPrerender;
    CDUnknownBlockType _m_onViewDidAppearThenCreateTab;
    NSMutableDictionary *_nativeViews;
    NSMutableDictionary *_containerViews;
    NSString *_instanceId;
    FixDocumentPresent *_presentProxy;
}

+ (void)setNavigationRightButton:(id)arg1 webView:(id)arg2;
+ (void)setNavigationAttribute:(id)arg1 webView:(id)arg2;
+ (id)pagePathFromURL:(id)arg1;
@property(retain, nonatomic) FixDocumentPresent *presentProxy; // @synthesize presentProxy=_presentProxy;
@property(retain, nonatomic) MMProgressViewEx *loadingCoverLoadingView; // @synthesize loadingCoverLoadingView=_loadingCoverLoadingView;
@property(retain, nonatomic) UIImageView *loadingCoverImageView; // @synthesize loadingCoverImageView=_loadingCoverImageView;
@property(retain, nonatomic) UIView *loadingCoverClipView; // @synthesize loadingCoverClipView=_loadingCoverClipView;
@property(retain, nonatomic) UIView *webViewContainer; // @synthesize webViewContainer=_webViewContainer;
@property(retain, nonatomic) UIView *prevVCMask; // @synthesize prevVCMask=_prevVCMask;
@property(retain, nonatomic) NSString *instanceId; // @synthesize instanceId=_instanceId;
@property(nonatomic) unsigned int appServiceType; // @synthesize appServiceType=_appServiceType;
@property(retain, nonatomic) NSMutableDictionary *containerViews; // @synthesize containerViews=_containerViews;
@property(retain, nonatomic) NSMutableDictionary *nativeViews; // @synthesize nativeViews=_nativeViews;
@property(nonatomic) unsigned int tagNativeMax; // @synthesize tagNativeMax=_tagNativeMax;
@property(copy, nonatomic) CDUnknownBlockType m_onViewDidAppearThenCreateTab; // @synthesize m_onViewDidAppearThenCreateTab=_m_onViewDidAppearThenCreateTab;
@property(copy, nonatomic) CDUnknownBlockType m_onLoadInitReadyForPrerender; // @synthesize m_onLoadInitReadyForPrerender=_m_onLoadInitReadyForPrerender;
@property(copy, nonatomic) CDUnknownBlockType m_onLoadViewDidAppear; // @synthesize m_onLoadViewDidAppear=_m_onLoadViewDidAppear;
@property(copy, nonatomic) CDUnknownBlockType m_onLoadInitReady; // @synthesize m_onLoadInitReady=_m_onLoadInitReady;
@property(nonatomic) _Bool m_bIsDelayPushWebView; // @synthesize m_bIsDelayPushWebView=_m_bIsDelayPushWebView;
@property(retain, nonatomic) WAWebViewPluginScheduler *pluginScheduler; // @synthesize pluginScheduler=_pluginScheduler;
@property(retain, nonatomic) NSString *m_rawRelativeURL; // @synthesize m_rawRelativeURL=_m_rawRelativeURL;
@property(nonatomic) int enmPullRefreshMode; // @synthesize enmPullRefreshMode=_enmPullRefreshMode;
@property(nonatomic) long long orientation; // @synthesize orientation=_orientation;
@property(nonatomic) _Bool m_bIsFromPreloadTaskWithNotAppInfo; // @synthesize m_bIsFromPreloadTaskWithNotAppInfo;
@property(nonatomic) _Bool m_bIsInsertLivePusher; // @synthesize m_bIsInsertLivePusher;
@property(nonatomic) _Bool m_bIsInsertCamera; // @synthesize m_bIsInsertCamera;
@property(nonatomic) _Bool m_bNeedOnAppRouteReload; // @synthesize m_bNeedOnAppRouteReload;
@property(readonly, nonatomic) _Bool m_bWebviewReceiveTerminateSignalManually; // @synthesize m_bWebviewReceiveTerminateSignalManually;
@property(readonly, nonatomic) _Bool m_bWebviewReceiveTerminateSignal; // @synthesize m_bWebviewReceiveTerminateSignal;
@property(retain, nonatomic) WAWebViewMenuNavBarProperties *m_navBarProperties; // @synthesize m_navBarProperties=_navBarProperties;
@property(retain, nonatomic) WAWebViewMutiFuncMenuView *m_menuView; // @synthesize m_menuView=_menuView;
@property(nonatomic) _Bool m_isTopTabBar; // @synthesize m_isTopTabBar;
@property(readonly, nonatomic) NSString *m_initUrl; // @synthesize m_initUrl;
@property(retain, nonatomic) NSMutableDictionary *m_extraInfo; // @synthesize m_extraInfo;
@property(nonatomic) _Bool m_isLanscape; // @synthesize m_isLanscape;
@property(readonly, nonatomic) _Bool m_isFinishLoaded; // @synthesize m_isFinishLoaded;
@property(readonly, nonatomic) WAWebViewJSLogicImpl *m_jsLogicImpl; // @synthesize m_jsLogicImpl;
@property(nonatomic) __weak id <WAWebViewDelegate> m_delegate; // @synthesize m_delegate;
@property(readonly, nonatomic) unsigned int m_uiWebviewID; // @synthesize m_uiWebviewID;
@property(retain, nonatomic) UIView<YYWebViewInterface> *webView; // @synthesize webView;
@property(nonatomic) _Bool m_bIsStatusBarBlack; // @synthesize m_bIsStatusBarBlack=_bIsStatusBarBlack;
- (void).cxx_destruct;
- (_Bool)isTerminatedManually;
- (void)presentViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)dismissViewControllerAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)onIpadOrientationSuggestWindowQuitButtonClicked;
- (void)setRecordSubTitleIfNeed;
- (id)tagForCurrentPage;
- (id)popWebViewCountFromSelf:(int)arg1;
- (void)enableGestureBack:(_Bool)arg1;
- (void)bringNativeToFront:(id)arg1;
- (id)getPluginScheduler;
- (id)getWxaExternalInfo;
- (void)remoteDomEvent:(id)arg1 webViewID:(unsigned int)arg2;
- (_Bool)isPreloadWebView;
- (_Bool)isIgnoreRemoteCheckDomain;
- (_Bool)isOpenDebugAndVConsole;
- (unsigned int)getDebugModeType;
- (unsigned long long)getAppVersion;
- (void)checkUserAuthWithJSAPI:(id)arg1 handler:(CDUnknownBlockType)arg2 failHandler:(CDUnknownBlockType)arg3;
- (_Bool)checkRunModeOnWebview:(id)arg1;
- (id)getPermissionResultWithJSAPI:(id)arg1 byTempPermission:(id)arg2;
- (id)getPermissionResultWithJSAPI:(id)arg1;
- (void)keyboardDidShow:(id)arg1;
- (id)webviewController;
- (void)webviewDidReceiveScriptMessage:(id)arg1 handler:(id)arg2;
- (void)webView:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)removeAllNativeViewsAndNotifyPlugin;
- (void)webViewContentProcessDidTerminate:(id)arg1;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)finishLoadAction;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)showPublicJSSpendTime;
- (void)checkJSBridgeObjects:(_Bool)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3 isMainFrame:(_Bool)arg4;
- (id)getPreInjectScriptStr;
- (void)goToURL:(id)arg1;
- (void)stop;
- (void)reload;
- (void)updateIpadMaskViewForCurrentOrientation:(id)arg1;
- (void)viewDidLayoutSubviews;
- (void)navigationControllerDidPresent:(id)arg1;
- (void)viewDidPresent:(id)arg1 animated:(_Bool)arg2;
- (void)willDismissAndShow;
- (void)viewWillBeDismissed:(_Bool)arg1;
- (void)viewDidBeDismissed:(_Bool)arg1;
- (void)viewDidBePoped:(_Bool)arg1;
- (void)onWebViewLeave;
- (void)viewWillBePoped:(_Bool)arg1;
- (void)viewDidPop:(_Bool)arg1;
- (void)viewDidPush:(_Bool)arg1;
- (void)viewDidBePushed:(_Bool)arg1;
- (void)viewWillBePushed:(_Bool)arg1;
- (void)viewWillPop:(_Bool)arg1;
- (void)viewWillPush:(_Bool)arg1;
- (void)willDisappear;
- (void)didAppear;
- (void)willAppear;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (_Bool)useBlackStatusbar;
- (_Bool)useTransparentNavibar;
- (void)onLongPressOnWebview:(id)arg1;
- (void)enableLongPressDetect;
- (_Bool)gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewWillBeginDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)adjustSubviewRects;
- (void)statusBarFrameWillChange:(id)arg1;
- (void)realTriggerPageReload;
- (void)onWebViewReadyToTerminate;
- (void)terminateManually;
- (void)pageReloadByManuallyTerminateWithRouteInfo:(id)arg1;
- (void)pageReloadWithRouteInfo:(id)arg1;
- (void)recoverWebView;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)initWebViewIfNeeded;
- (void)internalInitWithBaseURL:(id)arg1 pageRelativeURL:(id)arg2 extraInfo:(id)arg3 delegate:(id)arg4;
- (void)supplyAppInfoWithBaseURL:(id)arg1 pageRelativeURL:(id)arg2 extraInfo:(id)arg3 delegate:(id)arg4;
- (id)initForPreloadAppTask;
- (id)initWithBaseURL:(id)arg1 pageRelativeURL:(id)arg2 extraInfo:(id)arg3 delegate:(id)arg4;
- (void)dealloc;
- (void)setPrivacySubTitleIfNeed;
- (void)setBackgroundColor;
- (void)notifyToJSBridgeVisibilityChanged:(_Bool)arg1;
- (id)taskExtInfo;
- (id)extraInfo;
- (void)printConsoleLog:(id)arg1;
- (void)sendEventToJSBridge:(id)arg1 Param:(id)arg2;
- (void)publishEventToJSBridge:(id)arg1 Param:(id)arg2;
- (void)doJsApiInitEvent;
- (void)setCurrentUrl:(id)arg1;
- (id)getCurrentUrl;
- (long long)webviewContentMode;
- (_Bool)isNeedShowReturnItem;
- (void)onRouteToHome;
- (void)onKill;
- (void)onAllExit;
- (void)OnReturn;
- (void)doBackActionCleanWithType;
- (void)DismissMyWebViewAnimated:(_Bool)arg1;
- (_Bool)isWeAppUseModule;
- (id)getSessionID;
- (id)getPackageConfig;
- (id)getCurrentContact;
- (id)getCurrentUserName;
- (void)hideSplash;
- (void)setHideSplash:(_Bool)arg1;
- (_Bool)isViewDidAppear;
- (_Bool)isAlreadyViewWillAppear;
- (_Bool)isFirstPage;
- (_Bool)isLastWebVC;
- (_Bool)isTabWebVC;
- (_Bool)isThisPageUsePreload;
- (_Bool)isOpenAtSubPage;
- (unsigned long long)debugMode;
- (_Bool)isDebugMode;
- (_Bool)isAppLaunchFirstWebview;
- (id)getInstanceId;
- (unsigned int)getAppType;
- (id)getInitUrl;
- (long long)getCurrentVersionNum;
- (id)getCurrentAppId;
- (void)setTitle:(id)arg1;
- (void)enterTempSessionWithInfo:(id)arg1 contact:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)enterTempSessionWithInfo:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (_Bool)onPopBackInteractiveRecognizeEdgeGesture;
- (void)onPopBackInteractiveTransitionEnd:(id)arg1 isComplete:(_Bool)arg2;
- (void)onPopBackInteractiveTransitionBegin:(id)arg1;
- (id)mmNavigationController:(id)arg1 interactionControllerForAnimationController:(id)arg2;
- (id)mmNavigationController:(id)arg1 animationControllerForOperation:(long long)arg2 fromViewController:(id)arg3 toViewController:(id)arg4;
- (void)removePopBackInteractivePopGesture;
- (void)addPopBackInteractivePopGesture;
- (void)onWeAppDismissTransitionEnd:(_Bool)arg1;
- (id)currentPopInteractiveTransiton;
- (double)__pageVisibleHeight;
- (double)getTabBarHeight;
- (double)getWebViewWindowHeight;
- (double)topNativeViewOriginYWhenFullScreenLike;
- (void)fsmenu_calcCurrentWebViewInset:(struct UIEdgeInsets *)arg1 y:(double *)arg2 height:(double *)arg3;
- (void)normal_calcCurrentWebViewInset:(struct UIEdgeInsets *)arg1 y:(double *)arg2 height:(double *)arg3;
- (void)calcCurrentWebViewInset:(struct UIEdgeInsets *)arg1 y:(double *)arg2 height:(double *)arg3;
- (void)calcCurrentWebViewY:(double *)arg1 height:(double *)arg2;
- (void)resetWebviewInsetOrY;
- (void)resetTabBar;
- (void)setContentNavMode:(long long)arg1;
- (long long)getContentNavMode;
- (id)processWebViewSceenShot2ThumbImage:(id)arg1;
- (void)snapShotWebviewImageAtTop:(CDUnknownBlockType)arg1;
- (id)snapShotWebviewImage;
- (_Bool)existNativeView:(unsigned int)arg1;
- (id)getContainer:(unsigned int)arg1;
- (void)removeContainer:(unsigned int)arg1;
- (id)updateContainer:(unsigned int)arg1 frame:(struct CGRect)arg2 scrollHeight:(double)arg3;
- (id)findScrollViews:(id)arg1 frame:(struct CGRect)arg2 scrollHeight:(double)arg3;
- (void)saveScrollViews:(id)arg1;
- (_Bool)CGRectEqualApproximately:(struct CGRect)arg1 toRect:(struct CGRect)arg2;
- (_Bool)IsScrollHeightEqualApproximately:(double)arg1 toHeight:(double)arg2;
- (id)attachWebScrollView:(struct CGRect)arg1 scrollHeight:(double)arg2 viewId:(unsigned int *)arg3;
- (unsigned int)getViewId:(id)arg1;
- (id)getChildViews;
- (_Bool)removeChildView:(unsigned int)arg1;
- (id)getContainerViewFromNative:(id)arg1;
- (id)getContainerViewFromScroll:(id)arg1;
- (void)bringNativeToFront:(id)arg1;
- (id)getChildView:(unsigned int)arg1;
- (void)updateParentId:(unsigned int)arg1 forChild:(unsigned int)arg2 fixed:(_Bool)arg3;
- (void)updateParentId:(unsigned int)arg1 forChild:(unsigned int)arg2;
- (unsigned int)insertChildView:(id)arg1 viewId:(unsigned int)arg2 parentId:(unsigned int)arg3;
- (_Bool)createLoadSubPackageTask:(id)arg1 completeHandler:(CDUnknownBlockType)arg2 progressHandler:(CDUnknownBlockType)arg3;
- (void)changeNavigationBarTitle:(id)arg1;
- (void)onLoadModuleData:(_Bool)arg1 errorCode:(long long)arg2 moduleName:(id)arg3;
- (void)reloadModuleData;
- (void)checkModuleDataLoaded;
- (id)getFileData:(id)arg1;
- (void)getFileData:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (id)filterRegularString:(id)arg1;
- (void)parseDataString:(id)arg1 AndGetStype:(id *)arg2 body:(id *)arg3 script:(id *)arg4;
- (id)elementStringFromXML:(id)arg1 startPos:(unsigned long long *)arg2 elementName:(id)arg3 containElementName:(_Bool)arg4;
- (id)cachedDataWithURL:(id)arg1;
- (void)loadFrameContent:(id)arg1;
- (void)setLoadPageIndexStartTime:(long long)arg1;
- (long long)getLoadPageIndexStartTime;
- (void)loadModuleScriptDataWithFilePath:(id)arg1;
- (id)allElementStringFromHtml:(id)arg1 elementName:(id)arg2 containElementName:(_Bool)arg3;
- (id)getPageFrameJSStr;
- (void)loadPageFrameJSOfPreload;
- (void)tryLoadPreloadAppTaskIndexData;
- (void)injectWebViewConfigForPreload;
- (void)loadPreloadAppTaskFrameData;
- (void)loadIndexData;
- (id)getFrameContentWithURL:(id)arg1;
- (void)loadFrameDataWithBaseURL:(id)arg1 pageRelativeURL:(id)arg2;
- (void)bringTabBarToFront;
- (void)setNavigationBarTitle:(id)arg1 backgroundColor:(id)arg2 alpha:(double)arg3;
- (void)setPageBackgroundColor;
- (void)updateNavigationBarItemsAndStatusBarStyle;
- (void)setNavigationAttributeFromChildWebView:(id)arg1;
- (id)pageAttribute;
- (void)setPreloadPageAttribute;
- (void)resetPreloadPageAttributeMark;
- (void)loadPreloadPageAttribute;
- (void)setupAttributeWhenKnowsPagePath;
- (void)onCallbackInitReadyForPrerender;
- (void)onCallbackInitReady;
- (void)loadIndexDataWithRelativeURL:(id)arg1;
- (_Bool)isIndexDataLoaded;
- (id)getPreloadIndexURL;
- (id)getPreloadPageQuery;
- (id)getPreloadPageRelativeURL;
- (id)getPreloadBaseURL;
- (id)preloadFrameFileName;
- (void)resetLoadingLayer;
- (void)dismissLoadingLayer;
- (void)showLoadingLayerWhenPushed;
- (void)onWebviewToastDidDismiss;
- (void)showJSApiForbbiddenToast:(id)arg1;
- (_Bool)isWebviewPresenting;
- (void)onWebViewMenuLongPressMore;
- (void)onWebViewMenuReturn;
- (void)evaluateCommonReport:(unsigned long long)arg1 EvaluateScore:(unsigned int)arg2 Result:(unsigned long long)arg3;
- (void)onUpdateProfileEvaluate:(id)arg1 userName:(id)arg2 Score:(unsigned int)arg3;
- (void)showEvaluateSuccessAndExit;
- (void)writeEvaluateRatingValue:(unsigned int)arg1;
- (void)onCloseEvaluatePopSheet;
- (void)hideEvaluatePopSheet;
- (void)showEvaluatePopSheetAnimated;
- (_Bool)isEvaluateSheetVisible;
- (void)directlyOnAllExit;
- (void)onWebViewMenuAllExit;
- (void)onWebViewMenuMore;
- (void)onWebViewMenuCustomRightButtonClick;
- (struct CGRect)currentMenuViewFrame;
- (void)setNavigationBarHidden:(_Bool)arg1;
- (void)setStatusBarHidden:(_Bool)arg1;
- (void)onWAWebErrorViewOperateBtnClick:(id)arg1;
- (void)show404ErrorView;
- (void)show404ErrorWaittingView;
- (void)webErrorViewDidTapQuitButton:(id)arg1;
- (void)webErrorViewDidTapOperationButton:(id)arg1;
- (void)showErrorViewWithUserName:(id)arg1 title:(id)arg2 desc:(id)arg3 reloadButtonTitle:(id)arg4;
- (void)showErrorViewWithMessage:(id)arg1 showReloadButton:(_Bool)arg2;
- (void)showErrorViewWithMessage:(id)arg1;
- (void)addBackInfoViewIndicator:(id)arg1;
- (id)getBackInfoViewWithAppId:(id)arg1 enablePullRefresh:(_Bool)arg2;
- (void)popToFirstWebViewInStackWithAnimated:(_Bool)arg1;
- (unsigned long long)getWebViewDepthInStack;
- (id)getFirstWebViewInStack;
- (void)tabBarDidSwitchTab;
- (id)getTabChildWebViewWithRelativeURL:(id)arg1;
- (void)updateTailViewFrame;
- (void)setTailBackGroundColor:(id)arg1;
- (void)setWebViewTopViewColor:(id)arg1;
- (_Bool)shouldPreventDragDownCloseGesture;
- (void)onFullScreenLongPressEnd;
- (void)onFullScreenLongPressBegin;
- (void)onFullScreenBackgroundColorAlphaChange:(double)arg1;
- (void)onFullScreenDragToRect:(struct CGRect)arg1;
- (void)onFullScreenDragEnd;
- (void)onFullScreenDragCancel;
- (void)onFullScreenDragBegin;
- (void)onFullScreenClose;
- (void)onFullScreenSingleTap;
- (void)onLongPressPage:(id)arg1;
- (void)ensureFullScreenGesture;
- (void)initFullScreenGesture;
- (void)onClickQuitButton;
- (void)initQuitButton;
- (void)initLoadingCoverImageView:(id)arg1;
- (void)hideLoadingCoverImageView;
- (void)setWebViewBackgroundColor:(id)arg1;
- (_Bool)getFullScreen;
- (void)setFullScreen:(_Bool)arg1;
- (void)disableFullScreen;
- (void)enableFullScreen;
- (void)setCustomNavBarOffset:(double)arg1;
- (double)getCustomNavBarOffset;
- (void)setNavLoading:(_Bool)arg1;
- (void)updateNavMenuHidden;
- (void)setCustomNavRightButton:(id)arg1;
- (void)setNavRightButtonHidden:(_Bool)arg1;
- (void)setNavTitle:(id)arg1;
- (void)setNavBarElementAndStatusBarStyle:(int)arg1;
- (void)changeStatusBarWhite:(_Bool)arg1;
- (void)setNavBarBgColor:(id)arg1;
- (void)setNavMenuState:(long long)arg1;
- (void)setViewFullScreen:(id)arg1;
- (void)updateNavView;
- (id)currentNavMenuView;
- (void)resetNavView;
- (id)title;
- (void)resetNativeLayers;
- (void)uiLayoutSubView;
- (_Bool)isInStarList;
- (id)getPresentContact;
- (_Bool)canShowCommentMenuItem;
- (_Bool)canShowShareMenuItem;
- (_Bool)canShowCopyPathQueryMenuItem;
- (id)pluginHtmlWeb;
- (id)pluginNavBar;
- (id)pluginLivePlayer;
- (id)pluginVideoPlayer;
- (id)pluginKeyboard;
- (id)pluginAppMsg;
- (id)pluginReportPageEvent;
- (void)onClickTipsBtn:(id)arg1 Index:(long long)arg2 tipTag:(long long)arg3;
- (void)showTipsViewWithTitle:(id)arg1 content:(id)arg2 tipsTag:(long long)arg3 delegate:(id)arg4;
- (id)getCurrentViewController;
- (void)shareWithGroup;
- (void)shareWebViewPage;
- (void)commonShare;
- (void)showTipsViewController:(id)arg1;
- (void)onCopyPathAndQuery;
- (void)onCancelStar;
- (void)onAddToStar;
- (void)addToHomeScreen;
- (void)onLeaveBackChatState;
- (void)onOpenComment;
- (void)onOpenBrandProfileWebView;
- (void)onClosePerformance;
- (void)onOpenPerformance;
- (void)onOpenBrandProfile;
- (void)onCloseVConsole;
- (void)onOpenVConsole;
- (void)onWAActionSheetDidDismiss;
- (void)onWAActionSheetWillDismiss;
- (void)onWAActionSheetDestruct;
- (void)onWAActionSheetInfoClicked;
- (void)onWAActionSheetClickButtonWithButtonTitle:(id)arg1;
- (id)menuDebugButtonTitleArray;
- (id)menubuttonTitleArray;
- (id)takeCurrentSnapshot;
- (_Bool)isMenuVisible;
- (void)onMenuShow;
- (void)resetPopBackInteractivePopGesture;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)webviewDidTransitionToNewSize;
- (long long)preferredInterfaceOrientationForPresentation;
- (unsigned long long)supportedInterfaceOrientationsAfterDidAppear;
- (unsigned long long)supportedInterfaceOrientations;
- (unsigned long long)currentPageOrientationMask;
- (void)realRotateToOrientation:(long long)arg1;
- (_Bool)tryForceRotationToPageOrientation;
- (void)tryForceRotationToPageOrientationWhenDidAppear;
- (long long)checkIfNeedForceRotation:(id)arg1;
- (_Bool)checkValidPageOrientation:(id)arg1;
- (id)pageOrientationRelatedParamWhenSendResizeEvent;
- (_Bool)setPageOrientationInternal:(id)arg1 FromPublicApi:(_Bool)arg2;
- (_Bool)private_setPageOrientation:(id)arg1;
- (_Bool)public_setPageOrientation:(id)arg1;
- (void)quitVideoFullScreen;
- (void)enterVideoFullScreenWithOrientation:(long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) NSURLRequest *request;
@property(readonly) Class superclass;

@end

