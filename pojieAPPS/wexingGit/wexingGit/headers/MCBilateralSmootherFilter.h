//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MCBaseFilter.h"

@class GPUImageFilter, GPUImageGaussianBlurFilter, NSArray, NSOperationQueue, NSString, TTGpuImageTexture;

@interface MCBilateralSmootherFilter : MCBaseFilter
{
    int filterTextureCoordinateAttribute2;
    char *FaceMeshTriangles;
    char *FaceMeshTrianglesEye;
    int filterInputTextureUniform5;
    int _hasFace;
    TTGpuImageTexture *_maskTexture;
    TTGpuImageTexture *_eyebrowMaskTexture;
    TTGpuImageTexture *_skinColorLeftLut;
    TTGpuImageTexture *_skinColorRightLut;
    TTGpuImageTexture *_wrinkleMaskTexture;
    double _smoothOpacity;
    double _enhanceOpacity;
    double _eyeOpacity;
    double _contrastOpacity;
    double _imageContrast;
    double _skinColorSlider;
    double _wrinkleOpacity;
    double _eyePouchOpacity;
    NSString *_maskImagePath;
    GPUImageGaussianBlurFilter *_blurFilter;
    GPUImageFilter *_pixelOutFilter;
    NSOperationQueue *_averageColorQueue;
    double _averageColorTime;
    NSArray *_averageColorFaces;
}

+ (id)complementedForeheadPoints:(float (*)[2])arg1;
@property(retain) NSArray *averageColorFaces; // @synthesize averageColorFaces=_averageColorFaces;
@property(nonatomic) double averageColorTime; // @synthesize averageColorTime=_averageColorTime;
@property(retain, nonatomic) NSOperationQueue *averageColorQueue; // @synthesize averageColorQueue=_averageColorQueue;
@property(retain, nonatomic) GPUImageFilter *pixelOutFilter; // @synthesize pixelOutFilter=_pixelOutFilter;
@property(retain, nonatomic) GPUImageGaussianBlurFilter *blurFilter; // @synthesize blurFilter=_blurFilter;
@property(nonatomic) int hasFace; // @synthesize hasFace=_hasFace;
@property(copy, nonatomic) NSString *maskImagePath; // @synthesize maskImagePath=_maskImagePath;
@property(nonatomic) double eyePouchOpacity; // @synthesize eyePouchOpacity=_eyePouchOpacity;
@property(nonatomic) double wrinkleOpacity; // @synthesize wrinkleOpacity=_wrinkleOpacity;
@property(nonatomic) double skinColorSlider; // @synthesize skinColorSlider=_skinColorSlider;
@property(nonatomic) double imageContrast; // @synthesize imageContrast=_imageContrast;
@property(nonatomic) double contrastOpacity; // @synthesize contrastOpacity=_contrastOpacity;
@property(nonatomic) double eyeOpacity; // @synthesize eyeOpacity=_eyeOpacity;
@property(nonatomic) double enhanceOpacity; // @synthesize enhanceOpacity=_enhanceOpacity;
@property(nonatomic) double smoothOpacity; // @synthesize smoothOpacity=_smoothOpacity;
@property(retain, nonatomic) TTGpuImageTexture *wrinkleMaskTexture; // @synthesize wrinkleMaskTexture=_wrinkleMaskTexture;
@property(retain, nonatomic) TTGpuImageTexture *skinColorRightLut; // @synthesize skinColorRightLut=_skinColorRightLut;
@property(retain, nonatomic) TTGpuImageTexture *skinColorLeftLut; // @synthesize skinColorLeftLut=_skinColorLeftLut;
@property(retain, nonatomic) TTGpuImageTexture *eyebrowMaskTexture; // @synthesize eyebrowMaskTexture=_eyebrowMaskTexture;
@property(retain, nonatomic) TTGpuImageTexture *maskTexture; // @synthesize maskTexture=_maskTexture;
- (void).cxx_destruct;
- (float)getAverageDistanceFrom:(float *)arg1 to:(float *)arg2;
- (void)getAverageColor:(id)arg1;
- (void)setupMaterialFaceVertex:(id)arg1 imageSize:(struct CGSize)arg2;
- (void)renderToTextureWithVertices:(const float *)arg1 textureCoordinates:(const float *)arg2;
- (void)setWidth:(float)arg1 height:(float)arg2;
- (void)setupEnviroment;
- (void)dealloc;
- (void)initializeAttributes;
- (id)initWithVertexShaderFromFile:(id)arg1 fragmentShaderFromFile:(id)arg2;

@end

