//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "TXCModule.h"

#import "TXIAudioRecordDelegate-Protocol.h"
#import "TXICameraCapturerDelegate-Protocol.h"
#import "TXINotifyDelegate-Protocol.h"
#import "TXIRenderViewDelegate-Protocol.h"
#import "TXIVideoEncoderDelegate-Protocol.h"
#import "TXIVideoPreprocessorDelegateEx-Protocol.h"

@class NSLock, NSMutableArray, NSObject, NSString, NSThread, TXCCameraCapturer, TXCRenderView, TXCVideoEncoder, TXCVideoPreprocessorEx, TXReplayKitMixer, TXSNALPacket, UIImage;
@protocol OS_dispatch_source, TXICaptureAndEncDelegate, TXICustomPreprocessDelegate, TXINotifyDelegate;

@interface TXCCaptureAndEnc : TXCModule <TXIAudioRecordDelegate, TXICameraCapturerDelegate, TXIVideoPreprocessorDelegateEx, TXIVideoEncoderDelegate, TXIRenderViewDelegate, TXINotifyDelegate>
{
    TXReplayKitMixer *_rpMixer;
    NSObject<OS_dispatch_source> *_backgroundTimer;
    _Bool _isPaused;
    unsigned long long _pauseTS;
    unsigned long long _lastFPSTickMS;
    struct CGSize _originSampleBufferSize;
    _Bool _isLastSampleBuffer;
    NSMutableArray *_sampleBufferArray;
    NSThread *_sampleBufferLoopThread;
    long long _sampleHomeOrientation;
    NSLock *_audioBufferLock;
    char *_audioBuffer;
    int _audioBufferOffset;
    _Bool _enableBFrame;
    unsigned long long _lastEncodedFrameIndex;
    int _idrFps;
    unsigned long long _lastEncodedGopIndex;
    long long _renderMode;
    _Bool _enableSmallVideo;
    struct CGSize _smallVideoSize;
    unsigned int _smallVideoFps;
    unsigned int _smallVideoBitrate;
    _Bool _hasRecvFirstAudioFrame;
    _Bool _hasRecvFirstVideoFrame;
    _Bool _enableMirror;
    _Bool _enableTouchFocus;
    _Bool _renderStopped;
    _Bool _enableMute;
    _Bool _enableAEC;
    _Bool _enableCustomAudioCapture;
    _Bool _enableAudioPreview;
    _Bool _enableAudioHWAcceleration;
    _Bool _enableReverb;
    _Bool _enableVolumeLevelCal;
    _Bool _enableCameraCapture;
    _Bool _enableFrontCamera;
    _Bool _enableFaceDetect;
    _Bool _enableZoom;
    _Bool _enablePureAudioPush;
    _Bool _motionMute;
    _Bool _preprocessInCustomMode;
    _Bool _realtimeMode;
    _Bool _autoSampleBufferSize;
    _Bool _enableVideoHWAcceleration;
    _Bool _enableRPS;
    _Bool _enableFpsLimit;
    _Bool _isPushing;
    _Bool _isAnnexB;
    _Bool _lockOutput;
    int _reverbType;
    int _audioSampleRate;
    int _audioChannels;
    int _audioFormat;
    float _bgmPitch;
    float _filterMixLevel;
    int _videoFPS;
    int _minQP;
    int _maxQP;
    int _streamType;
    id <TXICaptureAndEncDelegate> _delegate;
    id <TXINotifyDelegate> _notifyDelegate;
    id <TXICustomPreprocessDelegate> _customPreprocessDelegate;
    long long _homeOrientation;
    long long _rotation;
    CDUnknownBlockType _volumeTestBlock;
    long long _beautyStyle;
    long long _beautyLevel;
    long long _whitenessLevel;
    long long _ruddinessLevel;
    long long _noseSlimLevel;
    long long _eyeScaleLevel;
    long long _chinLevel;
    long long _faceVLevel;
    long long _faceScaleLevel;
    long long _faceShortlevel;
    UIImage *_filterImage;
    NSString *_motionTemplate;
    NSString *_greenScreenFile;
    UIImage *_watermark;
    long long _customRenderFormat;
    long long _videoResolution;
    long long _videoEncodeGop;
    long long _videoBitrate;
    long long _outputRotation;
    long long _pauseFPS;
    long long _pauseTime;
    UIImage *_pauseImage;
    TXCCameraCapturer *_cameraCapturer;
    TXCVideoEncoder *_videoEncoder;
    TXCVideoEncoder *_smallVideoEncoder;
    TXSNALPacket *_backgroundNAL;
    TXCVideoPreprocessorEx *_videoPreproccessor;
    CDUnknownBlockType _snapshotCompletionBlock;
    TXCRenderView *_renderView;
    struct CGPoint _watermarkPos;
    struct CGSize _videoSize;
    struct CGRect _watermarkNormalization;
}

+ (float)getAudioInputDeviceVolume;
+ (void)setAudioInputDeviceVolume:(float)arg1;
+ (unsigned int)getAudioInputDeviceId;
+ (void)setAudioInputDeviceWithId:(unsigned int)arg1;
@property(retain) TXCRenderView *renderView; // @synthesize renderView=_renderView;
@property(copy) CDUnknownBlockType snapshotCompletionBlock; // @synthesize snapshotCompletionBlock=_snapshotCompletionBlock;
@property _Bool lockOutput; // @synthesize lockOutput=_lockOutput;
@property(retain) TXCVideoPreprocessorEx *videoPreproccessor; // @synthesize videoPreproccessor=_videoPreproccessor;
@property(retain) TXSNALPacket *backgroundNAL; // @synthesize backgroundNAL=_backgroundNAL;
@property(retain) TXCVideoEncoder *smallVideoEncoder; // @synthesize smallVideoEncoder=_smallVideoEncoder;
@property(retain) TXCVideoEncoder *videoEncoder; // @synthesize videoEncoder=_videoEncoder;
@property(retain) TXCCameraCapturer *cameraCapturer; // @synthesize cameraCapturer=_cameraCapturer;
@property(nonatomic) _Bool isAnnexB; // @synthesize isAnnexB=_isAnnexB;
@property(nonatomic) int streamType; // @synthesize streamType=_streamType;
@property(readonly, nonatomic) _Bool isPushing; // @synthesize isPushing=_isPushing;
@property(retain, nonatomic) UIImage *pauseImage; // @synthesize pauseImage=_pauseImage;
@property(nonatomic) long long pauseTime; // @synthesize pauseTime=_pauseTime;
@property(nonatomic) long long pauseFPS; // @synthesize pauseFPS=_pauseFPS;
@property(nonatomic) _Bool enableFpsLimit; // @synthesize enableFpsLimit=_enableFpsLimit;
@property(nonatomic) long long outputRotation; // @synthesize outputRotation=_outputRotation;
@property(nonatomic) _Bool enableRPS; // @synthesize enableRPS=_enableRPS;
@property(nonatomic) int maxQP; // @synthesize maxQP=_maxQP;
@property(nonatomic) int minQP; // @synthesize minQP=_minQP;
@property(nonatomic) _Bool enableVideoHWAcceleration; // @synthesize enableVideoHWAcceleration=_enableVideoHWAcceleration;
@property(nonatomic) _Bool autoSampleBufferSize; // @synthesize autoSampleBufferSize=_autoSampleBufferSize;
@property(nonatomic) long long videoBitrate; // @synthesize videoBitrate=_videoBitrate;
@property(nonatomic) _Bool realtimeMode; // @synthesize realtimeMode=_realtimeMode;
@property(nonatomic) long long videoEncodeGop; // @synthesize videoEncodeGop=_videoEncodeGop;
@property(nonatomic) struct CGSize videoSize; // @synthesize videoSize=_videoSize;
@property(nonatomic) int videoFPS; // @synthesize videoFPS=_videoFPS;
@property(nonatomic) long long videoResolution; // @synthesize videoResolution=_videoResolution;
@property(nonatomic) _Bool preprocessInCustomMode; // @synthesize preprocessInCustomMode=_preprocessInCustomMode;
@property(nonatomic) long long customRenderFormat; // @synthesize customRenderFormat=_customRenderFormat;
@property(nonatomic) struct CGRect watermarkNormalization; // @synthesize watermarkNormalization=_watermarkNormalization;
@property(nonatomic) struct CGPoint watermarkPos; // @synthesize watermarkPos=_watermarkPos;
@property(retain, nonatomic) UIImage *watermark; // @synthesize watermark=_watermark;
@property(retain, nonatomic) NSString *greenScreenFile; // @synthesize greenScreenFile=_greenScreenFile;
@property(nonatomic) _Bool motionMute; // @synthesize motionMute=_motionMute;
@property(retain, nonatomic) NSString *motionTemplate; // @synthesize motionTemplate=_motionTemplate;
@property(nonatomic) float filterMixLevel; // @synthesize filterMixLevel=_filterMixLevel;
@property(retain, nonatomic) UIImage *filterImage; // @synthesize filterImage=_filterImage;
@property(nonatomic) long long faceShortlevel; // @synthesize faceShortlevel=_faceShortlevel;
@property(nonatomic) long long faceScaleLevel; // @synthesize faceScaleLevel=_faceScaleLevel;
@property(nonatomic) long long faceVLevel; // @synthesize faceVLevel=_faceVLevel;
@property(nonatomic) long long chinLevel; // @synthesize chinLevel=_chinLevel;
@property(nonatomic) long long eyeScaleLevel; // @synthesize eyeScaleLevel=_eyeScaleLevel;
@property(nonatomic) long long noseSlimLevel; // @synthesize noseSlimLevel=_noseSlimLevel;
@property(nonatomic) long long ruddinessLevel; // @synthesize ruddinessLevel=_ruddinessLevel;
@property(nonatomic) long long whitenessLevel; // @synthesize whitenessLevel=_whitenessLevel;
@property(nonatomic) long long beautyLevel; // @synthesize beautyLevel=_beautyLevel;
@property(nonatomic) long long beautyStyle; // @synthesize beautyStyle=_beautyStyle;
@property(nonatomic) _Bool enablePureAudioPush; // @synthesize enablePureAudioPush=_enablePureAudioPush;
@property(nonatomic) _Bool enableZoom; // @synthesize enableZoom=_enableZoom;
@property(nonatomic) _Bool enableFaceDetect; // @synthesize enableFaceDetect=_enableFaceDetect;
@property(nonatomic) _Bool enableFrontCamera; // @synthesize enableFrontCamera=_enableFrontCamera;
@property(nonatomic) _Bool enableCameraCapture; // @synthesize enableCameraCapture=_enableCameraCapture;
@property(copy) CDUnknownBlockType volumeTestBlock; // @synthesize volumeTestBlock=_volumeTestBlock;
@property(nonatomic) _Bool enableVolumeLevelCal; // @synthesize enableVolumeLevelCal=_enableVolumeLevelCal;
@property(nonatomic) float bgmPitch; // @synthesize bgmPitch=_bgmPitch;
@property(nonatomic) int audioFormat; // @synthesize audioFormat=_audioFormat;
@property(nonatomic) int audioChannels; // @synthesize audioChannels=_audioChannels;
@property(nonatomic) int audioSampleRate; // @synthesize audioSampleRate=_audioSampleRate;
@property(nonatomic) int reverbType; // @synthesize reverbType=_reverbType;
@property(nonatomic) _Bool enableReverb; // @synthesize enableReverb=_enableReverb;
@property(nonatomic) _Bool enableAudioHWAcceleration; // @synthesize enableAudioHWAcceleration=_enableAudioHWAcceleration;
@property(nonatomic) _Bool enableAudioPreview; // @synthesize enableAudioPreview=_enableAudioPreview;
@property(nonatomic) _Bool enableCustomAudioCapture; // @synthesize enableCustomAudioCapture=_enableCustomAudioCapture;
@property(nonatomic) _Bool enableAEC; // @synthesize enableAEC=_enableAEC;
@property(nonatomic) _Bool enableMute; // @synthesize enableMute=_enableMute;
@property(nonatomic) _Bool renderStopped; // @synthesize renderStopped=_renderStopped;
@property(nonatomic) _Bool enableTouchFocus; // @synthesize enableTouchFocus=_enableTouchFocus;
@property(nonatomic) long long rotation; // @synthesize rotation=_rotation;
@property(nonatomic) long long homeOrientation; // @synthesize homeOrientation=_homeOrientation;
@property(nonatomic) _Bool enableMirror; // @synthesize enableMirror=_enableMirror;
@property(nonatomic) __weak id <TXICustomPreprocessDelegate> customPreprocessDelegate; // @synthesize customPreprocessDelegate=_customPreprocessDelegate;
@property(nonatomic) __weak id <TXINotifyDelegate> notifyDelegate; // @synthesize notifyDelegate=_notifyDelegate;
@property(nonatomic) __weak id <TXICaptureAndEncDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (_Bool)forceSoftWareVideoEncoder;
- (void)setLocalMirrorMode:(int)arg1;
- (_Bool)isVideoResolution720P;
- (_Bool)getEnableAEC;
- (void)snapshot:(CDUnknownBlockType)arg1;
- (void)lockOutput:(_Bool)arg1;
- (_Bool)setBGMVolume:(float)arg1;
- (_Bool)setMicVolume:(float)arg1;
- (int)setBGMPosition:(long long)arg1;
- (int)getMusicDuration:(id)arg1;
- (int)getBGMPosition;
- (_Bool)resumeBGM;
- (_Bool)pauseBGM;
- (_Bool)stopBGM;
- (_Bool)playBGM:(id)arg1 withBeginNotify:(CDUnknownBlockType)arg2 withProgressNotify:(CDUnknownBlockType)arg3 andCompleteNotify:(CDUnknownBlockType)arg4;
- (_Bool)playBGM:(id)arg1;
- (void)onNotifyEvent:(int)arg1 withParams:(id)arg2;
- (void)onEncodeFinished:(unsigned int)arg1 gopIndex:(unsigned long long)arg2 rpsFrameIndex:(unsigned long long)arg3;
- (void)onEncodeNAL:(id)arg1 ErrorCode:(int)arg2;
- (void)onRenderViewPinchScale:(double)arg1;
- (void)onRenderViewFocusAtPoint:(struct CGPoint)arg1;
- (void)onTextureDestoryed;
- (void)onDetectFacePoints:(id)arg1;
- (void)didProcessFrame:(id)arg1;
- (void)onRenderSampleBuferFrame:(id)arg1;
- (unsigned int)willAddWatermark:(id)arg1;
- (void)capturer:(id)arg1 didCaptureFrame:(id)arg2;
- (void)onCameraCaptureFrame:(id)arg1;
- (void)onRecordError:(long long)arg1 info:(id)arg2;
- (void)onRecordEncData:(id)arg1 timestamp:(unsigned long long)arg2;
- (void)onRecordSpeedPcmData:(char *)arg1 dataLen:(unsigned int)arg2 timestamp:(unsigned long long)arg3;
- (void)onRecordPcmData:(char *)arg1 dataLen:(unsigned int)arg2 timestamp:(unsigned long long)arg3 sampleRate:(int)arg4 channels:(int)arg5;
- (void)customSampleBufferLoopFun:(id)arg1;
- (void)setVoiceChangerType:(int)arg1 environment:(int)arg2;
- (void)enableSmallVideo:(_Bool)arg1 withVideoSize:(struct CGSize)arg2 bitrate:(long long)arg3 fps:(long long)arg4;
- (void)enableNearestRPS:(long long)arg1;
- (void)setVideoQosWithIDRFps:(long long)arg1;
- (void)setAudioQosWithFrameLen:(long long)arg1 encBitrate:(long long)arg2 fetRate:(float)arg3;
- (void)setVideoQosWithFps:(long long)arg1 videoGop:(long long)arg2 bitrate:(long long)arg3 totalBitrate:(int)arg4 videoSize:(struct CGSize)arg5 streamType:(unsigned int)arg6;
- (void)setRPSRefBitmap:(long long)arg1 bitmap:(unsigned short)arg2 recvTimestamp:(long long)arg3;
- (void)restartIDR;
- (void)sendVideoSampleBuffer:(struct opaqueCMSampleBuffer *)arg1;
- (void)cancelSendMutedAudioSampleBuffer;
- (void)sendMutedAudioSampleBuffer;
- (void)sendMutedAudioSampleBufferDelay;
- (void)sendAudioSampleBuffer:(struct opaqueCMSampleBuffer *)arg1 withType:(long long)arg2;
- (void)sendAudioSampleBuffer:(struct opaqueCMSampleBuffer *)arg1;
- (void)sendCustomPCMData:(char *)arg1 len:(unsigned int)arg2 timestamp:(unsigned long long)arg3;
- (void)sendCustomPCMData:(id)arg1;
- (void)sendCustomPCMData:(char *)arg1 len:(unsigned int)arg2;
- (void)setCustomAudioMuted:(_Bool)arg1;
- (_Bool)isCameraAutoFocusFaceModeSupported;
- (_Bool)isCameraTorchSupported;
- (_Bool)isCameraFocusPositionInPreviewSupported;
- (_Bool)isCameraZoomSupported;
- (void)setZoom:(double)arg1;
- (void)setFocusPosition:(struct CGPoint)arg1;
- (void)resumeRecord;
- (void)pauseRecord;
- (void)resumeEncode;
- (void)pauseEncode;
- (void)resumeCapture;
- (void)resume;
- (void)pauseCapture;
- (void)pause;
- (void)stop;
- (void)stopTest;
- (void)startTest;
- (void)stopAudioRecord;
- (void)startAudioRecord;
- (int)startWithoutAudioRecord;
- (int)start;
- (void)stopVideoCapture;
- (void)startVideoCapture;
- (void)stopCustomCapture;
- (int)startCustomCapture;
- (void)stopCameraCapture;
- (void)startCamera;
- (int)startCameraCapture;
- (void)_startVideoPreprocessor;
@property(readonly, nonatomic) long long videoEncodeRealGop;
- (_Bool)setEnableFlash:(_Bool)arg1;
- (id)currentCapturer;
@property(readonly, nonatomic) unsigned int volumeLevel;
- (void)setRenderMode:(long long)arg1;
- (void)setID:(id)arg1;
- (void)onEncNAL:(id)arg1;
- (void)onEncAudio:(id)arg1;
- (void)setCaptureResolution:(long long)arg1;
- (void)sendBackgroundNAL;
- (void)stopBackgroundSend;
- (void)startBackgroundSend;
- (void)encodeFrameForSamllVideo:(struct opaqueCMSampleBuffer *)arg1 timestamp:(unsigned long long)arg2;
- (void)encodeFrame:(struct opaqueCMSampleBuffer *)arg1 timestamp:(unsigned long long)arg2;
- (void)setQP:(int)arg1 maxQP:(int)arg2;
- (void)restartEncoder;
- (void)stopEncoder;
- (void)stopSmallVideoEncoder;
- (void)startSmallVideoEncoder;
- (void)startEncoder;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

