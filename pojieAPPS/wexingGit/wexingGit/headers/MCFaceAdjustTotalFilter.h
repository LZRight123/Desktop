//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MCBaseFilter.h"

@class GLProgram, MCMeshFilterV2, NSMutableDictionary;

@interface MCFaceAdjustTotalFilter : MCBaseFilter
{
    GLProgram *secondFilterProgram;
    unsigned int secondFilterPositionAttribute;
    unsigned int secondFilterTextureCoordinateAttribute;
    unsigned int secondFilterInputTextureUniform;
    unsigned int secondFilterInputTextureUniform2;
    unsigned int u_vType;
    unsigned int u_boundFix;
    unsigned int u_srcSize;
    unsigned int u_cropSize;
    unsigned int u_bValidTexture;
    unsigned int u_texMapSize;
    unsigned int u_cos_t;
    unsigned int u_sin_t;
    unsigned int uAngles;
    unsigned int uSize;
    unsigned int uv_posV;
    unsigned int uv_paramV;
    float meshVertices[64772];
    float meshTextureCoordinates[64772];
    NSMutableDictionary *_mParamDict;
    MCMeshFilterV2 *_parentMeshFilter;
    struct CGSize _rawImageSize;
    struct CGRect _faceRect;
}

+ (void)updateParamV:(id)arg1 toFloatArray:(float [22])arg2;
+ (void)applyVolumeOfParam:(long long)arg1 maxValue:(double)arg2 fArray:(float *)arg3 index:(int)arg4 dict:(id)arg5;
+ (void)generateUniformVWithFaceFeatures:(float [95][2])arg1 bmSize:(struct CGSize)arg2 uniformV:(float [41][2])arg3 fPitch:(float)arg4 fYaw:(float)arg5 angles:(union _GLKVector3 *)arg6;
@property(nonatomic) struct CGSize rawImageSize; // @synthesize rawImageSize=_rawImageSize;
@property(nonatomic) struct CGRect faceRect; // @synthesize faceRect=_faceRect;
@property(nonatomic) __weak MCMeshFilterV2 *parentMeshFilter; // @synthesize parentMeshFilter=_parentMeshFilter;
@property(retain, nonatomic) NSMutableDictionary *mParamDict; // @synthesize mParamDict=_mParamDict;
- (void).cxx_destruct;
- (void)setupEnviroment;
- (struct CGRect)getFaceRectWithFeature:(id)arg1;
- (void)updateMesh;
- (void)updateParams:(id)arg1;
- (_Bool)updateUniformsWithFaceManager:(id)arg1;
- (void)renderToTextureWithVertices:(const float *)arg1 textureCoordinates:(const float *)arg2;
- (id)generateEmptyBufferForPass1;
- (void)drawBaseTexture:(id)arg1 toTexture:(id)arg2 vertices:(const float *)arg3 textureCoordinates:(const float *)arg4;
- (void)useFirstInputFrameBuffer;
- (id)init;

@end

