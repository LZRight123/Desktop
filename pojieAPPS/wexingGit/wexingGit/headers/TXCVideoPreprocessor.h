//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "TXCPituFilterDelegate-Protocol.h"
#import "TXINotifyDelegate-Protocol.h"

@class NSDate, NSString, TXCBeautifyFilter, TXCCropFilter, TXCGaussianBlurFilter, TXCGreenScreenFilter, TXCGreenScreenParam, TXCPituFilter, TXCRGB2YUVOutput, TXCTransmitFilter, TXCWaterMark, TXCYUV2RGBInput, UIImage, UIView;
@protocol TXINotifyDelegate, TXIVideoPreprocessorDelegate;

@interface TXCVideoPreprocessor : NSObject <TXINotifyDelegate, TXCPituFilterDelegate>
{
    _Bool _waterMirror;
    _Bool _mirror;
    _Bool _isAsync;
    _Bool _isSampleBuffer;
    _Bool _isFilterChanged;
    _Bool _isWaterMarkNeedUpdate;
    _Bool _isProcessFinish;
    _Bool _isInBackground;
    _Bool _motionMute;
    _Bool _beautyReport;
    _Bool _whiteReport;
    _Bool _ruddyReport;
    _Bool _eyeScaleReport;
    _Bool _faceSlimReport;
    _Bool _faceBeautyReport;
    _Bool _faceVReport;
    _Bool _chinReport;
    _Bool _faceShortReport;
    _Bool _noseSlimReport;
    _Bool _filterTypeReport;
    _Bool _filterImageReport;
    _Bool _greenReport;
    _Bool _templateReport;
    _Bool _watermarkReport;
    float _beautLevel;
    float _whiteLevel;
    float _ruddyLevel;
    float _eyeScaleLeve;
    float _faceSlimLeve;
    float _faceBeautyLeve;
    float _faceVLeve;
    float _chinLeve;
    float _faceShortLeve;
    float _noseSlimLeve;
    float _leftMixLevel;
    float _rightMixLevel;
    float _gausLevel;
    float _leftRatio;
    TXCGreenScreenParam *_greenParam;
    long long _rotateAngle;
    TXCYUV2RGBInput *_yuvInput;
    TXCBeautifyFilter *_beautyFilter;
    TXCTransmitFilter *_filterFilter;
    TXCCropFilter *_inputCropFilter;
    TXCCropFilter *_outputCropFilter;
    TXCPituFilter *_pituFilter;
    TXCGreenScreenFilter *_greenFilter;
    TXCWaterMark *_waterFilter;
    TXCRGB2YUVOutput *_yuvOutput;
    TXCGaussianBlurFilter *_gausFilter;
    id <TXIVideoPreprocessorDelegate> _delegate;
    id <TXINotifyDelegate> _notify;
    unsigned long long _curTimestamp;
    long long _beautStyle;
    UIImage *_filteImage;
    UIImage *_filteImage2;
    long long _filteType;
    NSString *_imagePath;
    NSString *_templatePath;
    NSString *_greenPath;
    UIView *_waterMark;
    UIImage *_waterMarkImage;
    long long _processAngle;
    long long _inputFormat;
    long long _outputFormat;
    struct opaqueCMSampleBuffer *_nv12SampleBuffer;
    struct opaqueCMSampleBuffer *_i420SampleBuffer;
    struct opaqueCMSampleBuffer *_rgbSampleBuffer;
    NSDate *_date;
    NSString *_shotPath;
    unsigned long long _shotTimestamp;
    struct CGSize _outputSize;
    struct CGSize _inputSize;
    struct CGRect _cropRect;
    struct CGRect _waterMarkImageFrame;
}

+ (id)getVersion;
@property(nonatomic) unsigned long long shotTimestamp; // @synthesize shotTimestamp=_shotTimestamp;
@property(retain, nonatomic) NSString *shotPath; // @synthesize shotPath=_shotPath;
@property(nonatomic) _Bool watermarkReport; // @synthesize watermarkReport=_watermarkReport;
@property(nonatomic) _Bool templateReport; // @synthesize templateReport=_templateReport;
@property(nonatomic) _Bool greenReport; // @synthesize greenReport=_greenReport;
@property(nonatomic) _Bool filterImageReport; // @synthesize filterImageReport=_filterImageReport;
@property(nonatomic) _Bool filterTypeReport; // @synthesize filterTypeReport=_filterTypeReport;
@property(nonatomic) _Bool noseSlimReport; // @synthesize noseSlimReport=_noseSlimReport;
@property(nonatomic) _Bool faceShortReport; // @synthesize faceShortReport=_faceShortReport;
@property(nonatomic) _Bool chinReport; // @synthesize chinReport=_chinReport;
@property(nonatomic) _Bool faceVReport; // @synthesize faceVReport=_faceVReport;
@property(nonatomic) _Bool faceBeautyReport; // @synthesize faceBeautyReport=_faceBeautyReport;
@property(nonatomic) _Bool faceSlimReport; // @synthesize faceSlimReport=_faceSlimReport;
@property(nonatomic) _Bool eyeScaleReport; // @synthesize eyeScaleReport=_eyeScaleReport;
@property(nonatomic) _Bool ruddyReport; // @synthesize ruddyReport=_ruddyReport;
@property(nonatomic) _Bool whiteReport; // @synthesize whiteReport=_whiteReport;
@property(nonatomic) _Bool beautyReport; // @synthesize beautyReport=_beautyReport;
@property(retain, nonatomic) NSDate *date; // @synthesize date=_date;
@property(nonatomic) struct opaqueCMSampleBuffer *rgbSampleBuffer; // @synthesize rgbSampleBuffer=_rgbSampleBuffer;
@property(nonatomic) struct opaqueCMSampleBuffer *i420SampleBuffer; // @synthesize i420SampleBuffer=_i420SampleBuffer;
@property(nonatomic) struct opaqueCMSampleBuffer *nv12SampleBuffer; // @synthesize nv12SampleBuffer=_nv12SampleBuffer;
@property(nonatomic) long long outputFormat; // @synthesize outputFormat=_outputFormat;
@property(nonatomic) long long inputFormat; // @synthesize inputFormat=_inputFormat;
@property(nonatomic) struct CGSize inputSize; // @synthesize inputSize=_inputSize;
@property(nonatomic) long long processAngle; // @synthesize processAngle=_processAngle;
@property(readonly, nonatomic) struct CGRect waterMarkImageFrame; // @synthesize waterMarkImageFrame=_waterMarkImageFrame;
@property(readonly, nonatomic) UIImage *waterMarkImage; // @synthesize waterMarkImage=_waterMarkImage;
@property(readonly, nonatomic) UIView *waterMark; // @synthesize waterMark=_waterMark;
@property(readonly, nonatomic) NSString *greenPath; // @synthesize greenPath=_greenPath;
@property(readonly, nonatomic) _Bool motionMute; // @synthesize motionMute=_motionMute;
@property(readonly, nonatomic) NSString *templatePath; // @synthesize templatePath=_templatePath;
@property(readonly, nonatomic) NSString *imagePath; // @synthesize imagePath=_imagePath;
@property(readonly, nonatomic) long long filteType; // @synthesize filteType=_filteType;
@property(readonly, nonatomic) UIImage *filteImage2; // @synthesize filteImage2=_filteImage2;
@property(readonly, nonatomic) UIImage *filteImage; // @synthesize filteImage=_filteImage;
@property(readonly, nonatomic) float leftRatio; // @synthesize leftRatio=_leftRatio;
@property(readonly, nonatomic) float gausLevel; // @synthesize gausLevel=_gausLevel;
@property(readonly, nonatomic) float rightMixLevel; // @synthesize rightMixLevel=_rightMixLevel;
@property(readonly, nonatomic) float leftMixLevel; // @synthesize leftMixLevel=_leftMixLevel;
@property(readonly, nonatomic) float noseSlimLeve; // @synthesize noseSlimLeve=_noseSlimLeve;
@property(readonly, nonatomic) float faceShortLeve; // @synthesize faceShortLeve=_faceShortLeve;
@property(readonly, nonatomic) float chinLeve; // @synthesize chinLeve=_chinLeve;
@property(readonly, nonatomic) float faceVLeve; // @synthesize faceVLeve=_faceVLeve;
@property(readonly, nonatomic) float faceBeautyLeve; // @synthesize faceBeautyLeve=_faceBeautyLeve;
@property(readonly, nonatomic) float faceSlimLeve; // @synthesize faceSlimLeve=_faceSlimLeve;
@property(readonly, nonatomic) float eyeScaleLeve; // @synthesize eyeScaleLeve=_eyeScaleLeve;
@property(readonly, nonatomic) float ruddyLevel; // @synthesize ruddyLevel=_ruddyLevel;
@property(readonly, nonatomic) float whiteLevel; // @synthesize whiteLevel=_whiteLevel;
@property(readonly, nonatomic) float beautLevel; // @synthesize beautLevel=_beautLevel;
@property(readonly, nonatomic) long long beautStyle; // @synthesize beautStyle=_beautStyle;
@property(nonatomic) unsigned long long curTimestamp; // @synthesize curTimestamp=_curTimestamp;
@property(nonatomic) _Bool isInBackground; // @synthesize isInBackground=_isInBackground;
@property(nonatomic) _Bool isProcessFinish; // @synthesize isProcessFinish=_isProcessFinish;
@property(nonatomic) _Bool isWaterMarkNeedUpdate; // @synthesize isWaterMarkNeedUpdate=_isWaterMarkNeedUpdate;
@property(nonatomic) _Bool isFilterChanged; // @synthesize isFilterChanged=_isFilterChanged;
@property(nonatomic) _Bool isSampleBuffer; // @synthesize isSampleBuffer=_isSampleBuffer;
@property(nonatomic) __weak id <TXINotifyDelegate> notify; // @synthesize notify=_notify;
@property(nonatomic) __weak id <TXIVideoPreprocessorDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) TXCGaussianBlurFilter *gausFilter; // @synthesize gausFilter=_gausFilter;
@property(retain, nonatomic) TXCRGB2YUVOutput *yuvOutput; // @synthesize yuvOutput=_yuvOutput;
@property(retain, nonatomic) TXCWaterMark *waterFilter; // @synthesize waterFilter=_waterFilter;
@property(retain, nonatomic) TXCGreenScreenFilter *greenFilter; // @synthesize greenFilter=_greenFilter;
@property(retain, nonatomic) TXCPituFilter *pituFilter; // @synthesize pituFilter=_pituFilter;
@property(retain, nonatomic) TXCCropFilter *outputCropFilter; // @synthesize outputCropFilter=_outputCropFilter;
@property(retain, nonatomic) TXCCropFilter *inputCropFilter; // @synthesize inputCropFilter=_inputCropFilter;
@property(retain, nonatomic) TXCTransmitFilter *filterFilter; // @synthesize filterFilter=_filterFilter;
@property(retain, nonatomic) TXCBeautifyFilter *beautyFilter; // @synthesize beautyFilter=_beautyFilter;
@property(retain, nonatomic) TXCYUV2RGBInput *yuvInput; // @synthesize yuvInput=_yuvInput;
@property(nonatomic) _Bool isAsync; // @synthesize isAsync=_isAsync;
@property(nonatomic) struct CGSize outputSize; // @synthesize outputSize=_outputSize;
@property(nonatomic) struct CGRect cropRect; // @synthesize cropRect=_cropRect;
@property(nonatomic) long long rotateAngle; // @synthesize rotateAngle=_rotateAngle;
@property(nonatomic) _Bool mirror; // @synthesize mirror=_mirror;
@property(retain, nonatomic) TXCGreenScreenParam *greenParam; // @synthesize greenParam=_greenParam;
@property(nonatomic) _Bool waterMirror; // @synthesize waterMirror=_waterMirror;
- (void).cxx_destruct;
- (void)dealloc;
- (void)saveShotFilter:(id)arg1 name:(id)arg2;
- (void)saveShot;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (_Bool)isWaterMarkEnable;
- (_Bool)isFilterEnable;
- (_Bool)isBeautyEnable;
- (_Bool)isPituEnable;
- (_Bool)isGausEnable;
- (unsigned long long)getRotationMode:(long long)arg1 mirror:(_Bool)arg2;
- (struct CGSize)getOutput:(struct CGSize)arg1 rotate:(long long)arg2;
- (id)getFilterImage:(long long)arg1;
- (float)clipValue:(float)arg1 minValue:(float)arg2 maxValue:(float)arg3;
- (int)strideNumber:(int)arg1;
- (struct CGSize)strideSize:(struct CGSize)arg1;
- (void)setWaterMarkImage:(id)arg1 frame:(struct CGRect)arg2;
- (void)setWaterMark:(id)arg1;
- (void)setGreenScreenFile:(id)arg1;
- (void)setMotionMute:(_Bool)arg1;
- (void)setMotionTemplate:(id)arg1;
- (void)setGausBlurLevel:(double)arg1;
- (void)setNoseSlimLevel:(long long)arg1;
- (void)setFaceShortLevel:(long long)arg1;
- (void)setChinLevel:(long long)arg1;
- (void)setFaceVLevel:(long long)arg1;
- (void)setFaceBeautyLevel:(long long)arg1;
- (void)setFaceSlimLevel:(long long)arg1;
- (void)setEyeScaleLevel:(long long)arg1;
- (void)setFilterMixLevel:(double)arg1;
- (void)setFilter1:(id)arg1 filter2:(id)arg2 filter1MixLevel:(double)arg3 filter2MixLevel:(double)arg4 leftRatio:(double)arg5;
- (void)setFilterUIImage:(id)arg1;
- (void)setFilterImage:(id)arg1;
- (void)setFilterType:(long long)arg1;
- (void)setRuddinessLevel:(long long)arg1;
- (void)setWhitenessLevel:(long long)arg1;
- (void)setBeautyLevel:(long long)arg1;
- (void)setBeautyStyle:(long long)arg1;
- (void)onDetectFacePoints:(id)arg1;
- (void)onNotifyEvent:(int)arg1 withParams:(id)arg2;
- (void)setFilterParam;
- (void)initFilterParam;
- (int)processFrame:(char *)arg1 width:(long long)arg2 height:(long long)arg3 orientation:(long long)arg4 inputFormat:(long long)arg5 outputFormat:(long long)arg6;
- (int)processFrame:(struct opaqueCMSampleBuffer *)arg1 orientation:(long long)arg2 outputFormat:(long long)arg3;
- (void)outputByte;
- (struct opaqueCMSampleBuffer *)getSampleBuffer:(char *)arg1 bufferSize:(struct CGSize)arg2;
- (void)outputSampleBuffer;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

