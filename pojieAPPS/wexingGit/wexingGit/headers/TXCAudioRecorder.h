//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "TXIAudioRecordDelegate-Protocol.h"

@class NSString;
@protocol OS_dispatch_queue, TXIAudioRecordDelegate, TXINotifyDelegate;

@interface TXCAudioRecorder : NSObject <TXIAudioRecordDelegate>
{
    struct TXCAudioEncoder *_audioCodec;
    struct TXCAudioSpeeder *_audioSpeeder;
    struct TXCResampleMixer _resampler;
    struct TXCStatusModule _statusModule;
    struct TXCVolumeLevelS16 _volumeLevelCal;
    int _muteState;
    NSString *_Id;
    int _frameIndex;
    _Bool _enableReverb;
    _Bool _enableAEC;
    _Bool _isAudioPreview;
    _Bool _isHWAcceleration;
    _Bool _isRecording;
    _Bool _isPause;
    _Bool _isMute;
    _Bool _isCustomRecord;
    _Bool _enableVolumeLevelCal;
    int _sampleRate;
    int _channelsPerSample;
    int _bitsPerChannel;
    int _encFormat;
    float _playRate;
    int _encBitRate;
    int _encFrameLenMs;
    unsigned int _fecRatio;
    id <TXIAudioRecordDelegate> _delegate;
    id <TXINotifyDelegate> _notifyDelegate;
    long long _reverbType;
    NSObject<OS_dispatch_queue> *_audioRecorderQueue;
}

+ (float)getInputDeviceVolume;
+ (void)setInputDeviceVolume:(float)arg1;
+ (unsigned int)getInputDeviceId;
+ (void)setInputDeviceId:(unsigned int)arg1;
+ (_Bool)getEnableAEC;
+ (_Bool)requestForAccess;
+ (id)sharedInstance;
@property(nonatomic) _Bool enableVolumeLevelCal; // @synthesize enableVolumeLevelCal=_enableVolumeLevelCal;
@property(nonatomic) unsigned int fecRatio; // @synthesize fecRatio=_fecRatio;
@property(nonatomic) int encFrameLenMs; // @synthesize encFrameLenMs=_encFrameLenMs;
@property(nonatomic) int encBitRate; // @synthesize encBitRate=_encBitRate;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *audioRecorderQueue; // @synthesize audioRecorderQueue=_audioRecorderQueue;
@property(nonatomic) _Bool isCustomRecord; // @synthesize isCustomRecord=_isCustomRecord;
@property(nonatomic) _Bool isMute; // @synthesize isMute=_isMute;
@property(readonly) _Bool isPause; // @synthesize isPause=_isPause;
@property(readonly) _Bool isRecording; // @synthesize isRecording=_isRecording;
@property(nonatomic) float playRate; // @synthesize playRate=_playRate;
@property(nonatomic) _Bool isHWAcceleration; // @synthesize isHWAcceleration=_isHWAcceleration;
@property(nonatomic) int encFormat; // @synthesize encFormat=_encFormat;
@property(nonatomic) _Bool isAudioPreview; // @synthesize isAudioPreview=_isAudioPreview;
@property(nonatomic) _Bool enableAEC; // @synthesize enableAEC=_enableAEC;
@property(nonatomic) long long reverbType; // @synthesize reverbType=_reverbType;
@property(nonatomic) _Bool enableReverb; // @synthesize enableReverb=_enableReverb;
@property(nonatomic) int bitsPerChannel; // @synthesize bitsPerChannel=_bitsPerChannel;
@property(nonatomic) int channelsPerSample; // @synthesize channelsPerSample=_channelsPerSample;
@property(nonatomic) int sampleRate; // @synthesize sampleRate=_sampleRate;
@property(nonatomic) __weak id <TXINotifyDelegate> notifyDelegate; // @synthesize notifyDelegate=_notifyDelegate;
@property(nonatomic) __weak id <TXIAudioRecordDelegate> delegate; // @synthesize delegate=_delegate;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)updateCaptureState;
@property(readonly, nonatomic) unsigned int volumeLevel;
- (void)setEncFrameLenMsInternal:(int)arg1;
- (void)onRecordError:(long long)arg1 info:(id)arg2;
- (void)onRecordPcmData:(char *)arg1 dataLen:(unsigned int)arg2 timestamp:(unsigned long long)arg3 sampleRate:(int)arg4 channels:(int)arg5;
- (void)setAudioEncInfo:(int)arg1 bitrate:(int)arg2;
- (void)resetAudioCodec;
- (void)setVoiceChangerType:(int)arg1 environment:(int)arg2;
- (void)sendCustomPCMData:(id)arg1;
- (void)sendCustomPCMData:(char *)arg1 len:(unsigned int)arg2 timestamp:(unsigned long long)arg3;
- (void)sendCustomPCMData:(char *)arg1 len:(unsigned int)arg2;
- (long long)stopRecord;
- (long long)resetRecord;
- (long long)resumeRecord;
- (long long)pauseRecord;
- (void)startRecord;
- (id)getID;
- (void)setID:(id)arg1;
- (void)resetRecordInternal;
- (id)init;
- (id)initPrivate;
- (void)sendNotifyEvent:(int)arg1 eventMsg:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

