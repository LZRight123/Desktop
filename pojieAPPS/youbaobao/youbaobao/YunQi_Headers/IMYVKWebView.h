//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

#import "UIWebViewDelegate-Protocol.h"
#import "WKNavigationDelegate-Protocol.h"
#import "WKUIDelegate-Protocol.h"

@class IMYWebViewUtil, JSContext, NSString, NSURL, NSURLRequest, UIScrollView;
@protocol IMYVKWebViewDelegate;

@interface IMYVKWebView : UIView <UIWebViewDelegate, WKNavigationDelegate, WKUIDelegate>
{
    _Bool _isProxy;
    _Bool _usingUIWebView;
    _Bool _scalesPageToFit;
    _Bool _ignoreCancelledError;
    _Bool _needsInlineVideo;
    id _realWebView;
    id <IMYVKWebViewDelegate> _delegate;
    double _estimatedProgress;
    JSContext *_jsContext;
    NSString *_title;
    NSURLRequest *_firstRequest;
    NSURLRequest *_firstPageFinalRequest;
    NSURLRequest *_currentRequest;
    IMYWebViewUtil *_webUtil;
    NSURL *_savedloadURL;
    UIView *_safeBottomMarginBar;
}

+ (id)sharedProcessPool;
+ (_Bool)globalWebViewDidCreated;
+ (id)allWebViews;
+ (id)proxyWithWebView:(id)arg1;
@property(retain, nonatomic) UIView *safeBottomMarginBar; // @synthesize safeBottomMarginBar=_safeBottomMarginBar;
@property(nonatomic) _Bool needsInlineVideo; // @synthesize needsInlineVideo=_needsInlineVideo;
@property(retain, nonatomic) NSURL *savedloadURL; // @synthesize savedloadURL=_savedloadURL;
@property(retain, nonatomic) IMYWebViewUtil *webUtil; // @synthesize webUtil=_webUtil;
@property(retain, nonatomic) NSURLRequest *currentRequest; // @synthesize currentRequest=_currentRequest;
@property(retain, nonatomic) NSURLRequest *firstPageFinalRequest; // @synthesize firstPageFinalRequest=_firstPageFinalRequest;
@property(retain, nonatomic) NSURLRequest *firstRequest; // @synthesize firstRequest=_firstRequest;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(retain, nonatomic) JSContext *jsContext; // @synthesize jsContext=_jsContext;
@property(readonly, nonatomic) _Bool ignoreCancelledError; // @synthesize ignoreCancelledError=_ignoreCancelledError;
@property(nonatomic) double estimatedProgress; // @synthesize estimatedProgress=_estimatedProgress;
@property(nonatomic) __weak id <IMYVKWebViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) id realWebView; // @synthesize realWebView=_realWebView;
@property(readonly, nonatomic) _Bool usingUIWebView; // @synthesize usingUIWebView=_usingUIWebView;
- (void).cxx_destruct;
- (void)returnWithData:(id)arg1 forObject:(id)arg2 andPath:(id)arg3;
- (void)returnWithData:(id)arg1 forObject:(id)arg2;
- (void)sendEvent:(id)arg1 params:(id)arg2;
- (void)sendEvent:(id)arg1;
- (void)dealloc;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;
- (void)gobackWithStep:(long long)arg1;
- (long long)countOfHistory;
@property(nonatomic) _Bool scalesPageToFit; // @synthesize scalesPageToFit=_scalesPageToFit;
- (id)stringByEvaluatingJavaScriptFromString:(id)arg1;
- (void)evaluateJavaScript:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)stopLoading;
- (id)reloadFromOrigin;
- (id)reload;
- (id)goForward;
- (id)goBack;
@property(readonly, nonatomic) _Bool canGoForward;
@property(readonly, nonatomic) _Bool canGoBack;
@property(readonly, nonatomic, getter=isLoading) _Bool loading;
@property(readonly, nonatomic) NSURL *URL;
@property(readonly, nonatomic) NSURLRequest *request;
- (id)loadData:(id)arg1 MIMEType:(id)arg2 characterEncodingName:(id)arg3 baseURL:(id)arg4;
- (id)loadHTMLString:(id)arg1 baseURL:(id)arg2;
- (id)loadRequest:(id)arg1;
@property(readonly, nonatomic) UIScrollView *scrollView;
- (_Bool)callback_webViewShouldStartLoadWithRequest:(id)arg1 navigationType:(long long)arg2;
- (void)callback_webViewDidFailLoadWithError:(id)arg1;
- (void)callback_webViewDidStartLoad;
- (void)callback_webViewDidFinishLoad;
- (void)webView:(id)arg1 commitPreviewingViewController:(id)arg2;
- (id)webView:(id)arg1 previewingViewControllerForElement:(id)arg2 defaultActions:(id)arg3;
- (_Bool)webView:(id)arg1 shouldPreviewElement:(id)arg2;
- (void)webView:(id)arg1 runJavaScriptTextInputPanelWithPrompt:(id)arg2 defaultText:(id)arg3 initiatedByFrame:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)webView:(id)arg1 runJavaScriptConfirmPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)webView:(id)arg1 runJavaScriptAlertPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)webViewDidClose:(id)arg1;
- (id)webView:(id)arg1 createWebViewWithConfiguration:(id)arg2 forNavigationAction:(id)arg3 windowFeatures:(id)arg4;
- (_Bool)shouldCancelRequestForDisableSchemeURL:(id)arg1;
- (void)willMoveToWindow:(id)arg1;
- (void)webViewWebContentProcessDidTerminate:(id)arg1;
- (void)reloadWithWKWebView:(id)arg1;
- (void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (void)webView:(id)arg1 didStartProvisionalNavigation:(id)arg2;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidStartLoad:(id)arg1;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)addScriptMessageHandler:(id)arg1 name:(id)arg2;
- (void)updateJSContext;
- (void)setOpaque:(_Bool)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setupUIWebViewJSSDK;
- (void)setupWKWebViewJSSDK;
- (void)setupJSSDK;
- (void)initUIWebView;
- (void)initWKWebView;
- (void)_initMyself;
- (id)initWithFrame:(struct CGRect)arg1 usingUIWebView:(_Bool)arg2 needsInlineVideo:(_Bool)arg3;
- (id)initWithFrame:(struct CGRect)arg1 usingUIWebView:(_Bool)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithProxyWebView:(id)arg1;
@property(readonly, nonatomic) NSURL *likelyURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

