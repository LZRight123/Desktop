//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "RCTEventEmitter.h"

#import "RCTBridgeModule-Protocol.h"

@class NSObject, NSString, RCTBridge;
@protocol OS_dispatch_queue;

@interface IMYRNNativeModule : RCTEventEmitter <RCTBridgeModule>
{
}

+ (id)resolverData:(id)arg1 withMsg:(id)arg2;
+ (const struct RCTMethodInfo *)__rct_export__1816;
+ (const struct RCTMethodInfo *)__rct_export__1665;
+ (const struct RCTMethodInfo *)__rct_export__hasLogin1584;
+ (const struct RCTMethodInfo *)__rct_export__1213;
+ (const struct RCTMethodInfo *)__rct_export__722;
+ (const struct RCTMethodInfo *)__rct_export__onRenderStart561;
+ (const struct RCTMethodInfo *)__rct_export__onRenderFinish430;
+ (void)load;
+ (id)moduleName;
+ (const struct RCTMethodInfo *)__rct_export__22312;
+ (const struct RCTMethodInfo *)__rct_export__21411;
+ (const struct RCTMethodInfo *)__rct_export__20110;
+ (_Bool)isApplicationSupportsShakeWithBridge:(id)arg1;
+ (const struct RCTMethodInfo *)__rct_export__1809;
+ (const struct RCTMethodInfo *)__rct_export__1598;
+ (const struct RCTMethodInfo *)__rct_export__1447;
+ (const struct RCTMethodInfo *)__rct_export__1296;
+ (const struct RCTMethodInfo *)__rct_export__1155;
+ (const struct RCTMethodInfo *)__rct_export__1034;
+ (const struct RCTMethodInfo *)__rct_export__823;
+ (const struct RCTMethodInfo *)__rct_export__672;
+ (const struct RCTMethodInfo *)__rct_export__521;
+ (const struct RCTMethodInfo *)__rct_export__380;
+ (const struct RCTMethodInfo *)__rct_export__3528;
+ (const struct RCTMethodInfo *)__rct_export__2917;
+ (const struct RCTMethodInfo *)__rct_export__2536;
+ (const struct RCTMethodInfo *)__rct_export__2245;
+ (const struct RCTMethodInfo *)__rct_export__1934;
+ (const struct RCTMethodInfo *)__rct_export__1593;
+ (const struct RCTMethodInfo *)__rct_export__1162;
+ (const struct RCTMethodInfo *)__rct_export__801;
+ (const struct RCTMethodInfo *)__rct_export__350;
+ (const struct RCTMethodInfo *)__rct_export__281;
+ (const struct RCTMethodInfo *)__rct_export__160;
+ (const struct RCTMethodInfo *)__rct_export__521;
+ (const struct RCTMethodInfo *)__rct_export__210;
+ (const struct RCTMethodInfo *)__rct_export__130;
+ (const struct RCTMethodInfo *)__rct_export__1646;
+ (const struct RCTMethodInfo *)__rct_export__1405;
+ (const struct RCTMethodInfo *)__rct_export__1174;
+ (const struct RCTMethodInfo *)__rct_export__993;
+ (const struct RCTMethodInfo *)__rct_export__812;
+ (const struct RCTMethodInfo *)__rct_export__581;
+ (const struct RCTMethodInfo *)__rct_export__400;
+ (id)shareCacheInstance;
+ (const struct RCTMethodInfo *)__rct_export__543;
+ (const struct RCTMethodInfo *)__rct_export__412;
+ (const struct RCTMethodInfo *)__rct_export__241;
+ (const struct RCTMethodInfo *)__rct_export__170;
+ (const struct RCTMethodInfo *)__rct_export__22311;
+ (const struct RCTMethodInfo *)__rct_export__20910;
+ (const struct RCTMethodInfo *)__rct_export__1959;
+ (const struct RCTMethodInfo *)__rct_export__1768;
+ (const struct RCTMethodInfo *)__rct_export__1587;
+ (const struct RCTMethodInfo *)__rct_export__1426;
+ (const struct RCTMethodInfo *)__rct_export__1175;
+ (const struct RCTMethodInfo *)__rct_export__954;
+ (const struct RCTMethodInfo *)__rct_export__733;
+ (const struct RCTMethodInfo *)__rct_export__512;
+ (const struct RCTMethodInfo *)__rct_export__341;
+ (const struct RCTMethodInfo *)__rct_export__220;
- (void)dealloc;
- (void)vibrateWithStyle:(id)arg1 style:(id)arg2 duration:(id)arg3 playSound:(id)arg4 resolver:(CDUnknownBlockType)arg5 reject:(CDUnknownBlockType)arg6;
- (void)speakWithTTS:(id)arg1 text:(id)arg2 resolver:(CDUnknownBlockType)arg3 reject:(CDUnknownBlockType)arg4;
- (void)viewID:(id)arg1 resolver:(CDUnknownBlockType)arg2 rejecter:(CDUnknownBlockType)arg3;
- (void)executeHttpRequest:(id)arg1 method:(id)arg2 headers:(id)arg3 params:(id)arg4 resolver:(CDUnknownBlockType)arg5 rejecter:(CDUnknownBlockType)arg6;
- (void)request:(id)arg1 url:(id)arg2 method:(id)arg3 headers:(id)arg4 params:(id)arg5 resolver:(CDUnknownBlockType)arg6 rejecter:(CDUnknownBlockType)arg7;
- (void)onRenderStartresolver:(id)arg1 resolver:(CDUnknownBlockType)arg2 rejecter:(CDUnknownBlockType)arg3;
- (void)onRenderFinishresolver:(id)arg1 resolver:(CDUnknownBlockType)arg2 rejecter:(CDUnknownBlockType)arg3;
- (void)stopShakeAccelerometerUpdates:(id)arg1;
- (void)isShakeAccelerometerRunning:(id)arg1 resolver:(CDUnknownBlockType)arg2 reject:(CDUnknownBlockType)arg3;
- (void)startShakeAccelerometerUpdates:(id)arg1 resolver:(CDUnknownBlockType)arg2 reject:(CDUnknownBlockType)arg3;
- (void)stopGyroUpdates:(id)arg1;
- (void)startGyroUpdates:(id)arg1 resolver:(CDUnknownBlockType)arg2 rejecter:(CDUnknownBlockType)arg3;
- (void)getGyroUpdateInterval:(id)arg1 resolver:(CDUnknownBlockType)arg2 rejecter:(CDUnknownBlockType)arg3;
- (void)setGyroUpdateInterval:(id)arg1 updateInterval:(id)arg2 resolver:(CDUnknownBlockType)arg3 rejecter:(CDUnknownBlockType)arg4;
- (void)isGyroRunning:(id)arg1 resolver:(CDUnknownBlockType)arg2 rejecter:(CDUnknownBlockType)arg3;
- (void)stopAccelerometerUpdates:(id)arg1;
- (void)startAccelerometerUpdates:(id)arg1 resolver:(CDUnknownBlockType)arg2 rejecter:(CDUnknownBlockType)arg3;
- (void)getAccelerometerUpdateInterval:(id)arg1 resolver:(CDUnknownBlockType)arg2 rejecter:(CDUnknownBlockType)arg3;
- (void)setAccelerometerUpdateInterval:(id)arg1 updateInterval:(id)arg2 resolver:(CDUnknownBlockType)arg3 rejecter:(CDUnknownBlockType)arg4;
- (void)isAccelerometerRunning:(id)arg1 resolver:(CDUnknownBlockType)arg2 rejecter:(CDUnknownBlockType)arg3;
- (id)motionManager;
- (void)getCacheDir:(id)arg1 resolver:(CDUnknownBlockType)arg2 reject:(CDUnknownBlockType)arg3;
- (void)downloadFile:(id)arg1 urlString:(id)arg2 destination:(id)arg3 needProgress:(_Bool)arg4 resolver:(CDUnknownBlockType)arg5 reject:(CDUnknownBlockType)arg6;
- (void)mkdir:(id)arg1 path:(id)arg2 resolver:(CDUnknownBlockType)arg3 reject:(CDUnknownBlockType)arg4;
- (void)newFile:(id)arg1 path:(id)arg2 resolver:(CDUnknownBlockType)arg3 reject:(CDUnknownBlockType)arg4;
- (void)deleteFile:(id)arg1 path:(id)arg2 resolver:(CDUnknownBlockType)arg3 reject:(CDUnknownBlockType)arg4;
- (void)getFileList:(id)arg1 path:(id)arg2 resolver:(CDUnknownBlockType)arg3 reject:(CDUnknownBlockType)arg4;
- (void)getFile:(id)arg1 path:(id)arg2 resolver:(CDUnknownBlockType)arg3 reject:(CDUnknownBlockType)arg4;
- (void)pack:(id)arg1 sourcePath:(id)arg2 destination:(id)arg3 resolver:(CDUnknownBlockType)arg4 reject:(CDUnknownBlockType)arg5;
- (void)unpack:(id)arg1 sourcePath:(id)arg2 destination:(id)arg3 resolver:(CDUnknownBlockType)arg4 reject:(CDUnknownBlockType)arg5;
- (void)lockToPortrait:(id)arg1;
- (void)lockToLandscape:(id)arg1;
- (void)runStringURI:(id)arg1 uri:(id)arg2 resolver:(CDUnknownBlockType)arg3 rejecter:(CDUnknownBlockType)arg4;
- (void)runAction:(id)arg1 path:(id)arg2 params:(id)arg3 info:(id)arg4 resolver:(CDUnknownBlockType)arg5 rejecter:(CDUnknownBlockType)arg6;
- (void)getSkinColors:(id)arg1 resolver:(CDUnknownBlockType)arg2 reject:(CDUnknownBlockType)arg3;
- (void)multiCacheGet:(id)arg1 name:(id)arg2 keys:(id)arg3 resolver:(CDUnknownBlockType)arg4 rejecter:(CDUnknownBlockType)arg5;
- (void)multiCacheSet:(id)arg1 name:(id)arg2 items:(id)arg3 resolver:(CDUnknownBlockType)arg4 rejecter:(CDUnknownBlockType)arg5;
- (void)multiCacheRemove:(id)arg1 name:(id)arg2 keys:(id)arg3 resolver:(CDUnknownBlockType)arg4 rejecter:(CDUnknownBlockType)arg5;
- (void)removeCacheItem:(id)arg1 name:(id)arg2 key:(id)arg3 resolver:(CDUnknownBlockType)arg4 rejecter:(CDUnknownBlockType)arg5;
- (void)setCacheItem:(id)arg1 name:(id)arg2 key:(id)arg3 value:(id)arg4 resolver:(CDUnknownBlockType)arg5 rejecter:(CDUnknownBlockType)arg6;
- (void)getCacheItem:(id)arg1 name:(id)arg2 key:(id)arg3 def:(id)arg4 resolver:(CDUnknownBlockType)arg5 rejecter:(CDUnknownBlockType)arg6;
- (void)clearCache:(id)arg1 name:(id)arg2 resolver:(CDUnknownBlockType)arg3 rejecter:(CDUnknownBlockType)arg4;
- (void)onMultiGaEvent:(id)arg1 events:(id)arg2;
- (void)onMultiUmengEvent:(id)arg1 events:(id)arg2;
- (void)onGaEvent:(id)arg1 event:(id)arg2 param:(id)arg3;
- (void)onUmengEvent:(id)arg1 event:(id)arg2 param:(id)arg3;
- (void)setStatusBar:(id)arg1 style:(long long)arg2 animated:(_Bool)arg3;
- (void)showToast:(id)arg1 text:(id)arg2;
- (void)getLoadingState:(id)arg1 resolver:(CDUnknownBlockType)arg2 rejecter:(CDUnknownBlockType)arg3;
- (void)setLoadingState:(id)arg1 state:(id)arg2;
- (void)interceptBackPress:(id)arg1 enable:(id)arg2;
- (void)setRightButtonEnable:(id)arg1 enable:(_Bool)arg2;
- (void)setRightButtonTextColor:(id)arg1 textColor:(id)arg2;
- (void)setRightButtonOnClickListener:(id)arg1 eventName:(id)arg2;
- (void)setRightButtonImageUrl:(id)arg1 imageUrl:(id)arg2;
- (void)setRightButtonText:(id)arg1 buttonText:(id)arg2;
- (void)setTitle:(id)arg1 title:(id)arg2;
- (void)requestLayout:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) __weak RCTBridge *bridge;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *methodQueue;
@property(readonly) Class superclass;

@end

