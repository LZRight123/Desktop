//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "IMYURISoloPlayerProtocol-Protocol.h"
#import "IMYVKHysteriaPlayerDataSource-Protocol.h"
#import "IMYVKHysteriaPlayerDelegate-Protocol.h"

@class IMYVKAudioFloatingView, IMYVKHysteriaPlayer, IMYVKWebView, NSArray, NSDictionary, NSError, NSMutableDictionary, NSString, UIImage;

@interface IMYVKAudioPlayer : NSObject <IMYURISoloPlayerProtocol, IMYVKHysteriaPlayerDelegate, IMYVKHysteriaPlayerDataSource>
{
    _Bool _pausedShortcutHide;
    _Bool _forceShortcutShow;
    _Bool _isSoloPlayer;
    _Bool _isTimeSeeking;
    NSDictionary *_rawDict;
    NSString *_webURL;
    IMYVKWebView *_webView;
    CDUnknownBlockType _onStateChangedBlock;
    CDUnknownBlockType _onBufferedChangedBlock;
    CDUnknownBlockType _onPlayTimeChangedBlock;
    IMYVKAudioFloatingView *_floatingView;
    IMYVKHysteriaPlayer *_audioPlayer;
    id _playTimeObserver;
    NSArray *_playerItems;
    long long _currentIndex;
    long long _failedCount;
    long long _repeatMode;
    double _currentBuffered;
    double _currentProgress;
    double _currentTime;
    double _currentDuration;
    double _currentSpeed;
    double _willToSeekTime;
    unsigned long long _currentState;
    UIImage *_coverImage;
    NSArray *_rawItems;
    NSString *_course_cover;
    NSMutableDictionary *_config;
    NSMutableDictionary *_bi_data;
    long long _bi_start;
    long long _bi_seek;
    long long _bi_end;
    NSError *_bi_error;
    unsigned long long _bi_befrom;
}

+ (id)sharedInstance;
+ (id)hiddenFloatingViewInPageNames;
+ (void)addHiddenFloatingViewInPageName:(id)arg1;
@property(nonatomic) unsigned long long bi_befrom; // @synthesize bi_befrom=_bi_befrom;
@property(copy, nonatomic) NSError *bi_error; // @synthesize bi_error=_bi_error;
@property(nonatomic) long long bi_end; // @synthesize bi_end=_bi_end;
@property(nonatomic) long long bi_seek; // @synthesize bi_seek=_bi_seek;
@property(nonatomic) long long bi_start; // @synthesize bi_start=_bi_start;
@property(retain, nonatomic) NSMutableDictionary *bi_data; // @synthesize bi_data=_bi_data;
@property(retain, nonatomic) NSMutableDictionary *config; // @synthesize config=_config;
@property(copy, nonatomic) NSString *course_cover; // @synthesize course_cover=_course_cover;
@property(copy, nonatomic) NSArray *rawItems; // @synthesize rawItems=_rawItems;
@property(retain, nonatomic) UIImage *coverImage; // @synthesize coverImage=_coverImage;
@property(nonatomic) unsigned long long currentState; // @synthesize currentState=_currentState;
@property(nonatomic) _Bool isTimeSeeking; // @synthesize isTimeSeeking=_isTimeSeeking;
@property(nonatomic) double willToSeekTime; // @synthesize willToSeekTime=_willToSeekTime;
@property(nonatomic) double currentSpeed; // @synthesize currentSpeed=_currentSpeed;
@property(nonatomic) double currentDuration; // @synthesize currentDuration=_currentDuration;
@property(nonatomic) double currentTime; // @synthesize currentTime=_currentTime;
@property(nonatomic) double currentProgress; // @synthesize currentProgress=_currentProgress;
@property(nonatomic) double currentBuffered; // @synthesize currentBuffered=_currentBuffered;
@property(nonatomic) _Bool isSoloPlayer; // @synthesize isSoloPlayer=_isSoloPlayer;
@property(nonatomic) _Bool forceShortcutShow; // @synthesize forceShortcutShow=_forceShortcutShow;
@property(nonatomic) _Bool pausedShortcutHide; // @synthesize pausedShortcutHide=_pausedShortcutHide;
@property(nonatomic) long long repeatMode; // @synthesize repeatMode=_repeatMode;
@property(nonatomic) long long failedCount; // @synthesize failedCount=_failedCount;
@property(nonatomic) long long currentIndex; // @synthesize currentIndex=_currentIndex;
@property(copy, nonatomic) NSArray *playerItems; // @synthesize playerItems=_playerItems;
@property(retain, nonatomic) id playTimeObserver; // @synthesize playTimeObserver=_playTimeObserver;
@property(retain, nonatomic) IMYVKHysteriaPlayer *audioPlayer; // @synthesize audioPlayer=_audioPlayer;
@property(retain, nonatomic) IMYVKAudioFloatingView *floatingView; // @synthesize floatingView=_floatingView;
@property(copy, nonatomic) CDUnknownBlockType onPlayTimeChangedBlock; // @synthesize onPlayTimeChangedBlock=_onPlayTimeChangedBlock;
@property(copy, nonatomic) CDUnknownBlockType onBufferedChangedBlock; // @synthesize onBufferedChangedBlock=_onBufferedChangedBlock;
@property(copy, nonatomic) CDUnknownBlockType onStateChangedBlock; // @synthesize onStateChangedBlock=_onStateChangedBlock;
@property(nonatomic) __weak IMYVKWebView *webView; // @synthesize webView=_webView;
@property(copy, nonatomic) NSString *webURL; // @synthesize webURL=_webURL;
@property(copy, nonatomic) NSDictionary *rawDict; // @synthesize rawDict=_rawDict;
- (void).cxx_destruct;
- (void)onActionDidChanged:(unsigned long long)arg1;
- (void)commandCenterChangePlaybackPositionAction:(id)arg1;
- (void)commandCenterPlayOrPauseAction:(id)arg1;
- (void)commandCenterPreviousTrackAction:(id)arg1;
- (void)commandCenterNextTrackAction:(id)arg1;
- (void)commandCenterPauseAction:(id)arg1;
- (void)commandCenterPlayAction:(id)arg1;
- (void)setupApplicationNotificationCenter;
- (void)removeRemoteControlEventHandler;
- (void)setupRemoteControlEventHandler;
- (void)updateRemoteControlShowInfo;
- (void)updateNowPlayingInfo;
- (void)destroyPlayer;
- (_Bool)isPlaying;
- (void)playerToSeekTime:(double)arg1;
- (void)playerToSpeedRate:(double)arg1;
- (void)seekToTime:(double)arg1;
- (void)pause;
- (void)playPrevious;
- (void)playNext;
- (void)playWithIndex:(long long)arg1;
- (void)play;
- (void)willBeginPlay;
- (void)hysteriaPlayerAsyncSetUrlForItemAtIndex:(long long)arg1 preBuffer:(_Bool)arg2;
- (id)hysteriaPlayerURLForItemAtIndex:(long long)arg1 preBuffer:(_Bool)arg2;
- (long long)hysteriaPlayerNumberOfItems;
- (void)hysteriaPlayerItemFailedToPlayEndTime:(id)arg1 error:(id)arg2;
- (void)hysteriaPlayerRateChanged:(_Bool)arg1;
- (void)reachEndShouldShowAlert;
- (void)hysteriaPlayerDidReachEnd;
- (void)hysteriaPlayerCurrentItemChanged:(id)arg1;
- (void)hysteriaPlayerWillChangedAtIndex:(long long)arg1;
- (void)hysteriaPlayerCurrentItemPreloaded:(CDStruct_198678f7)arg1;
- (void)setupPeriodicTimeObserver;
- (void)hysteriaPlayerReadyToPlay:(long long)arg1;
- (void)hysteriaPlayerDidFailed:(long long)arg1 error:(id)arg2;
- (void)updateTimeUI;
- (void)updateTimeInfo;
- (void)shouldShowFloatingView;
- (void)setupWebViewObserver;
- (void)gotoWebPage;
- (void)updateRepeatMode;
- (void)updateCoverUI;
- (void)setupUI;
- (long long)findItemIndexForPlayId:(id)arg1;
- (void)setupData;
- (void)clean;
- (void)setup;
- (void)updateState:(unsigned long long)arg1;
- (void)actionWithInfo:(id)arg1;
- (void)setPlayingInfo:(id)arg1;
- (id)getPlayingInfo;
- (void)setupWithRawDict:(id)arg1;
- (void)setupWithWebView:(id)arg1;
- (id)init;
- (id)solo_info;
- (long long)solo_type;
- (_Bool)solo_playing;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

