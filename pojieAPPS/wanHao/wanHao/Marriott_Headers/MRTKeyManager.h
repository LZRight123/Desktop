//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "MHRVendorLockDelegate-Protocol.h"

@class NSArray, NSMutableArray, NSMutableDictionary, NSString, NSTimer;
@protocol MRTKeyManagerDelegate, OS_dispatch_queue, OS_dispatch_source;

@interface MRTKeyManager : NSObject <MHRVendorLockDelegate>
{
    NSMutableDictionary *_vendorLockManagers;
    NSObject<OS_dispatch_source> *_timer;
    NSObject<OS_dispatch_queue> *_applicationTimerDispatchQueue;
    NSString *_lockVendorArchivePath;
    long long lastKnownVendorRequest;
    NSMutableArray *_completedTimedRequests;
    id <MRTKeyManagerDelegate> _delegate;
    NSString *_contextString;
    CDUnknownBlockType _unlockCallback;
    NSTimer *_unlockTimer;
    long long _activeLockVendorType;
    NSArray *_vendorTypeArray;
    NSMutableArray *_recentErrors;
}

+ (id)mobileKeyCatchAllStringForVendor:(id)arg1 attempts:(long long)arg2 errorMessage:(id)arg3;
+ (id)deviceUUID:(id *)arg1;
+ (id)retrieveUUID:(id *)arg1;
+ (_Bool)storeUUID:(id)arg1 error:(id *)arg2;
+ (id)createFileNamed:(id)arg1 error:(id *)arg2;
+ (void)initialize;
+ (id)shared;
@property(retain, nonatomic) NSMutableArray *recentErrors; // @synthesize recentErrors=_recentErrors;
@property(retain, nonatomic) NSArray *vendorTypeArray; // @synthesize vendorTypeArray=_vendorTypeArray;
@property(nonatomic) long long activeLockVendorType; // @synthesize activeLockVendorType=_activeLockVendorType;
@property(retain, nonatomic) NSTimer *unlockTimer; // @synthesize unlockTimer=_unlockTimer;
@property(copy, nonatomic) CDUnknownBlockType unlockCallback; // @synthesize unlockCallback=_unlockCallback;
@property(copy, nonatomic) NSString *contextString; // @synthesize contextString=_contextString;
@property(nonatomic) __weak id <MRTKeyManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)operationError:(long long)arg1 errorCode:(long long)arg2 additionalData:(id)arg3;
- (id)operationError:(long long)arg1 errorCode:(long long)arg2;
- (id)stringFromVendorType:(long long)arg1;
- (void)recordRecentError:(id)arg1;
@property(readonly, copy, nonatomic) NSArray *vendorRequestQueue;
- (id)finalizeLockRequest:(long long)arg1 forVendor:(long long)arg2;
- (void)trackLockRequest:(long long)arg1 forVendor:(long long)arg2;
- (void)postNotification:(id)arg1 withError:(id)arg2 keyData:(id)arg3;
- (void)didFailToPrintKeyCardWithError:(id)arg1;
- (void)didFailToReleaseLockWithError:(id)arg1;
- (void)didFailToPresentKeyCardEntryWithError:(id)arg1;
- (void)didFailToRetrieveKeyCardsWithError:(id)arg1;
- (void)didFailToUnRegisterDeviceWithError:(id)arg1;
- (void)didFailToRegisterDeviceWithError:(id)arg1;
- (id)dateKeyExpirationForVendor:(long long)arg1 confirmationNumber:(id)arg2;
- (id)dateKeyIssuedForVendor:(long long)arg1 confirmationNumber:(id)arg2;
- (id)vendorSDKVersion:(long long)arg1;
- (void)unlockDoorDidFailWithError:(id)arg1 lockInfo:(id)arg2;
- (void)handleDebugMessage:(id)arg1;
- (void)stopUnlockDoor;
- (void)unlockTimerFired:(id)arg1;
- (void)unlockDoorForVendor:(long long)arg1 withReservationNumber:(id)arg2 issuedDate:(id)arg3 withCallback:(CDUnknownBlockType)arg4;
- (id)fetchLockVendor:(long long)arg1;
- (void)vendorLockManager:(id)arg1 changedToState:(long long)arg2 withInfo:(id)arg3 error:(id)arg4;
- (void)checkIfKeyAvailableForUse;
- (void)requestKeysForReservation:(id)arg1 vendor:(long long)arg2 keyIssued:(id)arg3;
- (void)unregisterDeviceForVendor:(long long)arg1;
- (void)registerDeviceForVendor:(long long)arg1 withVerificationToken:(id)arg2;
- (_Bool)verifyKeyForVendor:(long long)arg1 reservationNumber:(id)arg2 issuedDate:(id)arg3 error:(id *)arg4;
- (_Bool)isUnregisterAvailable:(long long)arg1;
- (_Bool)isVendorSetupComplete:(long long)arg1;
- (id)deviceRegisteredId:(long long)arg1;
- (void)activateVendor:(long long)arg1;
- (_Bool)hasVendorStarted:(long long)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

